!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
10	autopilot.f90	/^10  CONTINUE$/;"	l	subroutine:card_autopilot	file:
10	bspline.f90	/^10     jhi = jlo + inc$/;"	l	subroutine:huntn	file:
10	bspline.f90	/^10  if (nbandl .gt. 0) go to 30$/;"	l	subroutine:banfac	file:
10	command_line_options.f90	/^10   CONTINUE$/;"	l	subroutine:get_command_line	file:
10	functionals.f90	/^ 10         CONTINUE$/;"	l	function:TayExp	file:
10	inpfile.f90	/^10   WRITE(stdout,'(5x,"Input file > ")', advance="NO")$/;"	l	subroutine:get_file	file:
10	io_base.f90	/^10       CONTINUE $/;"	l	subroutine:read_rhog	file:
10	linpack.f90	/^   10       CONTINUE$/;"	l	subroutine:ZGEFA	file:
10	linpack.f90	/^   10       IF (CABS1(DET(1)) .GE. 1.0D0) GO TO 20$/;"	l	subroutine:ZGEDI	file:
10	more_functionals.f90	/^ 10         continue$/;"	l	subroutine:expxc	file:
10	parser.f90	/^10     tend = .TRUE.$/;"	l	subroutine:read_line	file:
10	read_cards.f90	/^10     CALL errore ('card_kpoints', ' end of file while reading ' &$/;"	l	subroutine:card_kpoints	file:
10	read_uspp.f90	/^10           irinner = ir+1$/;"	l	subroutine:fit_qrl	file:
10	sort.f90	/^10 continue  $/;"	l	subroutine:hpsort	file:
10	sort.f90	/^10 continue  $/;"	l	subroutine:ihpsort	file:
10	test_input_file.f90	/^10 WRITE (0,"('from test_input_xml: input file not opened or empty')")$/;"	l	function:test_input_xml	file:
10	tsvdw.f90	/^10  DO j=1,nproc_image$/;"	l	subroutine:tsvdw_para_init	file:
10	write_upf_v2.f90	/^10          READ (u_input, '(A)',end=20,err=25) line$/;"	l	subroutine:write_info	file:
10	ylmr2.f90	/^10 continue$/;"	l	subroutine:ylmr2	file:
100	bz_form.f90	/^100 CONTINUE   $/;"	l	subroutine:find_vertices	file:
100	linpack.f90	/^  100    CONTINUE$/;"	l	subroutine:ZGEDI	file:
100	mdiis.f90	/^100   CONTINUE$/;"	l	subroutine:inverse	file:
100	mdiis.f90	/^100   CONTINUE$/;"	l	subroutine:solve_mdiis	file:
100	more_functionals.f90	/^ 100     continue$/;"	l	subroutine:ggablyp4	file:
100	more_functionals.f90	/^ 100     continue$/;"	l	subroutine:ggapw	file:
100	more_functionals.f90	/^ 100     continue$/;"	l	subroutine:ggapwold	file:
100	plot_io.f90	/^100 call errore ('plot_io', 'opening file '\/\/TRIM(filplot), abs (ios) )$/;"	l	subroutine:plot_io	file:
100	plot_io.f90	/^100 call errore ('plot_io', 'opening file '\/\/TRIM(filplot), abs (ios) )$/;"	l	subroutine:read_io_header	file:
100	radial_grids.f90	/^100  format(5x,'stop in "hartree": k=',i3,'  nst=',i3)$/;"	l	subroutine:hartree	file:
100	read_cards.f90	/^100   CALL read_line( input_line, end_of_file=tend )$/;"	l	subroutine:read_cards	file:
100	read_upf_v1.f90	/^100  RETURN$/;"	l	subroutine:read_pseudo_ppinfo	file:
100	read_upf_v1.f90	/^100  call errore ('read_pseudo_header', 'Reading pseudo file', 1 )$/;"	l	subroutine:read_pseudo_header	file:
100	read_upf_v1.f90	/^100 CALL errore ( 'read_pseudo_gipaw', 'Reading pseudo file', 1 )$/;"	l	subroutine:read_pseudo_gipaw	file:
100	read_upf_v1.f90	/^100 CALL errore ( 'read_pseudo_gipaw_core_orbitals', 'Reading pseudo file', 1 )$/;"	l	subroutine:read_pseudo_gipaw_core_orbitals	file:
100	read_upf_v1.f90	/^100 CALL errore ( 'read_pseudo_gipaw_local', 'Reading pseudo file', 1 )$/;"	l	subroutine:read_pseudo_gipaw_local	file:
100	read_upf_v1.f90	/^100 CALL errore ( 'read_pseudo_gipaw_orbitals', 'Reading pseudo file', 1 )$/;"	l	subroutine:read_pseudo_gipaw_orbitals	file:
100	read_upf_v1.f90	/^100 call errore ('read_pseudo_addinfo','Reading pseudo file', 1)$/;"	l	subroutine:read_pseudo_addinfo	file:
100	read_upf_v1.f90	/^100 call errore ('read_pseudo_local','Reading pseudo file', 1)$/;"	l	subroutine:read_pseudo_local	file:
100	read_upf_v1.f90	/^100 call errore ('read_pseudo_mesh', 'Reading pseudo file (R) for '\/\/upf%psd,1)$/;"	l	subroutine:read_pseudo_mesh	file:
100	read_upf_v1.f90	/^100 call errore ('read_pseudo_nl', 'Reading pseudo file (BETA)', 1 )  $/;"	l	subroutine:read_pseudo_nl	file:
100	read_upf_v1.f90	/^100 call errore ('read_pseudo_nlcc', 'Reading pseudo file', 1)$/;"	l	subroutine:read_pseudo_nlcc	file:
100	read_upf_v1.f90	/^100 call errore ('read_pseudo_pswfc', 'Reading pseudo file', 1)$/;"	l	subroutine:read_pseudo_pswfc	file:
100	read_upf_v1.f90	/^100 call errore ('read_pseudo_rhoatom','Reading pseudo file', 1)$/;"	l	subroutine:read_pseudo_rhoatom	file:
100	read_uspp.f90	/^100 call errore('readrrkj','Reading pseudo file',abs(ios))$/;"	l	subroutine:readrrkj	file:
100	read_uspp.f90	/^100 call errore('readvan','error reading Q_L(r)', 1 )$/;"	l	subroutine:fit_qrl	file:
100	read_uspp.f90	/^100 call errore('readvan','error reading pseudo file', abs(ios) )$/;"	l	subroutine:readvan	file:
100	recips.f90	/^100 do iperm = 1, 3$/;"	l	subroutine:recips	file:
100	write_upf_schema.f90	/^100   CALL errore('write_upf_schema::write_info', 'Writing pseudo file', 1)$/;"	l	subroutine:write_info	file:
100	write_upf_v2.f90	/^100   CALL errore('write_upf_v2::write_info', 'Writing pseudo file', 1)$/;"	l	subroutine:write_info	file:
1000	bfgs_module.f90	/^1000  stop_bfgs = conv_bfgs$/;"	l	subroutine:bfgs	file:
1000	read_uspp.f90	/^1000 format(4x,'|    new generation scheme:',32x,'|')$/;"	l	subroutine:readvan	file:
101	read_upf_v1.f90	/^101 call errore ('read_pseudo_mesh', 'Reading pseudo file (RAB) for '\/\/upf%psd,2)  $/;"	l	subroutine:read_pseudo_mesh	file:
101	read_upf_v1.f90	/^101 call errore ('read_pseudo_nl', 'Reading pseudo file (DIJ)',  2 )  $/;"	l	subroutine:read_pseudo_nl	file:
102	read_upf_v1.f90	/^102 call errore ('read_pseudo_nl', 'Reading pseudo file (QIJ)',  3 )$/;"	l	subroutine:read_pseudo_nl	file:
103	read_upf_v1.f90	/^103 call errore ('read_pseudo_nl', 'Reading pseudo file (RINNER)',4)$/;"	l	subroutine:read_pseudo_nl	file:
104	read_upf_v1.f90	/^104 call errore ('read_pseudo_nl', 'Reading pseudo file (qqq)',  5 )$/;"	l	subroutine:read_pseudo_nl	file:
105	cell_base.f90	/^105 format(\/,3X,'Simulation Cell Parameters (from input)')$/;"	l	subroutine:cell_dyn_init	file:
105	read_upf_v1.f90	/^105 call errore ('read_pseudo_nl', 'Reading pseudo file (qfunc)',6 )$/;"	l	subroutine:read_pseudo_nl	file:
106	read_upf_v1.f90	/^106 call errore ('read_pseudo_nl', 'Reading pseudo file (qfcoef)',7)$/;"	l	subroutine:read_pseudo_nl	file:
110	cell_base.f90	/^110 format(  3X,'external pressure       = ',f15.2,' [KBar]')$/;"	l	subroutine:cell_dyn_init	file:
110	linpack.f90	/^  110       CONTINUE$/;"	l	subroutine:ZGEDI	file:
1100	read_uspp.f90	/^1100 format(4x,'|    nbeta = ',i2,5x,'kkbeta =',i5,5x,'rcloc =',f10.4,4x,&$/;"	l	subroutine:readvan	file:
120	cell_base.f90	/^120 format(3X,'wmass (read from input) = ',f15.2,' [AU]')$/;"	l	subroutine:cell_dyn_init	file:
120	linpack.f90	/^  120       CONTINUE$/;"	l	subroutine:ZGEDI	file:
120	read_cards.f90	/^120      CONTINUE$/;"	l	subroutine:read_cards	file:
1200	read_uspp.f90	/^1200   format(4x,'|',5x,i2,6x,i2,4x,2f7.2,25x,'|')$/;"	l	subroutine:readvan	file:
130	cell_base.f90	/^130 format(3X,'wmass (calculated)      = ',f15.2,' [AU]')$/;"	l	subroutine:cell_dyn_init	file:
130	linpack.f90	/^  130    CONTINUE$/;"	l	subroutine:ZGEDI	file:
1300	read_uspp.f90	/^1300 format (4x,60('='))$/;"	l	subroutine:readvan	file:
140	linpack.f90	/^  140    CONTINUE$/;"	l	subroutine:ZGEDI	file:
15	command_line_options.f90	/^15   CALL infomsg ('get_command_line', 'unexpected argument # ' \/\/ &$/;"	l	subroutine:get_command_line	file:
15	parser.f90	/^15     terr = .TRUE.$/;"	l	subroutine:read_line	file:
150	linpack.f90	/^  150 CONTINUE$/;"	l	subroutine:ZGEDI	file:
20	autopilot.f90	/^20  CONTINUE$/;"	l	subroutine:add_rule	file:
20	bspline.f90	/^20     jlo = jhi - inc$/;"	l	subroutine:huntn	file:
20	bspline.f90	/^20  jp1 = j + 1$/;"	l	subroutine:bsplvb	file:
20	command_line_options.f90	/^20   CONTINUE$/;"	l	subroutine:get_command_line	file:
20	dist.f90	/^20 CONTINUE$/;"	l	subroutine:run_dist	file:
20	inpfile.f90	/^20 WRITE(stdout,'(A,": reading file name ",A)') TRIM(prgname), TRIM(input_file)$/;"	l	subroutine:get_file	file:
20	linpack.f90	/^   20          CONTINUE$/;"	l	subroutine:ZGEFA	file:
20	linpack.f90	/^   20       CONTINUE$/;"	l	subroutine:ZGEDI	file:
20	more_functionals.f90	/^ 20         continue$/;"	l	subroutine:expxc	file:
20	open_close_input_file.f90	/^20   CLOSE ( UNIT=stdtmp, STATUS='keep' )$/;"	l	function:open_input_file	file:
20	parser.f90	/^20     CONTINUE$/;"	l	subroutine:read_line	file:
20	read_cards.f90	/^20     CALL errore ('card_kpoints', ' error while reading ' &$/;"	l	subroutine:card_kpoints	file:
20	rgen.f90	/^20   indsw = irr (ir)$/;"	l	subroutine:rgen	file:
20	tsvdw.f90	/^  20 CONTINUE$/;"	l	subroutine:tsvdw_para_init	file:
20	write_upf_schema.f90	/^20             EXIT read_write_loop$/;"	l	subroutine:write_info	file:
20	write_upf_v2.f90	/^20          char_buff = TRIM(char_buff) \/\/ new_line('a') $/;"	l	subroutine:write_info	file:
200	dist.f90	/^ 200  FORMAT(2i4,a4,'-',a3,f10.5,' A ',a1)$/;"	l	subroutine:run_dist	file:
200	read_upf_v1.f90	/^200  continue$/;"	l	subroutine:read_pseudo_nl	file:
200	read_upf_v1.f90	/^200 return$/;"	l	subroutine:read_upf_v1	file:
200	read_uspp.f90	/^200 format (\/4x,60('=')\/4x,'|  pseudopotential report',               &$/;"	l	subroutine:readvan	file:
210	cell_base.f90	/^210   format(3X,'initial cell from CELL_PARAMETERS card')$/;"	l	subroutine:cell_dyn_init	file:
210	cell_base.f90	/^210 format(3X,'Simulation cell parameters with the new cell:')$/;"	l	subroutine:cell_base_reinit	file:
220	cell_base.f90	/^220   format(3X,3F14.8)$/;"	l	subroutine:cell_dyn_init	file:
220	cell_base.f90	/^220 format(3X,3F14.8)$/;"	l	subroutine:cell_base_reinit	file:
25	write_upf_schema.f90	/^25             CALL infomsg('write_upf_schema::write_inputfile', 'problem writing input data')$/;"	l	subroutine:write_info	file:
25	write_upf_v2.f90	/^25          CALL infomsg('write_upf_v2::write_inputfile', 'problem writing input data')$/;"	l	subroutine:write_info	file:
250	dist.f90	/^ 250  FORMAT(' atom ',i3,' species ',a3,': neighbors at ',4f8.3,' A')$/;"	l	subroutine:run_dist	file:
30	bspline.f90	/^30   if (xveci .lt. xknot(leftx+1)) go to 40$/;"	l	subroutine:dbsint	file:
30	bspline.f90	/^30   if (xyveci .lt. xyknot(left+1)) go to 40$/;"	l	subroutine:spli2d	file:
30	bspline.f90	/^30   if (xyzveci .lt. xyzknot(left+1)) go to 40$/;"	l	subroutine:spli3d	file:
30	bspline.f90	/^30  if (jhi-jlo.eq.1) return$/;"	l	subroutine:huntn	file:
30	bspline.f90	/^30  if (nbandu .gt. 0)  goto 50$/;"	l	subroutine:banslv	file:
30	bspline.f90	/^30  if (nbandu .gt. 0) go to 60$/;"	l	subroutine:banfac	file:
30	linpack.f90	/^   30       CONTINUE$/;"	l	subroutine:ZGEFA	file:
30	linpack.f90	/^   30       IF (CABS1(DET(1)) .LT. TEN) GO TO 40$/;"	l	subroutine:ZGEDI	file:
30	open_close_input_file.f90	/^30 open_input_file = 2$/;"	l	function:open_input_file	file:
30	parser.f90	/^30     READ (parse_unit, fmt='(A256)', ERR=15, END=10) line$/;"	l	subroutine:read_line	file:
30	tsvdw.f90	/^30          CONTINUE$/;"	l	subroutine:tsvdw_unique_pair	file:
300	cell_base.f90	/^300 FORMAT( 3X, 'ibrav = ',I4)$/;"	l	subroutine:cell_dyn_init	file:
300	dist.f90	/^ 300  FORMAT(9x,'d(center):',f6.3,' A  angles  :',6f8.1)$/;"	l	subroutine:run_dist	file:
300	read_ncpp.f90	/^300 call errore ('read_ncpp', 'pseudo file is empty or wrong', abs (np) )$/;"	l	subroutine:read_ncpp	file:
300	read_upf_v1.f90	/^300 call errore ('scan_begin', 'No '\/\/string\/\/' block', abs (ios) )  $/;"	l	subroutine:scan_begin	file:
300	read_upf_v1.f90	/^300 call errore ('scan_end', &$/;"	l	subroutine:scan_end	file:
300	read_uspp.f90	/^300 format (4x,'|  ',1a30,3i4,13x,' |' \/4x,60('-'))$/;"	l	subroutine:readvan	file:
305	cell_base.f90	/^305 FORMAT( 3X, 'alat  = ',F14.8)$/;"	l	subroutine:cell_base_reinit	file:
305	cell_base.f90	/^305 FORMAT( 3X, 'alat  = ',F14.8)$/;"	l	subroutine:cell_dyn_init	file:
310	cell_base.f90	/^310 FORMAT( 3X, 'a1    = ',3F14.8)$/;"	l	subroutine:cell_base_reinit	file:
310	cell_base.f90	/^310 FORMAT( 3X, 'a1    = ',3F14.8)$/;"	l	subroutine:cell_dyn_init	file:
320	cell_base.f90	/^320 FORMAT( 3X, 'a2    = ',3F14.8)$/;"	l	subroutine:cell_base_reinit	file:
320	cell_base.f90	/^320 FORMAT( 3X, 'a2    = ',3F14.8)$/;"	l	subroutine:cell_dyn_init	file:
330	cell_base.f90	/^330 FORMAT( 3X, 'a3    = ',3F14.8)$/;"	l	subroutine:cell_base_reinit	file:
330	cell_base.f90	/^330 FORMAT( 3X, 'a3    = ',3F14.8)$/;"	l	subroutine:cell_dyn_init	file:
3334	environment.f90	/^3334 FORMAT(3X,A60,\/)$/;"	l	subroutine:closing_message	file:
3335	environment.f90	/^3335 FORMAT('=',78('-'),'=')$/;"	l	subroutine:closing_message	file:
3335	environment.f90	/^3335 FORMAT('=',78('-'),'=')$/;"	l	subroutine:environment_end	file:
340	cell_base.f90	/^340 FORMAT( 3X, 'omega = ',F14.8)$/;"	l	subroutine:cell_base_reinit	file:
340	cell_base.f90	/^340 FORMAT( 3X, 'omega = ',F16.8)$/;"	l	subroutine:cell_dyn_init	file:
350	cell_base.f90	/^350 FORMAT( 3X, 'b1    = ',3F14.8)$/;"	l	subroutine:cell_base_reinit	file:
350	cell_base.f90	/^350 FORMAT( 3X, 'b1    = ',3F14.8)$/;"	l	subroutine:cell_dyn_init	file:
360	cell_base.f90	/^360 FORMAT( 3X, 'b2    = ',3F14.8)$/;"	l	subroutine:cell_base_reinit	file:
360	cell_base.f90	/^360 FORMAT( 3X, 'b2    = ',3F14.8)$/;"	l	subroutine:cell_dyn_init	file:
370	cell_base.f90	/^370 FORMAT( 3X, 'b3    = ',3F14.8)$/;"	l	subroutine:cell_base_reinit	file:
370	cell_base.f90	/^370 FORMAT( 3X, 'b3    = ',3F14.8)$/;"	l	subroutine:cell_dyn_init	file:
40	autopilot.f90	/^40  if (assigned) then$/;"	l	subroutine:assign_rule	file:
40	bspline.f90	/^40   call bsplvb (xknot,nx+kx,kx,1,xveci,leftx,bcoef)$/;"	l	subroutine:dbsint	file:
40	bspline.f90	/^40   call bsplvb(xyknot,n+k,k,1,xyveci,left,work2)$/;"	l	subroutine:spli2d	file:
40	bspline.f90	/^40   call bsplvb(xyzknot,n+k,k,1,xyzveci,left,work2)$/;"	l	subroutine:spli3d	file:
40	linpack.f90	/^   40       CONTINUE$/;"	l	subroutine:ZGEDI	file:
40	linpack.f90	/^   40    CONTINUE$/;"	l	subroutine:ZGEFA	file:
40	tsvdw.f90	/^40    CONTINUE$/;"	l	subroutine:tsvdw_unique_pair	file:
400	gth.f90	/^400 call errore ('readgth', 'pseudo file is empty or wrong', abs (np) )$/;"	l	subroutine:readgth	file:
400	read_uspp.f90	/^400 format (4x,'|  ',2a20,' exchange-corr  |')$/;"	l	subroutine:readvan	file:
5	read_ncpp.f90	/^5 upf%kkbeta = 2 * ( ( upf%kkbeta + 1 ) \/ 2) - 1$/;"	l	subroutine:read_ncpp	file:
5	read_pseudo.f90	/^5    msh (nt) = 2 * ( (msh (nt) + 1) \/ 2) - 1$/;"	l	subroutine:readpp	file:
50	autopilot.f90	/^50  CONTINUE$/;"	l	subroutine:parse_mailbox	file:
50	bspline.f90	/^50  do i = nrow, 2, -1$/;"	l	subroutine:banslv	file:
50	dist.f90	/^  50  FORMAT('Distances between atoms, up to dmax=',f6.2,' A   (* = with lattice translation)',\/,'  #1  #2   bond       d')$/;"	l	subroutine:run_dist	file:
50	linpack.f90	/^   50    CONTINUE$/;"	l	subroutine:ZGEDI	file:
50	linpack.f90	/^   50    CONTINUE$/;"	l	subroutine:ZGEFA	file:
500	read_uspp.f90	/^500 format (4x,'|  z =',f5.0,4x,'zv(',i2,') =',f5.0,4x,'exfact =',    &$/;"	l	subroutine:readvan	file:
59	dist.f90	/^  59  FORMAT(\/,80('*'),\/,' Fatal error: ',i3,' overlapping atoms (see file dist.out)',\/,80('*'))$/;"	l	subroutine:run_dist	file:
60	bspline.f90	/^60  do i = 1, nrowm1$/;"	l	subroutine:banfac	file:
60	dist.f90	/^  60  FORMAT(' Atom',i4,' and',i4,' overlap')$/;"	l	subroutine:run_dist	file:
60	linpack.f90	/^   60    CONTINUE$/;"	l	subroutine:ZGEDI	file:
60	linpack.f90	/^   60 CONTINUE$/;"	l	subroutine:ZGEFA	file:
600	ions_base.f90	/^ 600     FORMAT(\/\/,3X,'Randomization of SCALED ionic coordinates')$/;"	l	subroutine:randpos	file:
600	read_uspp.f90	/^600 format (4x,'|  ifpcor = ',i2,10x,' atomic energy =',f10.5,        &$/;"	l	subroutine:readvan	file:
61	dist.f90	/^  61  FORMAT(' Atom',i4,' and',i4,' overlap (with lattice translation)')$/;"	l	subroutine:run_dist	file:
610	ions_base.f90	/^ 610     FORMAT(   3X,'Species ',I3,' atoms = ',I4)$/;"	l	subroutine:randpos	file:
615	ions_base.f90	/^ 615     FORMAT(   3X,'     Old Positions               New Positions')$/;"	l	subroutine:randpos	file:
62	dist.f90	/^  62  FORMAT(\/,80('*'),\/,' Serious warning: more than ',i4,' distances smaller than',f6.2,' A found',\/,80('*'))$/;"	l	subroutine:run_dist	file:
620	ions_base.f90	/^ 620     FORMAT(   3X,3F10.6,2X,3F10.6)$/;"	l	subroutine:randpos	file:
70	dist.f90	/^  70  FORMAT(\/,'Nearest neighbors for each atom (up to ',i1,')',\/)$/;"	l	subroutine:run_dist	file:
70	linpack.f90	/^   70 CONTINUE$/;"	l	subroutine:ZGEDI	file:
70	linpack.f90	/^   70 CONTINUE$/;"	l	subroutine:ZGEFA	file:
700	read_uspp.f90	/^700 format(4x,'|  index    orbital      occupation    energy',14x,'|')$/;"	l	subroutine:readvan	file:
80	linpack.f90	/^   80       CONTINUE$/;"	l	subroutine:ZGEDI	file:
800	read_uspp.f90	/^800 format(4x,'|',i5,i11,5x,f10.2,f12.2,15x,'|')$/;"	l	subroutine:readvan	file:
90	linpack.f90	/^   90       CONTINUE$/;"	l	subroutine:ZGEDI	file:
900	bspline.f90	/^900 if (w(middle,nrow) .ne. 0._dp) return$/;"	l	subroutine:banfac	file:
900	read_uspp.f90	/^900    format('(4x,"|  rinner =",',i1,'f8.4,',i2,'x,"|")')$/;"	l	subroutine:readvan	file:
99	bspline.f90	/^99  b(1) = b(1) \/ w(middle,1)$/;"	l	subroutine:banslv	file:
998	bspline.f90	/^998 write(errmsg,*) "i with knot(i) <= x\/y < knot(i+1) required: knot(1),knot(n+k)=", &$/;"	l	subroutine:spli2d	file:
998	bspline.f90	/^998 write(errmsg,*) "i with knot(i) <= x\/y\/z < knot(i+1) required: xyzknot(1),xyzknot(n+k)=", &$/;"	l	subroutine:spli3d	file:
998	bspline.f90	/^998 write(errmsg,*) "xknot(ix) <= xknot(ix+1) required: ix,xknot(ix),xknot(ix+1)=", &$/;"	l	subroutine:dbsint	file:
999	bspline.f90	/^999 iflag = 2$/;"	l	subroutine:banfac	file:
AMU_AU	constants.f90	/^  REAL(DP), PARAMETER :: AMU_AU /;"	v	module:constants
AMU_RY	constants.f90	/^  REAL(DP), PARAMETER :: AMU_RY /;"	v	module:constants
AMU_SI	constants.f90	/^  REAL(DP), PARAMETER :: AMU_SI /;"	v	module:constants
ANGSTROM_AU	constants.f90	/^  REAL(DP), PARAMETER :: ANGSTROM_AU /;"	v	module:constants
AUTOEV	constants.f90	/^  REAL(DP), PARAMETER :: AUTOEV /;"	v	module:constants
AU_DEBYE	constants.f90	/^  REAL(DP), PARAMETER :: AU_DEBYE /;"	v	module:constants
AU_GPA	constants.f90	/^  REAL(DP), PARAMETER :: AU_GPA /;"	v	module:constants
AU_PS	constants.f90	/^  REAL(DP), PARAMETER :: AU_PS /;"	v	module:constants
AU_SEC	constants.f90	/^  REAL(DP), PARAMETER :: AU_SEC /;"	v	module:constants
AU_TERAHERTZ	constants.f90	/^  REAL(DP), PARAMETER :: AU_TERAHERTZ /;"	v	module:constants
AU_TO_OHMCMM1	constants.f90	/^  REAL(DP), PARAMETER :: AU_TO_OHMCMM1 /;"	v	module:constants
AVOGADRO	constants.f90	/^  REAL(DP), PARAMETER :: AVOGADRO /;"	v	module:constants
A_pen	input_parameters.f90	/^        REAL(DP) :: A_pen(/;"	v	module:input_parameters
BOHR_RADIUS_ANGS	constants.f90	/^  REAL(DP), PARAMETER :: BOHR_RADIUS_ANGS /;"	v	module:constants
BOHR_RADIUS_CM	constants.f90	/^  REAL(DP), PARAMETER :: BOHR_RADIUS_CM /;"	v	module:constants
BOHR_RADIUS_SI	constants.f90	/^  REAL(DP), PARAMETER :: BOHR_RADIUS_SI /;"	v	module:constants
B_field	input_parameters.f90	/^        REAL(DP) :: B_field(/;"	v	module:input_parameters
BerryPhase	qes_types_module.f90	/^    TYPE(BerryPhaseO/;"	k	type:outputElectricField_type
BerryPhaseOutput_type	qes_types_module.f90	/^  TYPE :: BerryPhaseOutput_type$/;"	t	module:qes_types_module
BerryPhase_ispresent	qes_types_module.f90	/^    LOGICAL  :: BerryPhase_ispresent /;"	k	type:outputElectricField_type
C6AAeff	tsvdw.f90	/^REAL(DP), DIMENSION(:), ALLOCATABLE, PRIVATE :: C6AAeff /;"	v	module:tsvdw_module
C6AAfree	tsvdw.f90	/^REAL(DP), DIMENSION(:), ALLOCATABLE, PRIVATE :: C6AAfree /;"	v	module:tsvdw_module
C6ABeff	tsvdw.f90	/^REAL(DP), DIMENSION(:,:), ALLOCATABLE, PRIVATE :: C6ABeff /;"	v	module:tsvdw_module
C6ABfree	tsvdw.f90	/^REAL(DP), DIMENSION(:,:), ALLOCATABLE, PRIVATE :: C6ABfree /;"	v	module:tsvdw_module
C6_i	mm_dispersion.f90	/^  REAL(DP)                  :: C6_i(/;"	v	module:london_module
C6_ij	mm_dispersion.f90	/^  REAL ( DP ) , ALLOCATABLE :: R_vdw ( : ) ,     &$/;"	v	module:london_module
C_AU	constants.f90	/^  REAL(DP), PARAMETER :: C_AU /;"	v	module:constants
C_SI	constants.f90	/^  REAL(DP), PARAMETER :: C_SI /;"	v	module:constants
C_value	xc_rVV10.f90	/^  real(dp) :: C_value /;"	v	module:rVV10
CubSplCoeff	tsvdw.f90	/^  SUBROUTINE CubSplCoeff(/;"	s	module:tsvdw_module
DATE	qes_types_module.f90	/^    CHARACTER(len=256) :: DATE$/;"	k	type:closed_type
DATE	qes_types_module.f90	/^    CHARACTER(len=256) :: DATE$/;"	k	type:created_type
DEBYE_SI	constants.f90	/^  REAL(DP), PARAMETER :: DEBYE_SI /;"	v	module:constants
DIP_DEBYE	constants.f90	/^  REAL(DP), PARAMETER :: DIP_DEBYE /;"	v	module:constants
DP	coulomb_vcut.f90	/^  INTEGER,  PARAMETER :: DP=/;"	v	module:coulomb_vcut_module
DP	kind.f90	/^      INTEGER, PARAMETER :: DP /;"	v	module:kinds
ELECTRONMASS_SI	constants.f90	/^  REAL(DP), PARAMETER :: ELECTRONMASS_SI /;"	v	module:constants
ELECTRONVOLT_SI	constants.f90	/^  REAL(DP), PARAMETER :: ELECTRONVOLT_SI /;"	v	module:constants
ELECTRON_SI	constants.f90	/^  REAL(DP), PARAMETER :: ELECTRON_SI /;"	v	module:constants
EPSNOUGHT_SI	constants.f90	/^  REAL(DP), PARAMETER :: EPSNOUGHT_SI /;"	v	module:constants
EVTONM	constants.f90	/^  REAL(DP), PARAMETER :: EVTONM /;"	v	module:constants
EXPINT	expint.f90	/^      FUNCTION EXPINT(/;"	f
EtsvdW	tsvdw.f90	/^REAL(DP), PUBLIC :: EtsvdW /;"	v	module:tsvdw_module
F90SOCKETS	fsockets.f90	/^   MODULE F90SOCKETS$/;"	m
FCP_force	qes_types_module.f90	/^    REAL(DP) :: FCP_force$/;"	k	type:output_type
FCP_force	qes_types_module.f90	/^    REAL(DP) :: FCP_force$/;"	k	type:step_type
FCP_force_ispresent	qes_types_module.f90	/^    LOGICAL  :: FCP_force_ispresent /;"	k	type:output_type
FCP_force_ispresent	qes_types_module.f90	/^    LOGICAL  :: FCP_force_ispresent /;"	k	type:step_type
FCP_tot_charge	qes_types_module.f90	/^    REAL(DP) :: FCP_tot_charge$/;"	k	type:output_type
FCP_tot_charge	qes_types_module.f90	/^    REAL(DP) :: FCP_tot_charge$/;"	k	type:step_type
FCP_tot_charge_ispresent	qes_types_module.f90	/^    LOGICAL  :: FCP_tot_charge_ispresent /;"	k	type:output_type
FCP_tot_charge_ispresent	qes_types_module.f90	/^    LOGICAL  :: FCP_tot_charge_ispresent /;"	k	type:step_type
FPI	coulomb_vcut.f90	/^  REAL(DP), PARAMETER :: FPI /;"	v	module:coulomb_vcut_module
Fs	xc_vdW_DF.f90	/^  function Fs(/;"	f	module:vdW_DF
FtsvdW	tsvdw.f90	/^REAL(DP), DIMENSION(:,:), ALLOCATABLE, PUBLIC :: FtsvdW /;"	v	module:tsvdw_module
GetVdWParam	tsvdw.f90	/^  SUBROUTINE GetVdWParam(/;"	s	module:tsvdw_module
H5_REALDP_TYPE	qeh5_module.f90	/^  INTEGER(HID_T)   :: H5_REALDP_TYPE /;"	v	module:qeh5_base_module
HARTREE_SI	constants.f90	/^  REAL(DP), PARAMETER :: HARTREE_SI /;"	v	module:constants
HDF5_type	hdf5_qe.f90	/^  TYPE HDF5_type$/;"	t	module:hdf5_qe
H_PLANCK_SI	constants.f90	/^  REAL(DP), PARAMETER :: H_PLANCK_SI /;"	v	module:constants
HtsvdW	tsvdw.f90	/^REAL(DP), DIMENSION(:,:), ALLOCATABLE, PUBLIC :: HtsvdW /;"	v	module:tsvdw_module
HubbardCommon	qes_types_module.f90	/^    REAL(DP) :: HubbardCommon$/;"	k	type:HubbardCommon_type
HubbardCommon_type	qes_types_module.f90	/^  TYPE :: HubbardCommon_type$/;"	t	module:qes_types_module
HubbardJ	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: HubbardJ$/;"	k	type:HubbardJ_type
HubbardJ_type	qes_types_module.f90	/^  TYPE :: HubbardJ_type$/;"	t	module:qes_types_module
Hubbard_J	qes_types_module.f90	/^    TYPE(HubbardJ_type), DIMENSION(:), ALLOCATABLE :: Hubbard_J$/;"	k	type:dftU_type
Hubbard_J0	qes_types_module.f90	/^    TYPE(HubbardCommon_type), DIMENSION(:), ALLOCATABLE :: Hubbard_J0$/;"	k	type:dftU_type
Hubbard_J0_ispresent	qes_types_module.f90	/^    LOGICAL  :: Hubbard_J0_ispresent /;"	k	type:dftU_type
Hubbard_J_ispresent	qes_types_module.f90	/^    LOGICAL  :: Hubbard_J_ispresent /;"	k	type:dftU_type
Hubbard_U	qes_types_module.f90	/^    TYPE(HubbardCommon_type), DIMENSION(:), ALLOCATABLE :: Hubbard_U$/;"	k	type:dftU_type
Hubbard_U_ispresent	qes_types_module.f90	/^    LOGICAL  :: Hubbard_U_ispresent /;"	k	type:dftU_type
Hubbard_alpha	qes_types_module.f90	/^    TYPE(HubbardCommon_type), DIMENSION(:), ALLOCATABLE :: Hubbard_alpha$/;"	k	type:dftU_type
Hubbard_alpha_ispresent	qes_types_module.f90	/^    LOGICAL  :: Hubbard_alpha_ispresent /;"	k	type:dftU_type
Hubbard_beta	qes_types_module.f90	/^    TYPE(HubbardCommon_type), DIMENSION(:), ALLOCATABLE :: Hubbard_beta$/;"	k	type:dftU_type
Hubbard_beta_ispresent	qes_types_module.f90	/^    LOGICAL  :: Hubbard_beta_ispresent /;"	k	type:dftU_type
Hubbard_ns	qes_types_module.f90	/^    REAL(DP), DIMENSION(:), ALLOCATABLE :: Hubbard_ns$/;"	k	type:Hubbard_ns_type
Hubbard_ns	qes_types_module.f90	/^    TYPE(Hubbard_ns_/;"	k	type:dftU_type
Hubbard_ns_ispresent	qes_types_module.f90	/^    LOGICAL  :: Hubbard_ns_ispresent /;"	k	type:dftU_type
Hubbard_ns_type	qes_types_module.f90	/^  TYPE :: Hubbard_ns_type$/;"	t	module:qes_types_module
K_BOLTZMANN_AU	constants.f90	/^  REAL(DP), PARAMETER :: K_BOLTZMANN_AU /;"	v	module:constants
K_BOLTZMANN_RY	constants.f90	/^  REAL(DP), PARAMETER :: K_BOLTZMANN_RY /;"	v	module:constants
K_BOLTZMANN_SI	constants.f90	/^  REAL(DP), PARAMETER :: K_BOLTZMANN_SI /;"	v	module:constants
LIA	tsvdw.f90	/^REAL(DP), DIMENSION(:,:), ALLOCATABLE, PRIVATE :: LIA /;"	v	module:tsvdw_module
LIB	tsvdw.f90	/^REAL(DP), DIMENSION(:,:), ALLOCATABLE, PRIVATE :: LIB /;"	v	module:tsvdw_module
LSD_B88	more_functionals.f90	/^      SUBROUTINE LSD_B88(/;"	s
LSD_GLYP	more_functionals.f90	/^      SUBROUTINE LSD_GLYP(/;"	s
LSD_LYP	more_functionals.f90	/^      SUBROUTINE LSD_LYP(/;"	s
LSD_PADE	more_functionals.f90	/^      SUBROUTINE LSD_PADE(/;"	s
MAX_INT	autopilot.f90	/^  INTEGER, parameter :: MAX_INT /;"	v	module:autopilot
MD5_cksum	pseudo_types.f90	/^     CHARACTER(len=32) :: MD5_cksum /;"	k	type:pseudo_upf
MODFLAGS	Makefile	/^MODFLAGS=$(BASEMOD_FLAGS) \\$/;"	m
MODULES	Makefile	/^MODULES = \\$/;"	m
MUNOUGHT_SI	constants.f90	/^  REAL(DP), PARAMETER :: MUNOUGHT_SI /;"	v	module:constants
NAME	qes_types_module.f90	/^    CHARACTER(len=256) :: NAME$/;"	k	type:creator_type
NAME	qes_types_module.f90	/^    CHARACTER(len=256) :: NAME$/;"	k	type:xml_format_type
NgpA	tsvdw.f90	/^INTEGER, PARAMETER, PRIVATE :: NgpA=/;"	v	module:tsvdw_module
Nqs	kernel_table.f90	/^  integer :: Nqs,/;"	v	module:kernel_table
Nr_points	kernel_table.f90	/^  integer :: Nqs, Nr_points /;"	v	module:kernel_table
NsomegaA	tsvdw.f90	/^INTEGER, DIMENSION(:), ALLOCATABLE, PRIVATE :: NsomegaA /;"	v	module:tsvdw_module
NsomegaAr	tsvdw.f90	/^INTEGER, DIMENSION(:), ALLOCATABLE, PRIVATE :: NsomegaAr /;"	v	module:tsvdw_module
Num1stDer	tsvdw.f90	/^  SUBROUTINE Num1stDer(/;"	s	module:tsvdw_module
OBJS	Makefile	/^OBJS = \\$/;"	m
PI	coulomb_vcut.f90	/^  REAL(DP), PARAMETER :: PI /;"	v	module:coulomb_vcut_module
PW86	functionals.f90	/^subroutine PW86 /;"	s
P_ext	input_parameters.f90	/^      REAL(DP) :: P_ext /;"	v	module:input_parameters
P_fin	input_parameters.f90	/^      REAL(DP) :: P_fin /;"	v	module:input_parameters
P_in	input_parameters.f90	/^      REAL(DP) :: P_in /;"	v	module:input_parameters
QMMM_FORCE_CONV	qmmm.f90	/^  REAL(DP), PARAMETER :: QMMM_FORCE_CONV /;"	v	module:qmmm
QMMM_TAG_CELL	qmmm.f90	/^  INTEGER, PARAMETER :: QMMM_TAG_CELL=/;"	v	module:qmmm
QMMM_TAG_CHARGE	qmmm.f90	/^  INTEGER, PARAMETER :: QMMM_TAG_CHARGE=/;"	v	module:qmmm
QMMM_TAG_COORD	qmmm.f90	/^  INTEGER, PARAMETER :: QMMM_TAG_COORD=/;"	v	module:qmmm
QMMM_TAG_FORCE	qmmm.f90	/^  INTEGER, PARAMETER :: QMMM_TAG_FORCE=/;"	v	module:qmmm
QMMM_TAG_FORCE2	qmmm.f90	/^  INTEGER, PARAMETER :: QMMM_TAG_FORCE2=/;"	v	module:qmmm
QMMM_TAG_MASS	qmmm.f90	/^  INTEGER, PARAMETER :: QMMM_TAG_MASS=/;"	v	module:qmmm
QMMM_TAG_OTHER	qmmm.f90	/^  INTEGER, PARAMETER :: QMMM_TAG_OTHER=/;"	v	module:qmmm
QMMM_TAG_RADII	qmmm.f90	/^  INTEGER, PARAMETER :: QMMM_TAG_RADII=/;"	v	module:qmmm
QMMM_TAG_SIZE	qmmm.f90	/^  INTEGER, PARAMETER :: QMMM_TAG_SIZE=/;"	v	module:qmmm
QMMM_TAG_TYPE	qmmm.f90	/^  INTEGER, PARAMETER :: QMMM_TAG_TYPE=/;"	v	module:qmmm
R0eff	tsvdw.f90	/^REAL(DP), DIMENSION(:), ALLOCATABLE, PRIVATE :: R0eff /;"	v	module:tsvdw_module
R0free	tsvdw.f90	/^REAL(DP), DIMENSION(:), ALLOCATABLE, PRIVATE :: R0free /;"	v	module:tsvdw_module
RYDBERG_SI	constants.f90	/^  REAL(DP), PARAMETER :: RYDBERG_SI /;"	v	module:constants
RYTOEV	constants.f90	/^  REAL(DP), PARAMETER :: RYTOEV /;"	v	module:constants
RYTONM	constants.f90	/^  REAL(DP), PARAMETER :: RYTONM /;"	v	module:constants
RY_KBAR	constants.f90	/^  REAL(DP), PARAMETER :: RY_KBAR /;"	v	module:constants
RY_TO_CMM1	constants.f90	/^  REAL(DP), PARAMETER :: RY_TO_CMM1 /;"	v	module:constants
RY_TO_GHZ	constants.f90	/^  REAL(DP), PARAMETER :: RY_TO_GHZ /;"	v	module:constants
RY_TO_THZ	constants.f90	/^  REAL(DP), PARAMETER :: RY_TO_THZ /;"	v	module:constants
R_j	input_parameters.f90	/^      REAL(DP) :: R_j /;"	v	module:input_parameters
R_sum	mm_dispersion.f90	/^                               C6_ij ( : , : ) , &$/;"	v	module:london_module
R_vdw	mm_dispersion.f90	/^  REAL ( DP ) , ALLOCATABLE :: R_vdw /;"	v	module:london_module
SCANcxc	metagga.f90	/^subroutine SCANcxc(/;"	s
SIGINT	set_signal.f90	/^INTEGER(kind=c_int),PARAMETER :: SIGINT /;"	v	module:set_signal
Surf_t	input_parameters.f90	/^      REAL(DP) :: Surf_t /;"	v	module:input_parameters
TIME	qes_types_module.f90	/^    CHARACTER(len=256) :: TIME$/;"	k	type:closed_type
TIME	qes_types_module.f90	/^    CHARACTER(len=256) :: TIME$/;"	k	type:created_type
TLDEPS	Makefile	/^TLDEPS=libiotk libfox libutil libla libfft$/;"	m
TPI	coulomb_vcut.f90	/^  REAL(DP), PARAMETER :: TPI /;"	v	module:coulomb_vcut_module
TayExp	functionals.f90	/^      FUNCTION TayExp(/;"	f
U_projection_type	input_parameters.f90	/^        CHARACTER(len=80) :: U_projection_type /;"	v	module:input_parameters
U_projection_type	qes_types_module.f90	/^    CHARACTER(len=256) :: U_projection_type$/;"	k	type:dftU_type
U_projection_type_ispresent	qes_types_module.f90	/^    LOGICAL  :: U_projection_type_ispresent /;"	k	type:dftU_type
Units	qes_types_module.f90	/^    CHARACTER(len=256) :: Units$/;"	k	type:espresso_type
Units	qes_types_module.f90	/^    CHARACTER(len=256) :: Units$/;"	k	type:scalarQuantity_type
Units_ispresent	qes_types_module.f90	/^    LOGICAL :: Units_ispresent /;"	k	type:espresso_type
UtsvdW	tsvdw.f90	/^REAL(DP), DIMENSION(:), ALLOCATABLE, PUBLIC :: UtsvdW /;"	v	module:tsvdw_module
VERSION	qes_types_module.f90	/^    CHARACTER(len=256) :: VERSION$/;"	k	type:creator_type
VERSION	qes_types_module.f90	/^    CHARACTER(len=256) :: VERSION$/;"	k	type:xml_format_type
VefftsvdW	tsvdw.f90	/^REAL(DP), DIMENSION(:), ALLOCATABLE, PUBLIC :: VefftsvdW /;"	v	module:tsvdw_module
XC_CORRELATION	libxc.f90	/^    XC_EXCHANGE = 0, &$/;"	v	module:xc_f90_lib_m
XC_EXCHANGE	libxc.f90	/^  integer, parameter :: &$/;"	v	module:xc_f90_lib_m
XC_EXCHANGE_CORRELATION	libxc.f90	/^    XC_CORRELATION = 1, &$/;"	v	module:xc_f90_lib_m
XC_FAMILY_GGA	libxc.f90	/^    XC_FAMILY_LDA = 1, &$/;"	v	module:xc_f90_lib_m
XC_FAMILY_HYB_GGA	libxc.f90	/^    XC_FAMILY_OEP = 16, &$/;"	v	module:xc_f90_lib_m
XC_FAMILY_HYB_MGGA	libxc.f90	/^    XC_FAMILY_HYB_GGA = 32, &$/;"	v	module:xc_f90_lib_m
XC_FAMILY_LCA	libxc.f90	/^    XC_FAMILY_MGGA = 4, &$/;"	v	module:xc_f90_lib_m
XC_FAMILY_LDA	libxc.f90	/^    XC_FAMILY_NONE = 0, &$/;"	v	module:xc_f90_lib_m
XC_FAMILY_MGGA	libxc.f90	/^    XC_FAMILY_GGA = 2, &$/;"	v	module:xc_f90_lib_m
XC_FAMILY_NONE	libxc.f90	/^    XC_FAMILY_UNKNOWN = -1, &$/;"	v	module:xc_f90_lib_m
XC_FAMILY_OEP	libxc.f90	/^    XC_FAMILY_LCA = 8, &$/;"	v	module:xc_f90_lib_m
XC_FAMILY_UNKNOWN	libxc.f90	/^  integer, parameter :: &$/;"	v	module:xc_f90_lib_m
XC_FLAGS_1D	libxc.f90	/^    XC_FLAGS_HAVE_LXC = 16, &$/;"	v	module:xc_f90_lib_m
XC_FLAGS_2D	libxc.f90	/^    XC_FLAGS_1D = 32, &$/;"	v	module:xc_f90_lib_m
XC_FLAGS_3D	libxc.f90	/^    XC_FLAGS_2D = 64, &$/;"	v	module:xc_f90_lib_m
XC_FLAGS_DEVELOPMENT	libxc.f90	/^    XC_FLAGS_STABLE = 512, &$/;"	v	module:xc_f90_lib_m
XC_FLAGS_HAVE_EXC	libxc.f90	/^  integer, parameter :: &$/;"	v	module:xc_f90_lib_m
XC_FLAGS_HAVE_FXC	libxc.f90	/^    XC_FLAGS_HAVE_VXC = 2, &$/;"	v	module:xc_f90_lib_m
XC_FLAGS_HAVE_KXC	libxc.f90	/^    XC_FLAGS_HAVE_FXC = 4, &$/;"	v	module:xc_f90_lib_m
XC_FLAGS_HAVE_LXC	libxc.f90	/^    XC_FLAGS_HAVE_KXC = 8, &$/;"	v	module:xc_f90_lib_m
XC_FLAGS_HAVE_VXC	libxc.f90	/^    XC_FLAGS_HAVE_EXC = 1, &$/;"	v	module:xc_f90_lib_m
XC_FLAGS_STABLE	libxc.f90	/^    XC_FLAGS_3D = 128, &$/;"	v	module:xc_f90_lib_m
XC_GGA_K_ABSR1	libxc.f90	/^  integer, parameter :: XC_GGA_K_ABSR1 /;"	v	module:xc_f90_lib_m
XC_GGA_K_ABSR2	libxc.f90	/^  integer, parameter :: XC_GGA_K_ABSR2 /;"	v	module:xc_f90_lib_m
XC_GGA_XC_LB	libxc.f90	/^  integer, parameter :: XC_GGA_XC_LB /;"	v	module:xc_f90_lib_m
XC_KINETIC	libxc.f90	/^    XC_EXCHANGE_CORRELATION = 2, &$/;"	v	module:xc_f90_lib_m
XC_NON_RELATIVISTIC	libxc.f90	/^  integer, parameter :: &$/;"	v	module:xc_f90_lib_m
XC_POLARIZED	libxc.f90	/^    XC_UNPOLARIZED = 1, & ! Spin unpolarized$/;"	v	module:xc_f90_lib_m
XC_RELATIVISTIC	libxc.f90	/^    XC_NON_RELATIVISTIC = 0, & ! Functional includes or not relativistic$/;"	v	module:xc_f90_lib_m
XC_UNPOLARIZED	libxc.f90	/^  integer, parameter :: &$/;"	v	module:xc_f90_lib_m
ZGEDI	linpack.f90	/^      SUBROUTINE ZGEDI(/;"	s
ZGEFA	linpack.f90	/^      SUBROUTINE ZGEFA(/;"	s
a	cell_base.f90	/^          REAL(DP) :: a(/;"	k	type:boxdimensions
a	cell_base.f90	/^    REAL(DP) :: a,/;"	v	module:cell_base
a	coulomb_vcut.f90	/^      REAL(DP)          :: a(/;"	k	type:vcut_type
a	input_parameters.f90	/^        REAL(DP) :: a /;"	v	module:input_parameters
a	paw_variables.f90	/^        INTEGER :: a /;"	k	type:paw_info
a	ws_base.f90	/^    REAL(DP) ::  &$/;"	k	type:ws_type
a1	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: a1$/;"	k	type:cell_type
a2	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: a2$/;"	k	type:cell_type
a3	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: a3$/;"	k	type:cell_type
a_omega	coulomb_vcut.f90	/^      REAL(DP)          :: a_omega$/;"	k	type:vcut_type
aa	ws_base.f90	/^        a(3,3),  & ! the fundamental Bravais lattice vectors$/;"	k	type:ws_type
aainit	uspp.f90	/^  subroutine aainit(/;"	s	module:uspp
abc2celldm	latgen.f90	/^SUBROUTINE abc2celldm /;"	s
abisur	input_parameters.f90	/^      LOGICAL  :: abisur /;"	v	module:input_parameters
abivol	input_parameters.f90	/^      LOGICAL  :: abivol /;"	v	module:input_parameters
absolute	qes_types_module.f90	/^    REAL(DP) :: absolute$/;"	k	type:magnetization_type
ace	input_parameters.f90	/^        LOGICAL  :: ace=/;"	v	module:input_parameters
active	control_flags.f90	/^     LOGICAL  :: active$/;"	k	type:convergence_criteria
adapt	input_parameters.f90	/^          LOGICAL :: adapt$/;"	v	module:input_parameters
adapt_thr	control_flags.f90	/^  LOGICAL, PUBLIC :: &$/;"	v	module:control_flags
adaptive_thr	input_parameters.f90	/^        LOGICAL  :: adaptive_thr /;"	v	module:input_parameters
add_array_attribute_i	qeh5_module.f90	/^  SUBROUTINE add_array_attribute_i /;"	s	module:qeh5_base_module
add_array_attribute_r	qeh5_module.f90	/^  SUBROUTINE add_array_attribute_r /;"	s	module:qeh5_base_module
add_attribute_i	qeh5_module.f90	/^  SUBROUTINE add_attribute_i /;"	s	module:qeh5_base_module
add_attribute_r	qeh5_module.f90	/^  SUBROUTINE add_attribute_r /;"	s	module:qeh5_base_module
add_attribute_string	qeh5_module.f90	/^  SUBROUTINE add_attribute_string /;"	s	module:qeh5_base_module
add_attributes_hdf5_boolean	hdf5_qe.f90	/^  SUBROUTINE add_attributes_hdf5_boolean(/;"	s	module:hdf5_qe
add_attributes_hdf5_c	hdf5_qe.f90	/^  SUBROUTINE add_attributes_hdf5_c(/;"	s	module:hdf5_qe
add_attributes_hdf5_i	hdf5_qe.f90	/^  SUBROUTINE add_attributes_hdf5_i(/;"	s	module:hdf5_qe
add_attributes_hdf5_r	hdf5_qe.f90	/^  SUBROUTINE add_attributes_hdf5_r(/;"	s	module:hdf5_qe
add_rule	autopilot.f90	/^  SUBROUTINE add_rule(/;"	s	module:autopilot
add_upf_grid	upf_to_internal.f90	/^SUBROUTINE add_upf_grid /;"	s	module:upf_to_internal
adjust_one_face_centered_orthorombic	bz_form.f90	/^SUBROUTINE adjust_one_face_centered_orthorombic(/;"	s	module:bz_form
adjust_orthorombic	bz_form.f90	/^SUBROUTINE adjust_orthorombic(/;"	s	module:bz_form
adjust_orthorombic_vect	bz_form.f90	/^SUBROUTINE adjust_orthorombic_vect(/;"	s	module:bz_form
ae	paw_variables.f90	/^        INTEGER :: ae /;"	k	type:paw_info
ae_rho_atc	pseudo_types.f90	/^     REAL(DP),POINTER :: ae_rho_atc(/;"	k	type:paw_in_upf
ae_vloc	pseudo_types.f90	/^     REAL(DP),POINTER :: ae_vloc(/;"	k	type:paw_in_upf
aewfc	pseudo_types.f90	/^     REAL(DP), POINTER :: aewfc(/;"	k	type:pseudo_upf
aewfc_rel	pseudo_types.f90	/^          ptfunc(:,:,:), & ! as above, but for pseudo$/;"	k	type:paw_in_upf
ainv	cell_base.f90	/^        REAL(DP) :: ainv(/;"	v	module:cell_base
alat	cell_base.f90	/^    REAL(DP) :: alat /;"	v	module:cell_base
alat	qes_types_module.f90	/^    REAL(DP) :: alat$/;"	k	type:atomic_structure_type
alat_ispresent	qes_types_module.f90	/^    LOGICAL :: alat_ispresent /;"	k	type:atomic_structure_type
algorithmic_info	qes_types_module.f90	/^    TYPE(algorithmic_info_/;"	k	type:output_type
algorithmic_info_type	qes_types_module.f90	/^  TYPE :: algorithmic_info_type$/;"	t	module:qes_types_module
all_end	mp_exx.f90	/^  INTEGER, ALLOCATABLE :: all_end(/;"	v	module:mp_exx
all_start	mp_exx.f90	/^  INTEGER, ALLOCATABLE :: all_start(/;"	v	module:mp_exx
allocate_bec_type	becmod.f90	/^  SUBROUTINE allocate_bec_type /;"	s	module:becmod
allocate_bz	bz_form.f90	/^SUBROUTINE allocate_bz(/;"	s	module:bz_form
allocate_input_constr	input_parameters.f90	/^  SUBROUTINE allocate_input_constr(/;"	s	module:input_parameters
allocate_input_ions	input_parameters.f90	/^  SUBROUTINE allocate_input_ions(/;"	s	module:input_parameters
allocate_input_iprnks	input_parameters.f90	/^  SUBROUTINE allocate_input_iprnks(/;"	s	module:input_parameters
allocate_mdiis	mdiis.f90	/^  SUBROUTINE allocate_mdiis(/;"	s	module:mdiis
allocate_radial_grid	radial_grids.f90	/^      subroutine allocate_radial_grid(/;"	s	module:radial_grids
alpha_pen	input_parameters.f90	/^        REAL(DP) :: alpha_pen(/;"	v	module:input_parameters
amass	ions_base.f90	/^      REAL(DP) :: amass(/;"	v	module:ions_base
ampre	control_flags.f90	/^  REAL(DP) :: ampre /;"	v	module:control_flags
ampre	input_parameters.f90	/^        REAL(DP) :: ampre /;"	v	module:input_parameters
amprp	control_flags.f90	/^  REAL(DP) :: amprp(/;"	v	module:control_flags
amprp	input_parameters.f90	/^        REAL(DP) :: amprp(/;"	v	module:input_parameters
angle1	input_parameters.f90	/^        REAL(DP) :: angle1(/;"	v	module:input_parameters
angle1	noncol.f90	/^  REAL (DP) :: &$/;"	v	module:noncollin_module
angle2	input_parameters.f90	/^        REAL(DP) :: angle2(/;"	v	module:input_parameters
angle2	noncol.f90	/^      angle1(ntypx),       &!  Define the polar coordinates of the starting$/;"	v	module:noncollin_module
ap	uspp.f90	/^  REAL(DP) :: &$/;"	v	module:uspp
aradii	qmmm.f90	/^  REAL(DP), ALLOCATABLE :: aradii(/;"	v	module:qmmm
assign_rule	autopilot.f90	/^  SUBROUTINE assign_rule(/;"	s	module:autopilot
assume_isolated	input_parameters.f90	/^        CHARACTER(len=80) :: assume_isolated /;"	v	module:input_parameters
assume_isolated	qes_types_module.f90	/^    CHARACTER(len=256) :: assume_isolated$/;"	k	type:boundary_conditions_type
assume_isolated	qes_types_module.f90	/^    CHARACTER(len=256) :: assume_isolated$/;"	k	type:outputPBC_type
at	bz_form.f90	/^    REAL(DP) :: at(/;"	k	type:bz
at	cell_base.f90	/^    REAL(DP) :: at(/;"	v	module:cell_base
at2celldm	latgen.f90	/^SUBROUTINE at2celldm /;"	s
at2ibrav	latgen.f90	/^FUNCTION at2ibrav /;"	f
atm	ions_base.f90	/^      CHARACTER(LEN=3)      :: atm(/;"	v	module:ions_base
atmlength	gth.f90	/^subroutine atmlength(/;"	s	module:m_gth
atom	atom.f90	/^MODULE atom$/;"	m
atom	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: atom$/;"	k	type:atom_type
atom	qes_types_module.f90	/^    TYPE(atom_/;"	k	type:atomic_positions_type
atom	qes_types_module.f90	/^    TYPE(atom_/;"	k	type:wyckoff_positions_type
atom_label	input_parameters.f90	/^        CHARACTER(len=3)  :: atom_label(/;"	v	module:input_parameters
atom_mass	input_parameters.f90	/^        REAL(DP)          :: atom_mass(/;"	v	module:input_parameters
atom_name	atomic_number.f90	/^function atom_name(/;"	f
atom_pfile	input_parameters.f90	/^        CHARACTER(len=80) :: atom_pfile(/;"	v	module:input_parameters
atom_type	qes_types_module.f90	/^  TYPE :: atom_type$/;"	t	module:qes_types_module
atom_weight	atomic_number.f90	/^function atom_weight(/;"	f
atomic_constraint	qes_types_module.f90	/^    TYPE(atomic_constraint_/;"	k	type:atomic_constraints_type
atomic_constraint_type	qes_types_module.f90	/^  TYPE :: atomic_constraint_type$/;"	t	module:qes_types_module
atomic_constraints	qes_types_module.f90	/^    TYPE(atomic_constraints_/;"	k	type:input_type
atomic_constraints_ispresent	qes_types_module.f90	/^    LOGICAL  :: atomic_constraints_ispresent /;"	k	type:input_type
atomic_constraints_type	qes_types_module.f90	/^  TYPE :: atomic_constraints_type$/;"	t	module:qes_types_module
atomic_number	atomic_number.f90	/^function atomic_number(/;"	f
atomic_positions	input_parameters.f90	/^        CHARACTER(len=80) :: atomic_positions /;"	v	module:input_parameters
atomic_positions	qes_types_module.f90	/^    TYPE(atomic_positions_/;"	k	type:atomic_structure_type
atomic_positions_ispresent	qes_types_module.f90	/^    LOGICAL  :: atomic_positions_ispresent /;"	k	type:atomic_structure_type
atomic_positions_type	qes_types_module.f90	/^  TYPE :: atomic_positions_type$/;"	t	module:qes_types_module
atomic_species	qes_types_module.f90	/^    TYPE(atomic_species_/;"	k	type:input_type
atomic_species	qes_types_module.f90	/^    TYPE(atomic_species_/;"	k	type:output_type
atomic_species_type	qes_types_module.f90	/^  TYPE :: atomic_species_type$/;"	t	module:qes_types_module
atomic_structure	qes_types_module.f90	/^    TYPE(atomic_structure_/;"	k	type:input_type
atomic_structure	qes_types_module.f90	/^    TYPE(atomic_structure_/;"	k	type:output_type
atomic_structure	qes_types_module.f90	/^    TYPE(atomic_structure_/;"	k	type:step_type
atomic_structure_type	qes_types_module.f90	/^  TYPE :: atomic_structure_type$/;"	t	module:qes_types_module
atxyz	tsvdw.f90	/^REAL(DP), DIMENSION(:,:), ALLOCATABLE, PRIVATE :: atxyz /;"	v	module:tsvdw_module
augmom	pseudo_types.f90	/^     REAL(DP),POINTER :: augmom(/;"	k	type:paw_in_upf
augshape	pseudo_types.f90	/^     CHARACTER(len=12):: augshape /;"	k	type:paw_in_upf
author	pseudo_types.f90	/^     CHARACTER(LEN=80):: author=/;"	k	type:pseudo_upf
auto_check	autopilot.f90	/^  LOGICAL FUNCTION auto_check /;"	f	module:autopilot
auto_error	autopilot.f90	/^  SUBROUTINE auto_error(/;"	s	module:autopilot
autopilot	autopilot.f90	/^MODULE autopilot$/;"	m
axis	input_parameters.f90	/^      INTEGER  :: axis /;"	v	module:input_parameters
b	cell_base.f90	/^    REAL(DP) :: a, b,/;"	v	module:cell_base
b	coulomb_vcut.f90	/^      REAL(DP)          :: b(/;"	k	type:vcut_type
b	input_parameters.f90	/^        REAL(DP) :: b /;"	v	module:input_parameters
b	paw_variables.f90	/^        INTEGER :: b /;"	k	type:paw_info
b	ws_base.f90	/^        aa(3,3), & ! a^T*a$/;"	k	type:ws_type
b1	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: b1$/;"	k	type:reciprocal_lattice_type
b2	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: b2$/;"	k	type:reciprocal_lattice_type
b3	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: b3$/;"	k	type:reciprocal_lattice_type
b86b	functionals.f90	/^subroutine b86b /;"	s
b_omega	coulomb_vcut.f90	/^      REAL(DP)          :: b_omega$/;"	k	type:vcut_type
b_value	xc_rVV10.f90	/^  real(dp) :: b_value /;"	v	module:rVV10
bachel	read_ncpp.f90	/^subroutine bachel /;"	s
band_roots	mp_exx.f90	/^  INTEGER, ALLOCATABLE :: band_roots(/;"	v	module:mp_exx
band_structure	qes_types_module.f90	/^    TYPE(band_structure_/;"	k	type:output_type
band_structure_type	qes_types_module.f90	/^  TYPE :: band_structure_type$/;"	t	module:qes_types_module
bands	qes_types_module.f90	/^    TYPE(bands_/;"	k	type:input_type
bands_from	wannier_new.f90	/^          REAL ::        bands_from /;"	k	type:wannier_data
bands_to	wannier_new.f90	/^          REAL ::        bands_from = 0.d0, &$/;"	k	type:wannier_data
bands_type	qes_types_module.f90	/^  TYPE :: bands_type$/;"	t	module:qes_types_module
banfac	bspline.f90	/^  subroutine banfac(/;"	s	module:bspline
banslv	bspline.f90	/^  subroutine banslv(/;"	s	module:bspline
basic_algebra_routines	basic_algebra_routines.f90	/^MODULE basic_algebra_routines$/;"	m
basis	qes_types_module.f90	/^    TYPE(basis_/;"	k	type:input_type
basisSetItem	qes_types_module.f90	/^    CHARACTER(len=256) :: basisSetItem$/;"	k	type:basisSetItem_type
basisSetItem_type	qes_types_module.f90	/^  TYPE :: basisSetItem_type$/;"	t	module:qes_types_module
basis_set	qes_types_module.f90	/^    TYPE(basis_set_/;"	k	type:output_type
basis_set_type	qes_types_module.f90	/^  TYPE :: basis_set_type$/;"	t	module:qes_types_module
basis_type	qes_types_module.f90	/^  TYPE :: basis_type$/;"	t	module:qes_types_module
bc	qes_types_module.f90	/^    CHARACTER(len=256) :: bc$/;"	k	type:esm_type
bec_type	becmod.f90	/^  TYPE bec_type$/;"	t	module:becmod
beccopy	becmod.f90	/^  SUBROUTINE beccopy(/;"	s	module:becmod
becke86b	functionals.f90	/^subroutine becke86b(/;"	s
becke88	functionals.f90	/^subroutine becke88 /;"	s
becke88_spin	lsda_functionals.f90	/^subroutine becke88_spin /;"	s
becmod	becmod.f90	/^MODULE becmod$/;"	m
becp	becmod.f90	/^  TYPE (bec_type) :: becp /;"	v	module:becmod
becp_gw	wannier_gw.f90	/^  REAL(kind=DP), ALLOCATABLE :: becp_gw(/;"	v	module:wannier_gw
becp_gw_c	wannier_gw.f90	/^  REAL(kind=DP), ALLOCATABLE :: becp_gw_c(/;"	v	module:wannier_gw
becscal_gamma	becmod.f90	/^  SUBROUTINE becscal_gamma(/;"	s	module:becmod
becscal_nck	becmod.f90	/^  SUBROUTINE becscal_nck(/;"	s	module:becmod
becsum	uspp.f90	/^  REAL(DP), ALLOCATABLE :: &$/;"	v	module:uspp
beta	mm_dispersion.f90	/^  REAL ( DP ) :: r_cut , beta /;"	v	module:london_module
beta	pseudo_types.f90	/^     REAL(DP), POINTER :: beta(/;"	k	type:pseudo_upf
beta	uspp.f90	/^  REAL(DP), ALLOCATABLE :: &$/;"	v	module:uspp
bfgs	bfgs_module.f90	/^   SUBROUTINE bfgs(/;"	s	module:bfgs_module
bfgs	qes_types_module.f90	/^    TYPE(bfgs_/;"	k	type:ion_control_type
bfgs_get_n_iter	bfgs_module.f90	/^   FUNCTION bfgs_get_n_iter /;"	f	module:bfgs_module
bfgs_ispresent	qes_types_module.f90	/^    LOGICAL  :: bfgs_ispresent /;"	k	type:ion_control_type
bfgs_iter	bfgs_module.f90	/^      scf_iter,          &! number of scf iterations$/;"	v	module:bfgs_module
bfgs_module	bfgs_module.f90	/^MODULE bfgs_module$/;"	m
bfgs_ndim	bfgs_module.f90	/^   INTEGER :: &$/;"	v	module:bfgs_module
bfgs_ndim	input_parameters.f90	/^        INTEGER ::  bfgs_ndim /;"	v	module:input_parameters
bfgs_type	qes_types_module.f90	/^  TYPE :: bfgs_type$/;"	t	module:qes_types_module
bfield	noncol.f90	/^      magtot_nc(3),        &!  total magnetization$/;"	v	module:noncollin_module
bg	bz_form.f90	/^    REAL(DP) :: at(3,3), bg(/;"	k	type:bz
bg	cell_base.f90	/^    REAL(DP) :: bg(/;"	v	module:cell_base
block	input_parameters.f90	/^        LOGICAL  :: block /;"	v	module:input_parameters
block	qeh5_module.f90	/^     INTEGER(HSIZE_T),ALLOCATABLE  ::  offset(:), count(:), stride(:), block(/;"	k	type:qeh5_dataspace
block	qes_types_module.f90	/^    LOGICAL :: block$/;"	k	type:gate_settings_type
block_1	input_parameters.f90	/^        REAL(DP) :: block_1 /;"	v	module:input_parameters
block_1	qes_types_module.f90	/^    REAL(DP) :: block_1$/;"	k	type:gate_settings_type
block_1_ispresent	qes_types_module.f90	/^    LOGICAL  :: block_1_ispresent /;"	k	type:gate_settings_type
block_2	input_parameters.f90	/^        REAL(DP) :: block_2 /;"	v	module:input_parameters
block_2	qes_types_module.f90	/^    REAL(DP) :: block_2$/;"	k	type:gate_settings_type
block_2_ispresent	qes_types_module.f90	/^    LOGICAL  :: block_2_ispresent /;"	k	type:gate_settings_type
block_height	input_parameters.f90	/^        REAL(DP) :: block_height /;"	v	module:input_parameters
block_height	qes_types_module.f90	/^    REAL(DP) :: block_height$/;"	k	type:gate_settings_type
block_height_ispresent	qes_types_module.f90	/^    LOGICAL  :: block_height_ispresent /;"	k	type:gate_settings_type
block_ispresent	qes_types_module.f90	/^    LOGICAL  :: block_ispresent /;"	k	type:gate_settings_type
boundary_conditions	qes_types_module.f90	/^    TYPE(boundary_conditions_/;"	k	type:input_type
boundary_conditions	qes_types_module.f90	/^    TYPE(outputPBC_type) :: boundary_conditions$/;"	k	type:output_type
boundary_conditions_ispresent	qes_types_module.f90	/^    LOGICAL  :: boundary_conditions_ispresent /;"	k	type:input_type
boundary_conditions_ispresent	qes_types_module.f90	/^    LOGICAL  :: boundary_conditions_ispresent /;"	k	type:output_type
boundary_conditions_type	qes_types_module.f90	/^  TYPE :: boundary_conditions_type$/;"	t	module:qes_types_module
boxdimensions	cell_base.f90	/^        TYPE boxdimensions$/;"	t	module:cell_base
bravais_index	qes_types_module.f90	/^    INTEGER :: bravais_index$/;"	k	type:atomic_structure_type
bravais_index_ispresent	qes_types_module.f90	/^    LOGICAL :: bravais_index_ispresent /;"	k	type:atomic_structure_type
bsint	tsvdw.f90	/^INTEGER, PARAMETER, PRIVATE :: bsint=/;"	v	module:tsvdw_module
bspline	bspline.f90	/^MODULE bspline$/;"	m
bsplvb	bspline.f90	/^  subroutine bsplvb(/;"	s	module:bspline
buffer	libxc.f90	/^    integer, pointer :: buffer$/;"	k	type:xc_f90_pointer_t
bz	bz_form.f90	/^TYPE bz$/;"	t	module:bz_form
bz_form	bz_form.f90	/^MODULE bz_form$/;"	m
c	cell_base.f90	/^    REAL(DP) :: a, b, c,/;"	v	module:cell_base
c	input_parameters.f90	/^        REAL(DP) :: c /;"	v	module:input_parameters
c	wannier_new.f90	/^         REAL :: c /;"	k	type:ingredient
c09x	functionals.f90	/^subroutine c09x /;"	s
c0_bgrp	wavefunctions.f90	/^     COMPLEX(DP), ALLOCATABLE :: c0_bgrp(/;"	v	module:wavefunctions
calbec_bec_type	becmod.f90	/^  SUBROUTINE calbec_bec_type /;"	s	module:becmod
calbec_gamma	becmod.f90	/^  SUBROUTINE calbec_gamma /;"	s	module:becmod
calbec_gamma_nocomm	becmod.f90	/^  SUBROUTINE calbec_gamma_nocomm /;"	s	module:becmod
calbec_k	becmod.f90	/^  SUBROUTINE calbec_k /;"	s	module:becmod
calbec_nc	becmod.f90	/^  SUBROUTINE calbec_nc /;"	s	module:becmod
calc_fd_gradient	fd_gradient.f90	/^SUBROUTINE calc_fd_gradient(/;"	s	module:fd_gradient
calculation	input_parameters.f90	/^        CHARACTER(len=80) :: calculation /;"	v	module:input_parameters
calculation	qes_types_module.f90	/^    CHARACTER(len=256) :: calculation$/;"	k	type:control_variables_type
calculation_allowed	input_parameters.f90	/^        CHARACTER(len=80) :: calculation_allowed(/;"	v	module:input_parameters
calls	qes_types_module.f90	/^    INTEGER :: calls$/;"	k	type:clock_type
calls_ispresent	qes_types_module.f90	/^    LOGICAL :: calls_ispresent /;"	k	type:clock_type
calwf	input_parameters.f90	/^          INTEGER :: calwf$/;"	v	module:input_parameters
canonical_celldm	bz_form.f90	/^SUBROUTINE canonical_celldm(/;"	s	module:bz_form
capital	capital.f90	/^FUNCTION capital(/;"	f
card_atomic_forces	read_cards.f90	/^   SUBROUTINE card_atomic_forces(/;"	s	module:read_cards_module
card_atomic_positions	read_cards.f90	/^   SUBROUTINE card_atomic_positions(/;"	s	module:read_cards_module
card_atomic_species	read_cards.f90	/^   SUBROUTINE card_atomic_species(/;"	s	module:read_cards_module
card_autopilot	autopilot.f90	/^  SUBROUTINE card_autopilot(/;"	s	module:autopilot
card_cell_parameters	read_cards.f90	/^   SUBROUTINE card_cell_parameters(/;"	s	module:read_cards_module
card_constraints	read_cards.f90	/^   SUBROUTINE card_constraints(/;"	s	module:read_cards_module
card_default_values	read_cards.f90	/^   SUBROUTINE card_default_values(/;"	s	module:read_cards_module
card_ion_velocities	read_cards.f90	/^   SUBROUTINE card_ion_velocities(/;"	s	module:read_cards_module
card_kpoints	read_cards.f90	/^   SUBROUTINE card_kpoints(/;"	s	module:read_cards_module
card_ksout	read_cards.f90	/^   SUBROUTINE card_ksout(/;"	s	module:read_cards_module
card_occupations	read_cards.f90	/^   SUBROUTINE card_occupations(/;"	s	module:read_cards_module
card_plot_wannier	read_cards.f90	/^   SUBROUTINE card_plot_wannier(/;"	s	module:read_cards_module
card_ref_cell_parameters	read_cards.f90	/^   SUBROUTINE card_ref_cell_parameters(/;"	s	module:read_cards_module
card_template	read_cards.f90	/^   SUBROUTINE card_template(/;"	s	module:read_cards_module
card_wannier_ac	read_cards.f90	/^   SUBROUTINE card_wannier_ac(/;"	s	module:read_cards_module
cc	gth.f90	/^     real(dp) :: rloc, cc(/;"	k	type:gth_parameters
ccord	wyckoff.f90	/^   SUBROUTINE ccord(/;"	s	module:wyckoff
cdm	ions_base.f90	/^      REAL(DP) :: cdmi/;"	v	module:ions_base
cdmi	ions_base.f90	/^      REAL(DP) :: cdmi(/;"	v	module:ions_base
cdms	ions_base.f90	/^      REAL(DP) :: cdms(/;"	v	module:ions_base
cell	input_parameters.f90	/^        NAMELIST \/ cell /;"	n	module:input_parameters
cell	qes_types_module.f90	/^    TYPE(cell_/;"	k	type:atomic_structure_type
cell_alat	cell_base.f90	/^  function cell_alat(/;"	f	module:cell_base
cell_base	cell_base.f90	/^  MODULE cell_base$/;"	m
cell_base_init	cell_base.f90	/^  SUBROUTINE cell_base_init(/;"	s	module:cell_base
cell_base_reinit	cell_base.f90	/^  SUBROUTINE cell_base_reinit(/;"	s	module:cell_base
cell_bcast	read_namelists.f90	/^     SUBROUTINE cell_bcast(/;"	s	module:read_namelists_module
cell_checkin	read_namelists.f90	/^     SUBROUTINE cell_checkin(/;"	s	module:read_namelists_module
cell_control	qes_types_module.f90	/^    TYPE(cell_control_/;"	k	type:input_type
cell_control_type	qes_types_module.f90	/^  TYPE :: cell_control_type$/;"	t	module:qes_types_module
cell_damping	input_parameters.f90	/^        REAL(DP) :: cell_damping /;"	v	module:input_parameters
cell_data	qmmm.f90	/^  REAL(DP) :: cell_data(/;"	v	module:qmmm
cell_defaults	read_namelists.f90	/^     SUBROUTINE cell_defaults(/;"	s	module:read_namelists_module
cell_dofree	input_parameters.f90	/^        CHARACTER(len=80) :: cell_dofree /;"	v	module:input_parameters
cell_dyn_init	cell_base.f90	/^  SUBROUTINE cell_dyn_init(/;"	s	module:cell_base
cell_dynamics	input_parameters.f90	/^        CHARACTER(len=80) :: cell_dynamics /;"	v	module:input_parameters
cell_dynamics	qes_types_module.f90	/^    CHARACTER(len=256) :: cell_dynamics$/;"	k	type:cell_control_type
cell_dynamics_allowed	input_parameters.f90	/^        CHARACTER(len=80) :: cell_dynamics_allowed(/;"	v	module:input_parameters
cell_factor	input_parameters.f90	/^        REAL(DP) :: cell_factor /;"	v	module:input_parameters
cell_factor	qes_types_module.f90	/^    REAL(DP) :: cell_factor$/;"	k	type:cell_control_type
cell_factor_ispresent	qes_types_module.f90	/^    LOGICAL  :: cell_factor_ispresent /;"	k	type:cell_control_type
cell_force	cell_base.f90	/^  subroutine cell_force(/;"	s	module:cell_base
cell_gamma	cell_base.f90	/^  SUBROUTINE cell_gamma(/;"	s	module:cell_base
cell_hmove	cell_base.f90	/^  subroutine cell_hmove(/;"	s	module:cell_base
cell_init_a	cell_base.f90	/^        SUBROUTINE cell_init_a(/;"	s	module:cell_base
cell_init_ht	cell_base.f90	/^        SUBROUTINE cell_init_ht(/;"	s	module:cell_base
cell_kinene	cell_base.f90	/^  subroutine cell_kinene(/;"	s	module:cell_base
cell_mm	qmmm.f90	/^  REAL(DP) :: cell_mm(/;"	v	module:qmmm
cell_move	cell_base.f90	/^  subroutine cell_move(/;"	s	module:cell_base
cell_nstepe	input_parameters.f90	/^        INTEGER   :: cell_nstepe /;"	v	module:input_parameters
cell_parameters	input_parameters.f90	/^        CHARACTER(len=80) :: cell_parameters /;"	v	module:input_parameters
cell_steepest	cell_base.f90	/^  SUBROUTINE cell_steepest(/;"	s	module:cell_base
cell_temperature	input_parameters.f90	/^        CHARACTER(len=80) :: cell_temperature /;"	v	module:input_parameters
cell_type	qes_types_module.f90	/^  TYPE :: cell_type$/;"	t	module:qes_types_module
cell_units	cell_base.f90	/^    CHARACTER(len=80) :: cell_units$/;"	v	module:cell_base
cell_units	input_parameters.f90	/^       CHARACTER(len=80) :: cell_units /;"	v	module:input_parameters
cell_update_vel	cell_base.f90	/^  SUBROUTINE cell_update_vel(/;"	s	module:cell_base
cell_velocities	input_parameters.f90	/^        CHARACTER(len=80) :: cell_velocities /;"	v	module:input_parameters
cell_verlet	cell_base.f90	/^  SUBROUTINE cell_verlet(/;"	s	module:cell_base
celldm	bz_form.f90	/^    REAL(DP) :: celldm(/;"	k	type:bz
celldm	cell_base.f90	/^    REAL(DP) :: celldm(/;"	v	module:cell_base
celldm	input_parameters.f90	/^        REAL(DP) :: celldm(/;"	v	module:input_parameters
celldm2abc	latgen.f90	/^SUBROUTINE celldm2abc /;"	s
charge	qes_types_module.f90	/^    REAL(DP) :: charge$/;"	k	type:ionicPolarization_type
charge	qmmm.f90	/^  REAL(DP), ALLOCATABLE :: charge(/;"	v	module:qmmm
charge_k_to_g	io_base.f90	/^    SUBROUTINE charge_k_to_g /;"	s	module:io_base
charge_mm	qmmm.f90	/^  REAL(DP), ALLOCATABLE :: charge_mm(/;"	v	module:qmmm
check	emend_upf.f90	/^FUNCTION check(/;"	f	module:emend_upf_module
check_atwfc_norm	read_pseudo.f90	/^SUBROUTINE check_atwfc_norm(/;"	s	module:read_pseudo_mod
check_constraint	constraints_module.f90	/^   SUBROUTINE check_constraint(/;"	s	module:constraints_module
check_file_exist	io_files.f90	/^  FUNCTION check_file_exist(/;"	f	module:io_files
check_file_exst	qexsd.f90	/^    FUNCTION check_file_exst(/;"	f	module:qexsd_module
check_flags	control_flags.f90	/^    SUBROUTINE check_flags(/;"	s	module:control_flags
check_mesh	radial_grids.f90	/^   subroutine check_mesh(/;"	s	module:radial_grids
check_namelist_read	read_namelists.f90	/^     SUBROUTINE check_namelist_read(/;"	s	module:read_namelists_module
check_one_face_centerer_orthorombic	bz_form.f90	/^SUBROUTINE check_one_face_centerer_orthorombic(/;"	s	module:bz_form
check_order	read_pseudo.f90	/^SUBROUTINE check_order$/;"	s	module:read_pseudo_mod
check_orthorombic	bz_form.f90	/^SUBROUTINE check_orthorombic(/;"	s	module:bz_form
check_restartfile	io_files.f90	/^    FUNCTION check_restartfile(/;"	f	module:io_files
check_stop	check_stop.f90	/^MODULE check_stop$/;"	m
check_stop_init	check_stop.f90	/^     SUBROUTINE check_stop_init(/;"	s	module:check_stop
check_stop_now	check_stop.f90	/^     FUNCTION check_stop_now(/;"	f	module:check_stop
check_tempdir	io_files.f90	/^  SUBROUTINE check_tempdir /;"	s	module:io_files
check_upf_file	upf.f90	/^FUNCTION check_upf_file(/;"	f	module:upf_module
check_wolfe_conditions	bfgs_module.f90	/^   SUBROUTINE check_wolfe_conditions(/;"	s	module:bfgs_module
check_writable	io_files.f90	/^  FUNCTION check_writable /;"	f	module:io_files
chi	pseudo_types.f90	/^     REAL(DP), POINTER :: chi(/;"	k	type:pseudo_upf
chunk_dim	hdf5_qe.f90	/^   INTEGER(HSIZE_T), DIMENSION(1:2) :: chunk_dim$/;"	k	type:HDF5_type
cisest	space_group.f90	/^  REAL(DP), PARAMETER :: cisest=/;"	v	module:space_group
class	qes_types_module.f90	/^    CHARACTER(len=256) :: class$/;"	k	type:info_type
class_ispresent	qes_types_module.f90	/^    LOGICAL :: class_ispresent /;"	k	type:info_type
clean_spacegroup	wyckoff.f90	/^SUBROUTINE clean_spacegroup$/;"	s	module:wyckoff
clean_tempdir	io_files.f90	/^  SUBROUTINE clean_tempdir(/;"	s	module:io_files
clock_type	qes_types_module.f90	/^  TYPE :: clock_type$/;"	t	module:qes_types_module
close_dataset	qeh5_module.f90	/^  SUBROUTINE close_dataset(/;"	s	module:qeh5_base_module
close_input_file	open_close_input_file.f90	/^INTEGER FUNCTION close_input_file /;"	f	module:open_close_input_file
closed	qes_types_module.f90	/^    CHARACTER(len=256) :: closed$/;"	k	type:closed_type
closed	qes_types_module.f90	/^    TYPE(closed_/;"	k	type:espresso_type
closed_ispresent	qes_types_module.f90	/^    LOGICAL  :: closed_ispresent /;"	k	type:espresso_type
closed_type	qes_types_module.f90	/^  TYPE :: closed_type$/;"	t	module:qes_types_module
closing_message	environment.f90	/^  SUBROUTINE closing_message(/;"	s	module:environment
cm_bgrp	wavefunctions.f90	/^     COMPLEX(DP), ALLOCATABLE :: cm_bgrp(/;"	v	module:wavefunctions
cntr	input_parameters.f90	/^      LOGICAL  :: cntr(/;"	v	module:input_parameters
coef	mdiis.f90	/^    REAL(DP), POINTER :: coef(/;"	k	type:mdiis_type
coef	wannier_new.f90	/^     pp(:,:),                  &! <phi|S|psi> projections$/;"	v	module:wannier_new
comm	becmod.f90	/^     INTEGER :: comm$/;"	k	type:bec_type
comm	hdf5_qe.f90	/^   INTEGER          :: comm$/;"	k	type:HDF5_type
command_line	command_line_options.f90	/^  CHARACTER(LEN=512) :: command_line /;"	v	module:command_line_options
command_line_options	command_line_options.f90	/^MODULE command_line_options$/;"	m
comment	pseudo_types.f90	/^     CHARACTER(LEN=80):: comment=/;"	k	type:pseudo_upf
compilation_info	environment.f90	/^  SUBROUTINE compilation_info /;"	s	module:environment
complex_matrix_pointer	wannier_gw.f90	/^  TYPE complex_matrix_pointer$/;"	t	module:wannier_gw
compute_ap	uspp.f90	/^  function compute_ap(/;"	f	module:uspp
compute_dipole	compute_dipole.f90	/^SUBROUTINE compute_dipole(/;"	s
compute_dmax	constraints_module.f90	/^   SUBROUTINE compute_dmax(/;"	s	module:constraints_module
compute_eextfor	ions_base.f90	/^  REAL(DP) FUNCTION compute_eextfor(/;"	f	module:ions_base
compute_trust_radius	bfgs_module.f90	/^   SUBROUTINE compute_trust_radius(/;"	s	module:bfgs_module
compute_vertices	bz_form.f90	/^SUBROUTINE compute_vertices(/;"	s	module:bz_form
con_cam	parser.f90	/^  SUBROUTINE con_cam(/;"	s	module:parser
constants	constants.f90	/^MODULE constants$/;"	m
constr	constraints_module.f90	/^   REAL(DP), ALLOCATABLE :: constr(/;"	v	module:constraints_module
constr_inp	input_parameters.f90	/^      REAL(DP),          ALLOCATABLE :: constr_inp(/;"	v	module:input_parameters
constr_parms	qes_types_module.f90	/^    REAL(DP), DIMENSION(4) :: constr_parms$/;"	k	type:atomic_constraint_type
constr_target	constraints_module.f90	/^   REAL(DP), ALLOCATABLE :: constr_target(/;"	v	module:constraints_module
constr_target	qes_types_module.f90	/^    REAL(DP) :: constr_target$/;"	k	type:atomic_constraint_type
constr_target_inp	input_parameters.f90	/^      REAL(DP),          ALLOCATABLE :: constr_target_inp(/;"	v	module:input_parameters
constr_target_set	input_parameters.f90	/^      LOGICAL,           ALLOCATABLE :: constr_target_set(/;"	v	module:input_parameters
constr_tol	constraints_module.f90	/^   REAL(DP)              :: constr_tol$/;"	v	module:constraints_module
constr_tol_inp	input_parameters.f90	/^      REAL(DP) :: constr_tol_inp /;"	v	module:input_parameters
constr_type	constraints_module.f90	/^   INTEGER,  ALLOCATABLE :: constr_type(/;"	v	module:constraints_module
constr_type	qes_types_module.f90	/^    CHARACTER(len=256) :: constr_type$/;"	k	type:atomic_constraint_type
constr_type_inp	input_parameters.f90	/^      CHARACTER(len=20), ALLOCATABLE :: constr_type_inp(/;"	v	module:input_parameters
constrain_pot	input_parameters.f90	/^          REAL(DP) :: &$/;"	v	module:input_parameters
constrained_magnetization	input_parameters.f90	/^        CHARACTER(len=80) :: constrained_magnetization /;"	v	module:input_parameters
constraint_grad	constraints_module.f90	/^   SUBROUTINE constraint_grad(/;"	s	module:constraints_module
constraints_module	constraints_module.f90	/^MODULE constraints_module$/;"	m
contributed_bands	mp_exx.f90	/^  LOGICAL, ALLOCATABLE :: contributed_bands(/;"	v	module:mp_exx
control	input_parameters.f90	/^        NAMELIST \/ control /;"	n	module:input_parameters
control_bcast	read_namelists.f90	/^     SUBROUTINE control_bcast(/;"	s	module:read_namelists_module
control_checkin	read_namelists.f90	/^     SUBROUTINE control_checkin(/;"	s	module:read_namelists_module
control_defaults	read_namelists.f90	/^     SUBROUTINE control_defaults(/;"	s	module:read_namelists_module
control_flags	control_flags.f90	/^MODULE control_flags$/;"	m
control_variables	qes_types_module.f90	/^    TYPE(control_variables_/;"	k	type:input_type
control_variables_type	qes_types_module.f90	/^  TYPE :: control_variables_type$/;"	t	module:qes_types_module
conv_bfgs	bfgs_module.f90	/^   LOGICAL :: &$/;"	v	module:bfgs_module
conv_elec	control_flags.f90	/^  LOGICAL, PUBLIC :: &$/;"	v	module:control_flags
conv_ions	control_flags.f90	/^  LOGICAL, PUBLIC :: &$/;"	v	module:control_flags
conv_thr	input_parameters.f90	/^        REAL(DP) :: conv_thr /;"	v	module:input_parameters
conv_thr	qes_types_module.f90	/^    REAL(DP) :: conv_thr$/;"	k	type:electron_control_type
conv_thr_init	input_parameters.f90	/^        REAL(DP) :: conv_thr_init /;"	v	module:input_parameters
conv_thr_multi	input_parameters.f90	/^        REAL(DP) :: conv_thr_multi /;"	v	module:input_parameters
converg_base_gamma	wave_base.f90	/^      SUBROUTINE converg_base_gamma(/;"	s	module:wave_base
converg_base_kp	wave_base.f90	/^      SUBROUTINE converg_base_kp(/;"	s	module:wave_base
convergence_achieved	qes_types_module.f90	/^    LOGICAL :: convergence_achieved$/;"	k	type:opt_conv_type
convergence_achieved	qes_types_module.f90	/^    LOGICAL :: convergence_achieved$/;"	k	type:scf_conv_type
convergence_criteria	control_flags.f90	/^  TYPE convergence_criteria$/;"	t	module:control_flags
convergence_info	qes_types_module.f90	/^    TYPE(convergence_info_/;"	k	type:output_type
convergence_info_ispresent	qes_types_module.f90	/^    LOGICAL  :: convergence_info_ispresent /;"	k	type:output_type
convergence_info_type	qes_types_module.f90	/^  TYPE :: convergence_info_type$/;"	t	module:qes_types_module
core_energy	pseudo_types.f90	/^     REAL(DP)         :: core_energy /;"	k	type:paw_in_upf
corpw91	more_functionals.f90	/^      subroutine corpw91(/;"	s
corpw91ns	more_functionals.f90	/^      subroutine corpw91ns(/;"	s
corr	funct.f90	/^  character (len=4) :: exc, corr,/;"	v	module:funct
corrected	coulomb_vcut.f90	/^      REAL(DP), POINTER :: corrected(/;"	k	type:vcut_type
cos_phi	paw_variables.f90	/^        REAL(DP),POINTER :: cos_phi(/;"	k	type:paw_radial_integrator
cos_th	paw_variables.f90	/^        REAL(DP),POINTER :: cos_th(/;"	k	type:paw_radial_integrator
cosab	cell_base.f90	/^    REAL(DP) :: a, b, c, cosab,/;"	v	module:cell_base
cosab	input_parameters.f90	/^        REAL(DP) :: cosab /;"	v	module:input_parameters
cosac	cell_base.f90	/^    REAL(DP) :: a, b, c, cosab, cosac,/;"	v	module:cell_base
cosac	input_parameters.f90	/^        REAL(DP) :: cosac /;"	v	module:input_parameters
cosbc	cell_base.f90	/^    REAL(DP) :: a, b, c, cosab, cosac, cosbc$/;"	v	module:cell_base
cosbc	input_parameters.f90	/^        REAL(DP) :: cosbc /;"	v	module:input_parameters
cotg_th	paw_variables.f90	/^        REAL(DP),POINTER :: cotg_th(/;"	k	type:paw_radial_integrator
coulomb_vcut_module	coulomb_vcut.f90	/^  MODULE coulomb_vcut_module$/;"	m
count	qeh5_module.f90	/^     INTEGER(HSIZE_T),ALLOCATABLE  ::  offset(:), count(/;"	k	type:qeh5_dataspace
counts	hdf5_qe.f90	/^   INTEGER(HSIZE_T), DIMENSION(2) :: counts,/;"	k	type:HDF5_type
counts_g	hdf5_qe.f90	/^   INTEGER(HSIZE_T), DIMENSION(2) :: counts, counts_g,/;"	k	type:HDF5_type
cpbe2d	functionals.f90	/^subroutine cpbe2d(/;"	s
cpu	qes_types_module.f90	/^    REAL(DP) :: cpu$/;"	k	type:clock_type
cputime	qes_types_module.f90	/^    INTEGER :: cputime$/;"	k	type:espresso_type
cputime_ispresent	qes_types_module.f90	/^    LOGICAL  :: cputime_ispresent /;"	k	type:espresso_type
crash_file	io_files.f90	/^  CHARACTER(LEN=5 ), PARAMETER :: crash_file /;"	v	module:io_files
create_directory	io_files.f90	/^  SUBROUTINE create_directory(/;"	s	module:io_files
created	qes_types_module.f90	/^    CHARACTER(len=256) :: created$/;"	k	type:created_type
created	qes_types_module.f90	/^    TYPE(created_/;"	k	type:general_info_type
created_type	qes_types_module.f90	/^  TYPE :: created_type$/;"	t	module:qes_types_module
creator	qes_types_module.f90	/^    CHARACTER(len=256) :: creator$/;"	k	type:creator_type
creator	qes_types_module.f90	/^    TYPE(creator_/;"	k	type:general_info_type
creator_type	qes_types_module.f90	/^  TYPE :: creator_type$/;"	t	module:qes_types_module
cross	constraints_module.f90	/^   FUNCTION cross(/;"	f	module:constraints_module
crp_list	hdf5_qe.f90	/^   INTEGER(HID_T) :: crp_list /;"	k	type:HDF5_type
cryst_to_cart	cryst_to_car.f90	/^subroutine cryst_to_cart /;"	s
crystal_positions	qes_types_module.f90	/^    TYPE(atomic_positions_type) :: crystal_positions$/;"	k	type:atomic_structure_type
crystal_positions_ispresent	qes_types_module.f90	/^    LOGICAL  :: crystal_positions_ispresent /;"	k	type:atomic_structure_type
current_nfi	autopilot.f90	/^  INTEGER   :: current_nfi$/;"	v	module:autopilot
custom_handler	set_signal.f90	/^SUBROUTINE custom_handler(/;"	s	module:set_signal
cutoff	coulomb_vcut.f90	/^      REAL(DP)          :: cutoff$/;"	k	type:vcut_type
cutoff_coulomb_analysis	wannier_gw.f90	/^  REAL(kind=DP) ::  cutoff_coulomb_analysis!/;"	v	module:wannier_gw
cv0	wavefunctions.f90	/^     COMPLEX(DP), ALLOCATABLE :: cv0(/;"	v	module:wavefunctions
cx13	functionals.f90	/^subroutine cx13 /;"	s
d2phi_dk2	kernel_table.f90	/^  real(dp), allocatable ::  d2phi_dk2(/;"	v	module:kernel_table
d3gcxc	funct.f90	/^    subroutine d3gcxc /;"	s	module:funct
dFs_ds	xc_vdW_DF.f90	/^  function dFs_ds(/;"	f	module:vdW_DF
dLIA	tsvdw.f90	/^REAL(DP), DIMENSION(:,:), ALLOCATABLE, PRIVATE :: dLIA /;"	v	module:tsvdw_module
dLIB	tsvdw.f90	/^REAL(DP), DIMENSION(:,:), ALLOCATABLE, PRIVATE :: dLIB /;"	v	module:tsvdw_module
datadir_in	qexsd.f90	/^  CHARACTER(256)   :: datadir_in,/;"	v	module:qexsd_module
datadir_out	qexsd.f90	/^  CHARACTER(256)   :: datadir_in, datadir_out$/;"	v	module:qexsd_module
dataspace	qeh5_module.f90	/^          TYPE(qeh5_dataspace /;"	v	subroutine:prepare_dataspace
datatype	qeh5_module.f90	/^     TYPE(qeh5_datatype)/;"	k	type:qeh5_dataset
date	pseudo_types.f90	/^     CHARACTER(LEN=80):: date=/;"	k	type:pseudo_upf
date_and_tim	date_and_tim.f90	/^subroutine date_and_tim /;"	s
davcio	io_files.f90	/^SUBROUTINE davcio(/;"	s
david	control_flags.f90	/^    isolve,           &! index selecting Davidson,  CG , PPCG or ParO diagonalization$/;"	v	module:control_flags
dbeta	uspp.f90	/^  REAL(DP), ALLOCATABLE :: &$/;"	v	module:uspp
dbs1gd	bspline.f90	/^  subroutine dbs1gd(/;"	s	module:bspline
dbs2dr	bspline.f90	/^  function dbs2dr(/;"	f	module:bspline
dbs2gd	bspline.f90	/^  subroutine dbs2gd(/;"	s	module:bspline
dbs2in	bspline.f90	/^  subroutine dbs2in(/;"	s	module:bspline
dbs2vl	bspline.f90	/^  function dbs2vl(/;"	f	module:bspline
dbs3dr	bspline.f90	/^  function dbs3dr(/;"	f	module:bspline
dbs3gd	bspline.f90	/^  subroutine dbs3gd(/;"	s	module:bspline
dbs3in	bspline.f90	/^  subroutine dbs3in(/;"	s	module:bspline
dbs3vl	bspline.f90	/^  function dbs3vl(/;"	f	module:bspline
dbsdca	bspline.f90	/^  function dbsdca(/;"	f	module:bspline
dbsder	bspline.f90	/^  function dbsder(/;"	f	module:bspline
dbsint	bspline.f90	/^  subroutine dbsint(/;"	s	module:bspline
dbsnak	bspline.f90	/^  subroutine dbsnak(/;"	s	module:bspline
dbsval	bspline.f90	/^  function dbsval(/;"	f	module:bspline
ddamp	tsvdw.f90	/^REAL(DP), PRIVATE :: ddamp /;"	v	module:tsvdw_module
ddd_paw	paw_variables.f90	/^    REAL(DP), ALLOCATABLE :: &$/;"	v	module:paw_variables
dealloca_london	mm_dispersion.f90	/^   SUBROUTINE dealloca_london$/;"	s	module:london_module
deallocate_bec_type	becmod.f90	/^  SUBROUTINE deallocate_bec_type /;"	s	module:becmod
deallocate_bz	bz_form.f90	/^SUBROUTINE deallocate_bz(/;"	s	module:bz_form
deallocate_constraint	constraints_module.f90	/^   SUBROUTINE deallocate_constraint(/;"	s	module:constraints_module
deallocate_elct	electrons_base.f90	/^    SUBROUTINE deallocate_elct(/;"	s	module:electrons_base
deallocate_gth	gth.f90	/^subroutine deallocate_gth(/;"	s	module:m_gth
deallocate_gvect	recvec.f90	/^     SUBROUTINE deallocate_gvect(/;"	s	module:gvect
deallocate_gvect_exx	recvec.f90	/^     SUBROUTINE deallocate_gvect_exx(/;"	s	module:gvect
deallocate_gvecw	gvecw.f90	/^     SUBROUTINE deallocate_gvecw$/;"	s	module:gvecw
deallocate_input_parameters	input_parameters.f90	/^  SUBROUTINE deallocate_input_parameters(/;"	s	module:input_parameters
deallocate_ions_base	ions_base.f90	/^    SUBROUTINE deallocate_ions_base(/;"	s	module:ions_base
deallocate_mdiis	mdiis.f90	/^  SUBROUTINE deallocate_mdiis(/;"	s	module:mdiis
deallocate_noncol	noncol.f90	/^    SUBROUTINE deallocate_noncol(/;"	s	module:noncollin_module
deallocate_paw_in_upf	pseudo_types.f90	/^  SUBROUTINE deallocate_paw_in_upf(/;"	s	module:pseudo_types
deallocate_pseudo_config	pseudo_types.f90	/^   SUBROUTINE deallocate_pseudo_config(/;"	s	module:pseudo_types
deallocate_pseudo_upf	pseudo_types.f90	/^  SUBROUTINE deallocate_pseudo_upf(/;"	s	module:pseudo_types
deallocate_radial_grid_s	radial_grids.f90	/^      subroutine deallocate_radial_grid_s(/;"	s	module:radial_grids
deallocate_radial_grid_v	radial_grids.f90	/^      subroutine deallocate_radial_grid_v(/;"	s	module:radial_grids
deallocate_uspp	uspp.f90	/^  SUBROUTINE deallocate_uspp(/;"	s	module:uspp
deallocate_wavefunctions	wavefunctions.f90	/^      SUBROUTINE deallocate_wavefunctions$/;"	s	module:wavefunctions
deeq	uspp.f90	/^       dvan(:,:,:),           &! the D functions of the solid$/;"	v	module:uspp
deeq_nc	uspp.f90	/^       dvan_so(:,:,:,:),         &! D_{nm}$/;"	v	module:uspp
define_dataset_hdf5_hyperslab	hdf5_qe.f90	/^  subroutine define_dataset_hdf5_hyperslab(/;"	s	module:hdf5_qe
degauss	input_parameters.f90	/^        REAL(DP) :: degauss /;"	v	module:input_parameters
degauss	qes_types_module.f90	/^    REAL(DP) :: degauss$/;"	k	type:smearing_type
degspin	constants.f90	/^  REAL(DP), PARAMETER :: degspin /;"	v	module:constants
delete_if_present	io_files.f90	/^  SUBROUTINE delete_if_present(/;"	s	module:io_files
delt	timestep.f90	/^        REAL(DP)  :: delth/;"	v	module:time_step
deltaT	qes_types_module.f90	/^    REAL(DP) :: deltaT$/;"	k	type:md_type
delta_eps	input_parameters.f90	/^      REAL(DP) :: delta_eps /;"	v	module:input_parameters
delta_self	wannier_gw.f90	/^  REAL(kind=DP) :: delta_self!/;"	v	module:wannier_gw
delta_sigma	input_parameters.f90	/^      REAL(DP) :: delta_sigma=/;"	v	module:input_parameters
delta_t	input_parameters.f90	/^        REAL(DP) :: delta_t /;"	v	module:input_parameters
delthal	timestep.f90	/^        REAL(DP)  :: delthal,/;"	v	module:time_step
demet	qes_types_module.f90	/^    REAL(DP) :: demet$/;"	k	type:total_energy_type
demet_ispresent	qes_types_module.f90	/^    LOGICAL  :: demet_ispresent /;"	k	type:total_energy_type
derho	control_flags.f90	/^     REAL(DP) :: derho$/;"	k	type:convergence_criteria
deth	cell_base.f90	/^          REAL(DP) :: deth$/;"	k	type:boxdimensions
deth	cell_base.f90	/^        REAL(DP) :: deth /;"	v	module:cell_base
dfft3d	fft_base.f90	/^        TYPE ( fft_type_descriptor ) :: dfft3d$/;"	v	module:fft_base
dfftb	fft_base.f90	/^        TYPE ( fft_box_descriptor ) :: dfftb /;"	v	module:fft_base
dfftp	fft_base.f90	/^        TYPE ( fft_type_descriptor ) :: dfftp /;"	v	module:fft_base
dffts	fft_base.f90	/^        TYPE ( fft_type_descriptor ) :: dffts /;"	v	module:fft_base
dft	funct.f90	/^  character (len=25) :: dft /;"	v	module:funct
dft	pseudo_types.f90	/^     CHARACTER(LEN=25) :: dft /;"	k	type:pseudo_upf
dft	qes_types_module.f90	/^    TYPE(dft_/;"	k	type:input_type
dft	qes_types_module.f90	/^    TYPE(dft_/;"	k	type:output_type
dftU	qes_types_module.f90	/^    TYPE(dftU_/;"	k	type:dft_type
dftU_ispresent	qes_types_module.f90	/^    LOGICAL  :: dftU_ispresent /;"	k	type:dft_type
dftU_type	qes_types_module.f90	/^  TYPE :: dftU_type$/;"	t	module:qes_types_module
dft_force_hybrid	funct.f90	/^  subroutine dft_force_hybrid(/;"	s	module:funct
dft_has_finite_size_correction	funct.f90	/^  function dft_has_finite_size_correction /;"	f	module:funct
dft_is_gradient	funct.f90	/^  function dft_is_gradient /;"	f	module:funct
dft_is_hybrid	funct.f90	/^  function dft_is_hybrid /;"	f	module:funct
dft_is_meta	funct.f90	/^  function dft_is_meta /;"	f	module:funct
dft_is_nonlocc	funct.f90	/^  function dft_is_nonlocc /;"	f	module:funct
dft_type	qes_types_module.f90	/^  TYPE :: dft_type$/;"	t	module:qes_types_module
dftd3_threebody	input_parameters.f90	/^        logical ::     dftd3_threebody /;"	v	module:input_parameters
dftd3_threebody	qes_types_module.f90	/^    LOGICAL :: dftd3_threebody$/;"	k	type:vdW_type
dftd3_threebody_ispresent	qes_types_module.f90	/^    LOGICAL  :: dftd3_threebody_ispresent /;"	k	type:vdW_type
dftd3_version	input_parameters.f90	/^        integer  ::    dftd3_version /;"	v	module:input_parameters
dftd3_version	qes_types_module.f90	/^    INTEGER :: dftd3_version$/;"	k	type:vdW_type
dftd3_version_ispresent	qes_types_module.f90	/^    LOGICAL  :: dftd3_version_ispresent /;"	k	type:vdW_type
dftname_cp	more_functionals.f90	/^      subroutine dftname_cp /;"	s
dgcxc	funct.f90	/^      subroutine dgcxc /;"	s	module:funct
dgcxc_spin	funct.f90	/^      subroutine dgcxc_spin /;"	s	module:funct
diago_cg_maxiter	input_parameters.f90	/^        INTEGER :: diago_cg_maxiter /;"	v	module:input_parameters
diago_cg_maxiter	qes_types_module.f90	/^    INTEGER :: diago_cg_maxiter$/;"	k	type:electron_control_type
diago_cg_maxiter_ispresent	qes_types_module.f90	/^    LOGICAL  :: diago_cg_maxiter_ispresent /;"	k	type:electron_control_type
diago_david_ndim	input_parameters.f90	/^        INTEGER :: diago_david_ndim /;"	v	module:input_parameters
diago_david_ndim	qes_types_module.f90	/^    INTEGER :: diago_david_ndim$/;"	k	type:electron_control_type
diago_david_ndim_ispresent	qes_types_module.f90	/^    LOGICAL  :: diago_david_ndim_ispresent /;"	k	type:electron_control_type
diago_full_acc	control_flags.f90	/^  LOGICAL, PUBLIC :: &$/;"	v	module:control_flags
diago_full_acc	input_parameters.f90	/^        LOGICAL :: diago_full_acc /;"	v	module:input_parameters
diago_full_acc	qes_types_module.f90	/^    LOGICAL :: diago_full_acc$/;"	k	type:electron_control_type
diago_ppcg_maxiter	input_parameters.f90	/^        INTEGER :: diago_ppcg_maxiter /;"	v	module:input_parameters
diago_ppcg_maxiter	qes_types_module.f90	/^    INTEGER :: diago_ppcg_maxiter$/;"	k	type:electron_control_type
diago_ppcg_maxiter_ispresent	qes_types_module.f90	/^    LOGICAL  :: diago_ppcg_maxiter_ispresent /;"	k	type:electron_control_type
diago_thr2	wannier_gw.f90	/^  REAL(kind=DP) :: diago_thr2!/;"	v	module:wannier_gw
diago_thr_init	input_parameters.f90	/^        REAL(DP) :: diago_thr_init /;"	v	module:input_parameters
diago_thr_init	qes_types_module.f90	/^    REAL(DP) :: diago_thr_init$/;"	k	type:electron_control_type
diagonalization	input_parameters.f90	/^        CHARACTER(len=80) :: diagonalization /;"	v	module:input_parameters
diagonalization	qes_types_module.f90	/^    CHARACTER(len=256) :: diagonalization$/;"	k	type:electron_control_type
diis_achmix	input_parameters.f90	/^        REAL(DP) :: diis_achmix /;"	v	module:input_parameters
diis_chguess	input_parameters.f90	/^        LOGICAL :: diis_chguess /;"	v	module:input_parameters
diis_delt	input_parameters.f90	/^        REAL(DP) :: diis_delt /;"	v	module:input_parameters
diis_ethr	input_parameters.f90	/^        REAL(DP) :: diis_ethr /;"	v	module:input_parameters
diis_fthr	input_parameters.f90	/^        REAL(DP) :: diis_fthr /;"	v	module:input_parameters
diis_g0chmix	input_parameters.f90	/^        REAL(DP) :: diis_g0chmix /;"	v	module:input_parameters
diis_g1chmix	input_parameters.f90	/^        REAL(DP) :: diis_g1chmix /;"	v	module:input_parameters
diis_hcut	input_parameters.f90	/^        REAL(DP) :: diis_hcut /;"	v	module:input_parameters
diis_maxstep	input_parameters.f90	/^        INTEGER :: diis_maxstep /;"	v	module:input_parameters
diis_nchmix	input_parameters.f90	/^        INTEGER :: diis_nchmix /;"	v	module:input_parameters
diis_nreset	input_parameters.f90	/^        INTEGER :: diis_nreset /;"	v	module:input_parameters
diis_nrot	input_parameters.f90	/^        INTEGER :: diis_nrot(/;"	v	module:input_parameters
diis_rot	input_parameters.f90	/^        LOGICAL :: diis_rot /;"	v	module:input_parameters
diis_rothr	input_parameters.f90	/^        REAL(DP) :: diis_rothr(/;"	v	module:input_parameters
diis_size	input_parameters.f90	/^        INTEGER :: diis_size /;"	v	module:input_parameters
diis_temp	input_parameters.f90	/^        REAL(DP) :: diis_temp /;"	v	module:input_parameters
diis_wthr	input_parameters.f90	/^        REAL(DP) :: diis_wthr /;"	v	module:input_parameters
dims	qeh5_module.f90	/^     INTEGER(HSIZE_T),ALLOCATABLE  ::  dims(/;"	k	type:qeh5_dataspace
dims	qeh5_module.f90	/^     INTEGER,ALLOCATABLE   ::  dims(/;"	k	type:qeh5_datatype
dims	qes_types_module.f90	/^    INTEGER, DIMENSION(:), ALLOCATABLE :: dims$/;"	k	type:Hubbard_ns_type
dims	qes_types_module.f90	/^    INTEGER, DIMENSION(:), ALLOCATABLE :: dims$/;"	k	type:integerMatrix_type
dims	qes_types_module.f90	/^    INTEGER, DIMENSION(:), ALLOCATABLE :: dims$/;"	k	type:matrix_type
dion	pseudo_types.f90	/^     REAL(DP), POINTER :: dion(/;"	k	type:pseudo_upf
dipfield	input_parameters.f90	/^        LOGICAL :: dipfield /;"	v	module:input_parameters
dipole	qes_types_module.f90	/^    TYPE(scalarQuantity_type) :: dipole$/;"	k	type:dipoleOutput_type
dipoleField	qes_types_module.f90	/^    TYPE(scalarQuantity_type) :: dipoleField$/;"	k	type:dipoleOutput_type
dipoleInfo	qes_types_module.f90	/^    TYPE(dipoleOutput_type) :: dipoleInfo$/;"	k	type:outputElectricField_type
dipoleInfo_ispresent	qes_types_module.f90	/^    LOGICAL  :: dipoleInfo_ispresent /;"	k	type:outputElectricField_type
dipoleOutput_type	qes_types_module.f90	/^  TYPE :: dipoleOutput_type$/;"	t	module:qes_types_module
dipole_correction	qes_types_module.f90	/^    LOGICAL :: dipole_correction$/;"	k	type:electric_field_type
dipole_correction_ispresent	qes_types_module.f90	/^    LOGICAL  :: dipole_correction_ispresent /;"	k	type:electric_field_type
direct_and_reciprocal_lattice	bz_form.f90	/^SUBROUTINE direct_and_reciprocal_lattice(/;"	s	module:bz_form
direction	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: direction$/;"	k	type:polarization_type
diropn	io_files.f90	/^subroutine diropn /;"	s	module:io_files
discard_input_dft	funct.f90	/^  logical :: discard_input_dft /;"	v	module:funct
disk_io	input_parameters.f90	/^        CHARACTER(len=80) :: disk_io /;"	v	module:input_parameters
disk_io	qes_types_module.f90	/^    CHARACTER(len=256) :: disk_io$/;"	k	type:control_variables_type
dist2	mm_dispersion.f90	/^                               r     ( : , : ) , &$/;"	v	module:london_module
distribute_bands	electrons_base.f90	/^    SUBROUTINE distribute_bands(/;"	s	module:electrons_base
dk	kernel_table.f90	/^  real(dp) :: r_max, q_cut, q_min, dk /;"	v	module:kernel_table
dkF_drho	xc_vdW_DF.f90	/^  function dkF_drho(/;"	f	module:vdW_DF
dmax	constraints_module.f90	/^   REAL(DP)              :: dmax$/;"	v	module:constraints_module
dmxc	funct.f90	/^      function dmxc /;"	f	module:funct
dmxc_nc	funct.f90	/^      subroutine dmxc_nc /;"	s	module:funct
dmxc_spin	funct.f90	/^      subroutine dmxc_spin /;"	s	module:funct
do_init_r0	qmmm.f90	/^  LOGICAL :: do_init_r0 /;"	v	module:qmmm
do_magnetization	qes_types_module.f90	/^    LOGICAL :: do_magnetization$/;"	k	type:magnetization_type
do_makov_payne	control_flags.f90	/^  LOGICAL, PUBLIC :: &$/;"	v	module:control_flags
do_mesh	radial_grids.f90	/^      subroutine do_mesh(/;"	s	module:radial_grids
dosplineint_1D	splinelib.f90	/^    SUBROUTINE dosplineint_1D(/;"	s	module:splinelib
dosplineint_2D	splinelib.f90	/^    SUBROUTINE dosplineint_2D(/;"	s	module:splinelib
dot_product_	basic_algebra_routines.f90	/^     FUNCTION dot_product_(/;"	f	module:basic_algebra_routines
dotp_gamma	wave_base.f90	/^          REAL(DP) FUNCTION dotp_gamma(/;"	f	module:wave_base
dotp_gamma_n	wave_base.f90	/^          REAL(DP) FUNCTION dotp_gamma_n(/;"	f	module:wave_base
dotp_kp	wave_base.f90	/^          COMPLEX(DP) FUNCTION dotp_kp(/;"	f	module:wave_base
dotp_kp_n	wave_base.f90	/^          COMPLEX(DP) FUNCTION dotp_kp_n(/;"	f	module:wave_base
double_format	kernel_table.f90	/^  character(LEN=30)   :: double_format /;"	v	module:kernel_table
doublegrid	recvec.f90	/^     LOGICAL  :: doublegrid /;"	v	module:gvecs
dpeff	tsvdw.f90	/^REAL(DP), DIMENSION(:), ALLOCATABLE, PRIVATE :: dpeff /;"	v	module:tsvdw_module
dpfree	tsvdw.f90	/^REAL(DP), DIMENSION(:), ALLOCATABLE, PRIVATE :: dpfree /;"	v	module:tsvdw_module
dpz	functionals.f90	/^function dpz /;"	f
dpz_polarized	lsda_functionals.f90	/^function dpz_polarized /;"	f
dqx_drho	xc_vdW_DF.f90	/^  function dqx_drho(/;"	f	module:vdW_DF
ds_dgradrho	xc_vdW_DF.f90	/^  function ds_dgradrho(/;"	f	module:vdW_DF
ds_drho	xc_vdW_DF.f90	/^  function ds_drho(/;"	f	module:vdW_DF
dset_id	hdf5_qe.f90	/^   INTEGER(HID_T) :: dset_id /;"	k	type:HDF5_type
dsetname	hdf5_qe.f90	/^   CHARACTER(LEN=40) :: dsetname /;"	k	type:HDF5_type
dt	input_parameters.f90	/^        REAL(DP) :: dt /;"	v	module:input_parameters
dt2	timestep.f90	/^        REAL(DP)  :: delthal, twodelt, fordt2,/;"	v	module:time_step
dt2by2	timestep.f90	/^        REAL(DP)  :: delthal, twodelt, fordt2, dt2, dt2by2,/;"	v	module:time_step
dt_emin	input_parameters.f90	/^        REAL(DP) :: dt_emin /;"	v	module:input_parameters
dt_old	control_flags.f90	/^  REAL(DP) :: dt_old /;"	v	module:control_flags
dthr	input_parameters.f90	/^      REAL(DP) :: dthr /;"	v	module:input_parameters
dual	recvec.f90	/^     REAL(DP) :: dual /;"	v	module:gvecs
dual_bse	wannier_gw.f90	/^  REAL(kind=DP) :: dual_bse!/;"	v	module:wannier_gw
dual_pb	wannier_gw.f90	/^  REAL(kind=DP) :: dual_pb!/;"	v	module:wannier_gw
dual_vs	wannier_gw.f90	/^  REAL(kind=DP) :: dual_vs!/;"	v	module:wannier_gw
dual_vt	wannier_gw.f90	/^  REAL(kind=DP) :: dual_vt!/;"	v	module:wannier_gw
duterz	space_group.f90	/^  REAL(DP), PARAMETER :: duterz=/;"	v	module:space_group
dvan	uspp.f90	/^  REAL(DP), ALLOCATABLE :: &$/;"	v	module:uspp
dvan_so	uspp.f90	/^       qq_so(:,:,:,:),           &! Q_{nm}$/;"	v	module:uspp
dveffAdn	tsvdw.f90	/^REAL(DP), DIMENSION(:,:), ALLOCATABLE, PRIVATE:: dveffAdn /;"	v	module:tsvdw_module
dveffdR	tsvdw.f90	/^REAL(DP), DIMENSION(:,:,:), ALLOCATABLE, PRIVATE :: dveffdR /;"	v	module:tsvdw_module
dveffdh	tsvdw.f90	/^REAL(DP), DIMENSION(:,:,:), ALLOCATABLE, PRIVATE :: dveffdh /;"	v	module:tsvdw_module
dvloc_gth	gth.f90	/^subroutine dvloc_gth(/;"	s	module:m_gth
dx	pseudo_types.f90	/^     REAL(DP) :: dx /;"	k	type:pseudo_upf
dx	radial_grids.f90	/^       zmesh,      & ! the ionic charge used for the mesh$/;"	k	type:radial_grid_type
dylmp	paw_variables.f90	/^        REAL(DP),POINTER :: dylmt(:,:),&! |d(ylm)\/dtheta|**2$/;"	k	type:paw_radial_integrator
dylmr2	dylmr2.f90	/^subroutine dylmr2 /;"	s
dylmt	paw_variables.f90	/^        REAL(DP),POINTER :: dylmt(/;"	k	type:paw_radial_integrator
e2	constants.f90	/^  REAL(DP), PARAMETER :: e2 /;"	v	module:constants
e2	coulomb_vcut.f90	/^  REAL(DP), PARAMETER :: e2 /;"	v	module:coulomb_vcut_module
eV_to_kelvin	constants.f90	/^  REAL(DP), PARAMETER :: eV_to_kelvin /;"	v	module:constants
eamp	input_parameters.f90	/^        REAL(DP) :: eamp /;"	v	module:input_parameters
eband	qes_types_module.f90	/^    REAL(DP) :: eband$/;"	k	type:total_energy_type
eband_ispresent	qes_types_module.f90	/^    LOGICAL  :: eband_ispresent /;"	k	type:total_energy_type
ebecsum	uspp.f90	/^  REAL(DP), ALLOCATABLE :: &$/;"	v	module:uspp
ecfixed	gvecw.f90	/^     REAL(DP) :: ecfixed=/;"	v	module:gvecw
ecfixed	input_parameters.f90	/^        REAL(DP) :: ecfixed /;"	v	module:input_parameters
ecfixed	qes_types_module.f90	/^    REAL(DP) :: ecfixed$/;"	k	type:ekin_functional_type
ecorpbe	more_functionals.f90	/^      subroutine ecorpbe(/;"	s
ecutfock	input_parameters.f90	/^        REAL(DP) :: ecutfock /;"	v	module:input_parameters
ecutfock	qes_types_module.f90	/^    REAL(DP) :: ecutfock$/;"	k	type:hybrid_type
ecutfock_ispresent	qes_types_module.f90	/^    LOGICAL  :: ecutfock_ispresent /;"	k	type:hybrid_type
ecutoff_global	wannier_gw.f90	/^  REAL(kind=DP) :: ecutoff_global!/;"	v	module:wannier_gw
ecutrho	input_parameters.f90	/^        REAL(DP) :: ecutrho /;"	v	module:input_parameters
ecutrho	pseudo_types.f90	/^     REAL(DP) :: ecutrho /;"	k	type:pseudo_upf
ecutrho	qes_types_module.f90	/^    REAL(DP) :: ecutrho$/;"	k	type:basis_set_type
ecutrho	qes_types_module.f90	/^    REAL(DP) :: ecutrho$/;"	k	type:basis_type
ecutrho	recvec.f90	/^     REAL(DP) :: ecutrho /;"	v	module:gvect
ecutrho_ispresent	qes_types_module.f90	/^    LOGICAL  :: ecutrho_ispresent /;"	k	type:basis_set_type
ecutrho_ispresent	qes_types_module.f90	/^    LOGICAL  :: ecutrho_ispresent /;"	k	type:basis_type
ecuts	recvec.f90	/^     REAL(DP) :: ecuts /;"	v	module:gvecs
ecutvcut	input_parameters.f90	/^        REAL(DP) :: ecutvcut /;"	v	module:input_parameters
ecutvcut	qes_types_module.f90	/^    REAL(DP) :: ecutvcut$/;"	k	type:hybrid_type
ecutvcut_ispresent	qes_types_module.f90	/^    LOGICAL  :: ecutvcut_ispresent /;"	k	type:hybrid_type
ecutwfc	gvecw.f90	/^     REAL(DP) :: ecutwfc /;"	v	module:gvecw
ecutwfc	input_parameters.f90	/^        REAL(DP) :: ecutwfc /;"	v	module:input_parameters
ecutwfc	pseudo_types.f90	/^     REAL(DP) :: ecutwfc /;"	k	type:pseudo_upf
ecutwfc	qes_types_module.f90	/^    REAL(DP) :: ecutwfc$/;"	k	type:basis_set_type
ecutwfc	qes_types_module.f90	/^    REAL(DP) :: ecutwfc$/;"	k	type:basis_type
edir	input_parameters.f90	/^        INTEGER  :: edir /;"	v	module:input_parameters
efield	input_parameters.f90	/^        REAL(DP) :: efield /;"	v	module:input_parameters
efield	qes_types_module.f90	/^    REAL(DP) :: efield$/;"	k	type:esm_type
efield2	input_parameters.f90	/^        REAL(DP) :: efield2 /;"	v	module:input_parameters
efield_cart	input_parameters.f90	/^        REAL(DP) :: efield_cart(/;"	v	module:input_parameters
efield_phase	input_parameters.f90	/^       CHARACTER(len=80) :: efield_phase=/;"	v	module:input_parameters
efieldcorr	qes_types_module.f90	/^    REAL(DP) :: efieldcorr$/;"	k	type:total_energy_type
efieldcorr_ispresent	qes_types_module.f90	/^    LOGICAL  :: efieldcorr_ispresent /;"	k	type:total_energy_type
efx0	input_parameters.f90	/^          REAL(DP) :: efx0,/;"	v	module:input_parameters
efx1	input_parameters.f90	/^          REAL(DP) :: efx1,/;"	v	module:input_parameters
efy0	input_parameters.f90	/^          REAL(DP) :: efx0, efy0,/;"	v	module:input_parameters
efy1	input_parameters.f90	/^          REAL(DP) :: efx1, efy1,/;"	v	module:input_parameters
efz0	input_parameters.f90	/^          REAL(DP) :: efx0, efy0, efz0$/;"	v	module:input_parameters
efz1	input_parameters.f90	/^          REAL(DP) :: efx1, efy1, efz1$/;"	v	module:input_parameters
egrp_pairs	mp_exx.f90	/^  INTEGER, ALLOCATABLE :: egrp_pairs(/;"	v	module:mp_exx
ehart	qes_types_module.f90	/^    REAL(DP) :: ehart$/;"	k	type:total_energy_type
ehart_ispresent	qes_types_module.f90	/^    LOGICAL  :: ehart_ispresent /;"	k	type:total_energy_type
eig_hdf5_write	hdf5_qe.f90	/^  TYPE(HDF5_type), save :: rho_hdf5_write, eig_hdf5_write$/;"	v	module:hdf5_qe
eigenvalues	qes_types_module.f90	/^    TYPE(vector_type) :: eigenvalues$/;"	k	type:ks_energies_type
eigts1	recvec.f90	/^     COMPLEX(DP), ALLOCATABLE :: eigts1(/;"	v	module:gvect
eigts2	recvec.f90	/^     COMPLEX(DP), ALLOCATABLE :: eigts1(:,:), eigts2(/;"	v	module:gvect
eigts3	recvec.f90	/^     COMPLEX(DP), ALLOCATABLE :: eigts1(:,:), eigts2(:,:), eigts3(/;"	v	module:gvect
ekcut	gvecw.f90	/^     REAL(DP) :: ekcut /;"	v	module:gvecw
ekin	control_flags.f90	/^     REAL(DP) :: ekin$/;"	k	type:convergence_criteria
ekin_conv_thr	control_flags.f90	/^  REAL(DP), PUBLIC :: &$/;"	v	module:control_flags
ekin_conv_thr	input_parameters.f90	/^        REAL(DP) :: ekin_conv_thr /;"	v	module:input_parameters
ekin_functional	qes_types_module.f90	/^    TYPE(ekin_functional_/;"	k	type:input_type
ekin_functional_ispresent	qes_types_module.f90	/^    LOGICAL  :: ekin_functional_ispresent /;"	k	type:input_type
ekin_functional_type	qes_types_module.f90	/^  TYPE :: ekin_functional_type$/;"	t	module:qes_types_module
ekin_maxiter	control_flags.f90	/^  INTEGER, PUBLIC :: &$/;"	v	module:control_flags
ekincw	input_parameters.f90	/^        REAL(DP) :: ekincw /;"	v	module:input_parameters
elec_dipole	qes_types_module.f90	/^    TYPE(scalarQuantity_type) :: elec_dipole$/;"	k	type:dipoleOutput_type
electric_field	qes_types_module.f90	/^    TYPE(electric_field_/;"	k	type:input_type
electric_field	qes_types_module.f90	/^    TYPE(outputElectricField_type) :: electric_field$/;"	k	type:output_type
electric_field_amplitude	qes_types_module.f90	/^    REAL(DP) :: electric_field_amplitude$/;"	k	type:electric_field_type
electric_field_amplitude_ispresent	qes_types_module.f90	/^    LOGICAL  :: electric_field_amplitude_ispresent /;"	k	type:electric_field_type
electric_field_direction	qes_types_module.f90	/^    INTEGER :: electric_field_direction$/;"	k	type:electric_field_type
electric_field_direction_ispresent	qes_types_module.f90	/^    LOGICAL  :: electric_field_direction_ispresent /;"	k	type:electric_field_type
electric_field_ispresent	qes_types_module.f90	/^    LOGICAL  :: electric_field_ispresent /;"	k	type:input_type
electric_field_ispresent	qes_types_module.f90	/^    LOGICAL  :: electric_field_ispresent /;"	k	type:output_type
electric_field_type	qes_types_module.f90	/^  TYPE :: electric_field_type$/;"	t	module:qes_types_module
electric_field_vector	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: electric_field_vector$/;"	k	type:electric_field_type
electric_field_vector_ispresent	qes_types_module.f90	/^    LOGICAL  :: electric_field_vector_ispresent /;"	k	type:electric_field_type
electric_potential	qes_types_module.f90	/^    CHARACTER(len=256) :: electric_potential$/;"	k	type:electric_field_type
electron_control	qes_types_module.f90	/^    TYPE(electron_control_/;"	k	type:input_type
electron_control_type	qes_types_module.f90	/^  TYPE :: electron_control_type$/;"	t	module:qes_types_module
electron_damping	input_parameters.f90	/^        REAL(DP) :: electron_damping /;"	v	module:input_parameters
electron_damping_emin	input_parameters.f90	/^        REAL(DP) :: electron_damping_emin /;"	v	module:input_parameters
electron_dynamics	input_parameters.f90	/^        CHARACTER(len=80) :: electron_dynamics /;"	v	module:input_parameters
electron_dynamics_allowed	input_parameters.f90	/^        CHARACTER(len=80) :: electron_dynamics_allowed(/;"	v	module:input_parameters
electron_maxstep	input_parameters.f90	/^        INTEGER :: electron_maxstep /;"	v	module:input_parameters
electron_temperature	input_parameters.f90	/^        CHARACTER(len=80) :: electron_temperature /;"	v	module:input_parameters
electron_velocities	input_parameters.f90	/^        CHARACTER(len=80) :: electron_velocities /;"	v	module:input_parameters
electronic	qes_types_module.f90	/^    REAL(DP) :: electronic$/;"	k	type:phase_type
electronicDipole	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: electronicDipole$/;"	k	type:finiteFieldOut_type
electronicPolarization	qes_types_module.f90	/^    TYPE(electronicPolarization_/;"	k	type:BerryPhaseOutput_type
electronicPolarization_type	qes_types_module.f90	/^  TYPE :: electronicPolarization_type$/;"	t	module:qes_types_module
electronic_ispresent	qes_types_module.f90	/^    LOGICAL :: electronic_ispresent /;"	k	type:phase_type
electrons	input_parameters.f90	/^        NAMELIST \/ electrons /;"	n	module:input_parameters
electrons_base	electrons_base.f90	/^  MODULE electrons_base$/;"	m
electrons_base_initval	electrons_base.f90	/^    SUBROUTINE electrons_base_initval(/;"	s	module:electrons_base
electrons_bcast	read_namelists.f90	/^     SUBROUTINE electrons_bcast(/;"	s	module:read_namelists_module
electrons_checkin	read_namelists.f90	/^     SUBROUTINE electrons_checkin(/;"	s	module:read_namelists_module
electrons_defaults	read_namelists.f90	/^     SUBROUTINE electrons_defaults(/;"	s	module:read_namelists_module
els	pseudo_types.f90	/^     CHARACTER(LEN=2), POINTER :: els(/;"	k	type:pseudo_upf
els	pseudo_types.f90	/^     CHARACTER(len=2),POINTER :: els(/;"	k	type:pseudo_config
els_beta	pseudo_types.f90	/^     CHARACTER(LEN=2), POINTER :: els_beta(/;"	k	type:pseudo_upf
emass	input_parameters.f90	/^        REAL(DP) :: emass /;"	v	module:input_parameters
emass_cutoff	input_parameters.f90	/^        REAL(DP) :: emass_cutoff /;"	v	module:input_parameters
emass_cutoff_emin	input_parameters.f90	/^        REAL(DP) :: emass_cutoff_emin /;"	v	module:input_parameters
emass_emin	input_parameters.f90	/^        REAL(DP) :: emass_emin /;"	v	module:input_parameters
emaxpos	input_parameters.f90	/^        REAL(DP) :: emaxpos /;"	v	module:input_parameters
emend_upf_module	emend_upf.f90	/^MODULE emend_upf_module /;"	m
ene_gw	wannier_gw.f90	/^  REAL(kind=DP), ALLOCATABLE :: ene_gw(/;"	v	module:wannier_gw
energy_london	mm_dispersion.f90	/^   FUNCTION energy_london /;"	f	module:london_module
energy_p	bfgs_module.f90	/^      trust_radius_old,  &! old displacement along the search direction$/;"	v	module:bfgs_module
energy_wolfe_condition	bfgs_module.f90	/^   LOGICAL FUNCTION energy_wolfe_condition /;"	f	module:bfgs_module
enforce_dft_exxrpa	funct.f90	/^  subroutine enforce_dft_exxrpa /;"	s	module:funct
enforce_ibrav	cell_base.f90	/^        LOGICAL   :: enforce_ibrav /;"	v	module:cell_base
enforce_input_dft	funct.f90	/^  subroutine enforce_input_dft /;"	s	module:funct
enls	pseudo_types.f90	/^     REAL(DP),POINTER         :: enls(/;"	k	type:pseudo_config
environment	environment.f90	/^MODULE environment$/;"	m
environment_end	environment.f90	/^  SUBROUTINE environment_end(/;"	s	module:environment
environment_start	environment.f90	/^  SUBROUTINE environment_start(/;"	s	module:environment
eopreg	input_parameters.f90	/^        REAL(DP) :: eopreg /;"	v	module:input_parameters
epol	input_parameters.f90	/^        INTEGER  :: epol /;"	v	module:input_parameters
epol2	input_parameters.f90	/^       INTEGER  :: epol2 /;"	v	module:input_parameters
eps12	constants.f90	/^  REAL(DP), PARAMETER :: eps12 /;"	v	module:constants
eps14	constants.f90	/^  REAL(DP), PARAMETER :: eps14 /;"	v	module:constants
eps16	constants.f90	/^  REAL(DP), PARAMETER :: eps16 /;"	v	module:constants
eps24	constants.f90	/^  REAL(DP), PARAMETER :: eps24 /;"	v	module:constants
eps32	constants.f90	/^  REAL(DP), PARAMETER :: eps32 /;"	v	module:constants
eps4	constants.f90	/^  REAL(DP), PARAMETER :: eps4 /;"	v	module:constants
eps6	constants.f90	/^  REAL(DP), PARAMETER :: eps6 /;"	v	module:constants
eps6	coulomb_vcut.f90	/^  REAL(DP), PARAMETER :: eps6 /;"	v	module:coulomb_vcut_module
eps8	constants.f90	/^  REAL(DP), PARAMETER :: eps8 /;"	v	module:constants
epseu	pseudo_types.f90	/^     REAL(DP), POINTER :: epseu(/;"	k	type:pseudo_upf
epsg	xc_rVV10.f90	/^  real(dp), parameter :: epsr = 1.d-12, epsg /;"	v	module:rVV10
epsr	xc_rVV10.f90	/^  real(dp), parameter :: epsr /;"	v	module:rVV10
epsr	xc_vdW_DF.f90	/^REAL(DP), PARAMETER :: epsr /;"	v	module:vdW_DF
eqq	latgen.f90	/^  LOGICAL FUNCTION eqq /;"	f	function:at2ibrav
equivalent_atoms	qes_types_module.f90	/^    INTEGER, DIMENSION(:), ALLOCATABLE :: equivalent_atoms$/;"	k	type:equivalent_atoms_type
equivalent_atoms	qes_types_module.f90	/^    TYPE(equivalent_atoms_/;"	k	type:symmetry_type
equivalent_atoms_ispresent	qes_types_module.f90	/^    LOGICAL  :: equivalent_atoms_ispresent /;"	k	type:symmetry_type
equivalent_atoms_type	qes_types_module.f90	/^  TYPE :: equivalent_atoms_type$/;"	t	module:qes_types_module
erfcvolume	generate_function.f90	/^  FUNCTION erfcvolume(/;"	f	module:generate_function
errmsg	bspline.f90	/^  character(256) :: errmsg$/;"	v	module:bspline
esclusion	wyckoff.f90	/^   SUBROUTINE esclusion(/;"	s	module:wyckoff
esm	qes_types_module.f90	/^    TYPE(esm_/;"	k	type:boundary_conditions_type
esm_a	input_parameters.f90	/^        REAL(DP) :: esm_a /;"	v	module:input_parameters
esm_bc	input_parameters.f90	/^        CHARACTER(LEN=3) :: esm_bc /;"	v	module:input_parameters
esm_debug	input_parameters.f90	/^        LOGICAL :: esm_debug /;"	v	module:input_parameters
esm_debug_gpmax	input_parameters.f90	/^        INTEGER :: esm_debug_gpmax /;"	v	module:input_parameters
esm_efield	input_parameters.f90	/^        REAL(DP) :: esm_efield /;"	v	module:input_parameters
esm_ispresent	qes_types_module.f90	/^    LOGICAL  :: esm_ispresent /;"	k	type:boundary_conditions_type
esm_nfit	input_parameters.f90	/^        INTEGER :: esm_nfit /;"	v	module:input_parameters
esm_type	qes_types_module.f90	/^  TYPE :: esm_type$/;"	t	module:qes_types_module
esm_w	input_parameters.f90	/^        REAL(DP) :: esm_w /;"	v	module:input_parameters
esm_zb	input_parameters.f90	/^        REAL(DP) :: esm_zb /;"	v	module:input_parameters
espresso_type	qes_types_module.f90	/^  TYPE :: espresso_type$/;"	t	module:qes_types_module
eta	mdiis.f90	/^    REAL(DP)          :: eta /;"	k	type:mdiis_type
ethr	control_flags.f90	/^  REAL(DP), PUBLIC  :: &$/;"	v	module:control_flags
etot	qes_types_module.f90	/^    REAL(DP) :: etot$/;"	k	type:total_energy_type
etot_conv_thr	control_flags.f90	/^       ekin_conv_thr = 0.0_DP, &!  conv. threshold for fictitious e. kinetic energy$/;"	v	module:control_flags
etot_conv_thr	input_parameters.f90	/^        REAL(DP) :: etot_conv_thr /;"	v	module:input_parameters
etot_conv_thr	qes_types_module.f90	/^    REAL(DP) :: etot_conv_thr$/;"	k	type:control_variables_type
etot_maxiter	control_flags.f90	/^       ekin_maxiter = 100,   &!  max number of iter. for ekin convergence$/;"	v	module:control_flags
etotps	pseudo_types.f90	/^     REAL(DP) :: etotps /;"	k	type:pseudo_upf
etresh	input_parameters.f90	/^        REAL(DP)  :: etresh /;"	v	module:input_parameters
etxc	qes_types_module.f90	/^    REAL(DP) :: etxc$/;"	k	type:total_energy_type
etxc_ispresent	qes_types_module.f90	/^    LOGICAL  :: etxc_ispresent /;"	k	type:total_energy_type
evc	wavefunctions.f90	/^     COMPLEX(DP), ALLOCATABLE, TARGET :: &$/;"	v	module:wavefunctions
evc_hdf5	hdf5_qe.f90	/^  TYPE(HDF5_type), save :: evc_hdf5,/;"	v	module:hdf5_qe
evc_hdf5_write	hdf5_qe.f90	/^  TYPE(HDF5_type), save :: evc_hdf5, evc_hdf5_write,/;"	v	module:hdf5_qe
event_dt	autopilot.f90	/^  LOGICAL :: event_dt(/;"	v	module:autopilot
event_electron_damping	autopilot.f90	/^  LOGICAL :: event_electron_damping(/;"	v	module:autopilot
event_electron_dynamics	autopilot.f90	/^  LOGICAL :: event_electron_dynamics(/;"	v	module:autopilot
event_electron_orthogonalization	autopilot.f90	/^  LOGICAL :: event_electron_orthogonalization(/;"	v	module:autopilot
event_emass	autopilot.f90	/^  LOGICAL :: event_emass(/;"	v	module:autopilot
event_index	autopilot.f90	/^  INTEGER   :: event_index /;"	v	module:autopilot
event_ion_damping	autopilot.f90	/^  LOGICAL :: event_ion_damping(/;"	v	module:autopilot
event_ion_dynamics	autopilot.f90	/^  LOGICAL :: event_ion_dynamics(/;"	v	module:autopilot
event_ion_temperature	autopilot.f90	/^  LOGICAL :: event_ion_temperature(/;"	v	module:autopilot
event_iprint	autopilot.f90	/^  LOGICAL :: event_iprint(/;"	v	module:autopilot
event_isave	autopilot.f90	/^  LOGICAL :: event_isave(/;"	v	module:autopilot
event_step	autopilot.f90	/^  INTEGER   :: event_step(/;"	v	module:autopilot
event_tempw	autopilot.f90	/^  LOGICAL :: event_tempw(/;"	v	module:autopilot
event_tprint	autopilot.f90	/^  LOGICAL :: event_tprint(/;"	v	module:autopilot
evq_hdf5_write	hdf5_qe.f90	/^  TYPE(HDF5_type), save :: evc_hdf5, evc_hdf5_write, evq_hdf5_write$/;"	v	module:hdf5_qe
evxc_t_vec	funct.f90	/^subroutine evxc_t_vec(/;"	s	module:funct
ewald	qes_types_module.f90	/^    REAL(DP) :: ewald$/;"	k	type:total_energy_type
ewald_ispresent	qes_types_module.f90	/^    LOGICAL  :: ewald_ispresent /;"	k	type:total_energy_type
exc	funct.f90	/^  character (len=4) :: exc,/;"	v	module:funct
exchpbe	more_functionals.f90	/^      subroutine exchpbe(/;"	s
exchpw91	more_functionals.f90	/^      subroutine exchpw91(/;"	s
exit_file	io_files.f90	/^  CHARACTER (LEN=261) :: exit_file /;"	v	module:io_files
exit_status	qexsd.f90	/^  INTEGER                                      :: exit_status$/;"	v	module:qexsd_module
expgsave	wannier_gw.f90	/^  COMPLEX(kind=DP), ALLOCATABLE :: expgsave(/;"	v	module:wannier_gw
expxc	more_functionals.f90	/^      subroutine expxc(/;"	s
ext_prod	remove_tot_torque.f90	/^    FUNCTION ext_prod(/;"	f	subroutine:remove_tot_torque
external_atomic_forces	qes_types_module.f90	/^    TYPE(matrix_type) :: external_atomic_forces$/;"	k	type:input_type
external_atomic_forces_ispresent	qes_types_module.f90	/^    LOGICAL  :: external_atomic_forces_ispresent /;"	k	type:input_type
external_gradient	gradutils.f90	/^SUBROUTINE external_gradient(/;"	s
external_hessian	gradutils.f90	/^SUBROUTINE external_hessian(/;"	s
external_laplacian	gradutils.f90	/^SUBROUTINE external_laplacian(/;"	s
external_product_	basic_algebra_routines.f90	/^     FUNCTION external_product_(/;"	f	module:basic_algebra_routines
extfor	ions_base.f90	/^      REAL(DP), ALLOCATABLE :: extfor(/;"	v	module:ions_base
extfortot	wyckoff.f90	/^REAL(DP), ALLOCATABLE :: tautot(:,:), extfortot(/;"	v	module:wyckoff
extra_pw_cutoff	wannier_gw.f90	/^  REAL(kind=DP) ::extra_pw_cutoff!/;"	v	module:wannier_gw
extract_string	hdf5_qe.f90	/^    SUBROUTINE extract_string$/;"	s	subroutine:read_attributes_hdf5_c
exx_dis_cutoff	input_parameters.f90	/^          REAL(DP) :: exx_dis_cutoff$/;"	v	module:input_parameters
exx_fraction	funct.f90	/^  real(DP):: exx_fraction /;"	v	module:funct
exx_fraction	input_parameters.f90	/^        REAL(DP) :: exx_fraction /;"	v	module:input_parameters
exx_fraction	qes_types_module.f90	/^    REAL(DP) :: exx_fraction$/;"	k	type:hybrid_type
exx_fraction_ispresent	qes_types_module.f90	/^    LOGICAL  :: exx_fraction_ispresent /;"	k	type:hybrid_type
exx_is_active	funct.f90	/^  function exx_is_active /;"	f	module:funct
exx_me_rcut_pair	input_parameters.f90	/^          REAL(DP) :: exx_me_rcut_pair$/;"	v	module:input_parameters
exx_me_rcut_self	input_parameters.f90	/^          REAL(DP) :: exx_me_rcut_self$/;"	v	module:input_parameters
exx_mode	mp_exx.f90	/^  INTEGER :: exx_mode /;"	v	module:mp_exx
exx_neigh	input_parameters.f90	/^          INTEGER  :: exx_neigh$/;"	v	module:input_parameters
exx_poisson_eps	input_parameters.f90	/^          REAL(DP) :: exx_poisson_eps$/;"	v	module:input_parameters
exx_ps_rcut_pair	input_parameters.f90	/^          REAL(DP) :: exx_ps_rcut_pair$/;"	v	module:input_parameters
exx_ps_rcut_self	input_parameters.f90	/^          REAL(DP) :: exx_ps_rcut_self$/;"	v	module:input_parameters
exx_started	funct.f90	/^  logical :: exx_started /;"	v	module:funct
exxdiv_treatment	input_parameters.f90	/^        CHARACTER(len=80) :: exxdiv_treatment /;"	v	module:input_parameters
exxdiv_treatment	qes_types_module.f90	/^    CHARACTER(len=256) :: exxdiv_treatment$/;"	k	type:hybrid_type
exxdiv_treatment_allowed	input_parameters.f90	/^        CHARACTER(len=80) :: exxdiv_treatment_allowed(/;"	v	module:input_parameters
exxdiv_treatment_ispresent	qes_types_module.f90	/^    LOGICAL  :: exxdiv_treatment_ispresent /;"	k	type:hybrid_type
f	electrons_base.f90	/^      REAL(DP), ALLOCATABLE :: f(/;"	v	module:electrons_base
f_bgrp	electrons_base.f90	/^      REAL(DP), ALLOCATABLE :: f_bgrp(/;"	v	module:electrons_base
f_chdir	wrappers.f90	/^  FUNCTION f_chdir(/;"	f	module:wrappers
f_chmod	wrappers.f90	/^  FUNCTION f_chmod(/;"	f	module:wrappers
f_copy	wrappers.f90	/^  FUNCTION f_copy(/;"	f	module:wrappers
f_getcwd	wrappers.f90	/^  SUBROUTINE f_getcwd(/;"	s	module:wrappers
f_inp	input_parameters.f90	/^        REAL(DP), ALLOCATABLE :: f_inp(/;"	v	module:input_parameters
f_mkdir	wrappers.f90	/^  FUNCTION f_mkdir(/;"	f	module:wrappers
f_mkdir_safe	wrappers.f90	/^  FUNCTION f_mkdir_safe(/;"	f	module:wrappers
f_remove	wrappers.f90	/^  FUNCTION f_remove(/;"	f	module:wrappers
f_rename	wrappers.f90	/^  FUNCTION f_rename(/;"	f	module:wrappers
f_rmdir	wrappers.f90	/^  FUNCTION f_rmdir(/;"	f	module:wrappers
factlist	noncol.f90	/^  REAL (DP), ALLOCATABLE :: &$/;"	v	module:noncollin_module
fcp_mass	fcp_variables.f90	/^   REAL(DP)         :: fcp_mass /;"	v	module:fcp_variables
fcp_mass	input_parameters.f90	/^        REAL(DP) :: fcp_mass /;"	v	module:input_parameters
fcp_mdiis_size	fcp_variables.f90	/^   INTEGER          :: fcp_mdiis_size /;"	v	module:fcp_variables
fcp_mdiis_size	input_parameters.f90	/^        INTEGER :: fcp_mdiis_size /;"	v	module:input_parameters
fcp_mdiis_step	fcp_variables.f90	/^   REAL(DP)         :: fcp_mdiis_step /;"	v	module:fcp_variables
fcp_mdiis_step	input_parameters.f90	/^        REAL(DP) :: fcp_mdiis_step /;"	v	module:input_parameters
fcp_mu	fcp_variables.f90	/^   REAL(DP)         :: fcp_mu /;"	v	module:fcp_variables
fcp_mu	input_parameters.f90	/^        REAL(DP) :: fcp_mu /;"	v	module:input_parameters
fcp_mu	qes_types_module.f90	/^    REAL(DP) :: fcp_mu$/;"	k	type:boundary_conditions_type
fcp_mu_ispresent	qes_types_module.f90	/^    LOGICAL  :: fcp_mu_ispresent /;"	k	type:boundary_conditions_type
fcp_opt	qes_types_module.f90	/^    LOGICAL :: fcp_opt$/;"	k	type:boundary_conditions_type
fcp_opt_ispresent	qes_types_module.f90	/^    LOGICAL  :: fcp_opt_ispresent /;"	k	type:boundary_conditions_type
fcp_relax	fcp_variables.f90	/^   CHARACTER(LEN=8) :: fcp_relax /;"	v	module:fcp_variables
fcp_relax	input_parameters.f90	/^        CHARACTER(LEN=8) :: fcp_relax /;"	v	module:input_parameters
fcp_relax_allowed	input_parameters.f90	/^        CHARACTER(len=8) :: fcp_relax_allowed(/;"	v	module:input_parameters
fcp_relax_crit	fcp_variables.f90	/^   REAL(DP)         :: fcp_relax_crit /;"	v	module:fcp_variables
fcp_relax_crit	input_parameters.f90	/^        REAL(DP) :: fcp_relax_crit /;"	v	module:input_parameters
fcp_relax_step	fcp_variables.f90	/^   REAL(DP)         :: fcp_relax_step /;"	v	module:fcp_variables
fcp_relax_step	input_parameters.f90	/^        REAL(DP) :: fcp_relax_step /;"	v	module:input_parameters
fcp_temperature	fcp_variables.f90	/^   REAL(DP)         :: fcp_temperature /;"	v	module:fcp_variables
fcp_tempw	input_parameters.f90	/^        REAL(DP) :: fcp_tempw /;"	v	module:input_parameters
fcp_tot_charge_first	fcp_variables.f90	/^   REAL(DP)         :: fcp_tot_charge_first /;"	v	module:fcp_variables
fcp_tot_charge_last	fcp_variables.f90	/^   REAL(DP)         :: fcp_tot_charge_last /;"	v	module:fcp_variables
fcp_variables	fcp_variables.f90	/^MODULE fcp_variables$/;"	m
fd_gradient	fd_gradient.f90	/^   MODULE fd_gradient$/;"	m
fermi_energy	input_parameters.f90	/^        REAL(DP) :: fermi_energy /;"	v	module:input_parameters
fermi_energy	qes_types_module.f90	/^    REAL(DP) :: fermi_energy$/;"	k	type:band_structure_type
fermi_energy_ispresent	qes_types_module.f90	/^    LOGICAL  :: fermi_energy_ispresent /;"	k	type:band_structure_type
feval_infix	wrappers.f90	/^  FUNCTION feval_infix(/;"	f	module:wrappers
fft_base	fft_base.f90	/^   MODULE fft_base$/;"	m
fft_base_info	fft_base.f90	/^      SUBROUTINE fft_base_info(/;"	s	module:fft_base
fft_box	qes_types_module.f90	/^    TYPE(basisSetItem_type) :: fft_box$/;"	k	type:basis_set_type
fft_box	qes_types_module.f90	/^    TYPE(basisSetItem_type) :: fft_box$/;"	k	type:basis_type
fft_box_ispresent	qes_types_module.f90	/^    LOGICAL  :: fft_box_ispresent /;"	k	type:basis_set_type
fft_box_ispresent	qes_types_module.f90	/^    LOGICAL  :: fft_box_ispresent /;"	k	type:basis_type
fft_graddot	gradutils.f90	/^SUBROUTINE fft_graddot(/;"	s
fft_gradient_g2r	gradutils.f90	/^SUBROUTINE fft_gradient_g2r(/;"	s
fft_gradient_r2r	gradutils.f90	/^SUBROUTINE fft_gradient_r2r(/;"	s
fft_grid	qes_types_module.f90	/^    TYPE(basisSetItem_type) :: fft_grid$/;"	k	type:basis_set_type
fft_grid	qes_types_module.f90	/^    TYPE(basisSetItem_type) :: fft_grid$/;"	k	type:basis_type
fft_grid_ispresent	qes_types_module.f90	/^    LOGICAL  :: fft_grid_ispresent /;"	k	type:basis_type
fft_hessian	gradutils.f90	/^SUBROUTINE fft_hessian(/;"	s
fft_hessian_g2r	gradutils.f90	/^SUBROUTINE fft_hessian_g2r /;"	s
fft_laplacian	gradutils.f90	/^SUBROUTINE fft_laplacian(/;"	s
fft_qgraddot	gradutils.f90	/^SUBROUTINE fft_qgraddot /;"	s
fft_qgradient	gradutils.f90	/^SUBROUTINE fft_qgradient /;"	s
fft_rho	fft_rho.f90	/^MODULE fft_rho$/;"	m
fft_smooth	qes_types_module.f90	/^    TYPE(basisSetItem_type) :: fft_smooth$/;"	k	type:basis_set_type
fft_smooth	qes_types_module.f90	/^    TYPE(basisSetItem_type) :: fft_smooth$/;"	k	type:basis_type
fft_smooth_ispresent	qes_types_module.f90	/^    LOGICAL  :: fft_smooth_ispresent /;"	k	type:basis_set_type
fft_smooth_ispresent	qes_types_module.f90	/^    LOGICAL  :: fft_smooth_ispresent /;"	k	type:basis_type
field_compare	parser.f90	/^  SUBROUTINE field_compare(/;"	s	module:parser
field_count	parser.f90	/^  SUBROUTINE field_count(/;"	s	module:parser
file_id	hdf5_qe.f90	/^   INTEGER(HID_T) :: file_id /;"	k	type:HDF5_type
filename	hdf5_qe.f90	/^   character(len=256) filename$/;"	k	type:HDF5_type
filespace	hdf5_qe.f90	/^   INTEGER(HID_T) :: filespace /;"	k	type:HDF5_type
filespace	qeh5_module.f90	/^     TYPE(qeh5_dataspace)  ::    filespace$/;"	k	type:qeh5_dataset
fill_vac	input_parameters.f90	/^      LOGICAL  :: fill_vac=/;"	v	module:input_parameters
finalize_hdf5	hdf5_qe.f90	/^  subroutine finalize_hdf5(/;"	s	module:hdf5_qe
finalize_hdf5	qeh5_module.f90	/^  SUBROUTINE finalize_hdf5(/;"	s	module:qeh5_base_module
find_axis_coordinates	bz_form.f90	/^SUBROUTINE find_axis_coordinates(/;"	s	module:bz_form
find_bz_type	bz_form.f90	/^SUBROUTINE find_bz_type(/;"	s	module:bz_form
find_equiv_1	space_group.f90	/^SUBROUTINE find_equiv_1 /;"	s	module:space_group
find_equiv_10	space_group.f90	/^SUBROUTINE find_equiv_10 /;"	s	module:space_group
find_equiv_100	space_group.f90	/^SUBROUTINE find_equiv_100(/;"	s	module:space_group
find_equiv_101	space_group.f90	/^SUBROUTINE find_equiv_101(/;"	s	module:space_group
find_equiv_102	space_group.f90	/^SUBROUTINE find_equiv_102(/;"	s	module:space_group
find_equiv_103	space_group.f90	/^SUBROUTINE find_equiv_103(/;"	s	module:space_group
find_equiv_104	space_group.f90	/^SUBROUTINE find_equiv_104(/;"	s	module:space_group
find_equiv_105	space_group.f90	/^SUBROUTINE find_equiv_105(/;"	s	module:space_group
find_equiv_106	space_group.f90	/^SUBROUTINE find_equiv_106(/;"	s	module:space_group
find_equiv_107	space_group.f90	/^SUBROUTINE find_equiv_107(/;"	s	module:space_group
find_equiv_108	space_group.f90	/^SUBROUTINE find_equiv_108(/;"	s	module:space_group
find_equiv_109	space_group.f90	/^SUBROUTINE find_equiv_109(/;"	s	module:space_group
find_equiv_11	space_group.f90	/^SUBROUTINE find_equiv_11 /;"	s	module:space_group
find_equiv_110	space_group.f90	/^SUBROUTINE find_equiv_110(/;"	s	module:space_group
find_equiv_111	space_group.f90	/^SUBROUTINE find_equiv_111(/;"	s	module:space_group
find_equiv_112	space_group.f90	/^SUBROUTINE find_equiv_112(/;"	s	module:space_group
find_equiv_113	space_group.f90	/^SUBROUTINE find_equiv_113(/;"	s	module:space_group
find_equiv_114	space_group.f90	/^SUBROUTINE find_equiv_114(/;"	s	module:space_group
find_equiv_115	space_group.f90	/^SUBROUTINE find_equiv_115(/;"	s	module:space_group
find_equiv_116	space_group.f90	/^SUBROUTINE find_equiv_116(/;"	s	module:space_group
find_equiv_117	space_group.f90	/^SUBROUTINE find_equiv_117(/;"	s	module:space_group
find_equiv_118	space_group.f90	/^SUBROUTINE find_equiv_118(/;"	s	module:space_group
find_equiv_119	space_group.f90	/^SUBROUTINE find_equiv_119(/;"	s	module:space_group
find_equiv_12	space_group.f90	/^SUBROUTINE find_equiv_12 /;"	s	module:space_group
find_equiv_120	space_group.f90	/^SUBROUTINE find_equiv_120(/;"	s	module:space_group
find_equiv_121	space_group.f90	/^SUBROUTINE find_equiv_121(/;"	s	module:space_group
find_equiv_122	space_group.f90	/^SUBROUTINE find_equiv_122(/;"	s	module:space_group
find_equiv_123	space_group.f90	/^SUBROUTINE find_equiv_123(/;"	s	module:space_group
find_equiv_124	space_group.f90	/^SUBROUTINE find_equiv_124(/;"	s	module:space_group
find_equiv_125	space_group.f90	/^SUBROUTINE find_equiv_125(/;"	s	module:space_group
find_equiv_126	space_group.f90	/^SUBROUTINE find_equiv_126(/;"	s	module:space_group
find_equiv_127	space_group.f90	/^SUBROUTINE find_equiv_127(/;"	s	module:space_group
find_equiv_128	space_group.f90	/^SUBROUTINE find_equiv_128(/;"	s	module:space_group
find_equiv_129	space_group.f90	/^SUBROUTINE find_equiv_129(/;"	s	module:space_group
find_equiv_13	space_group.f90	/^SUBROUTINE find_equiv_13 /;"	s	module:space_group
find_equiv_130	space_group.f90	/^SUBROUTINE find_equiv_130(/;"	s	module:space_group
find_equiv_131	space_group.f90	/^SUBROUTINE find_equiv_131(/;"	s	module:space_group
find_equiv_132	space_group.f90	/^SUBROUTINE find_equiv_132(/;"	s	module:space_group
find_equiv_133	space_group.f90	/^SUBROUTINE find_equiv_133(/;"	s	module:space_group
find_equiv_134	space_group.f90	/^SUBROUTINE find_equiv_134(/;"	s	module:space_group
find_equiv_135	space_group.f90	/^SUBROUTINE find_equiv_135(/;"	s	module:space_group
find_equiv_136	space_group.f90	/^SUBROUTINE find_equiv_136(/;"	s	module:space_group
find_equiv_137	space_group.f90	/^SUBROUTINE find_equiv_137(/;"	s	module:space_group
find_equiv_138	space_group.f90	/^SUBROUTINE find_equiv_138(/;"	s	module:space_group
find_equiv_139	space_group.f90	/^SUBROUTINE find_equiv_139(/;"	s	module:space_group
find_equiv_14	space_group.f90	/^SUBROUTINE find_equiv_14 /;"	s	module:space_group
find_equiv_140	space_group.f90	/^SUBROUTINE find_equiv_140(/;"	s	module:space_group
find_equiv_141	space_group.f90	/^SUBROUTINE find_equiv_141(/;"	s	module:space_group
find_equiv_142	space_group.f90	/^SUBROUTINE find_equiv_142(/;"	s	module:space_group
find_equiv_143	space_group.f90	/^SUBROUTINE find_equiv_143(/;"	s	module:space_group
find_equiv_144	space_group.f90	/^SUBROUTINE find_equiv_144(/;"	s	module:space_group
find_equiv_145	space_group.f90	/^SUBROUTINE find_equiv_145(/;"	s	module:space_group
find_equiv_146	space_group.f90	/^SUBROUTINE find_equiv_146(/;"	s	module:space_group
find_equiv_147	space_group.f90	/^SUBROUTINE find_equiv_147(/;"	s	module:space_group
find_equiv_148	space_group.f90	/^SUBROUTINE find_equiv_148(/;"	s	module:space_group
find_equiv_149	space_group.f90	/^SUBROUTINE find_equiv_149(/;"	s	module:space_group
find_equiv_15	space_group.f90	/^SUBROUTINE find_equiv_15 /;"	s	module:space_group
find_equiv_150	space_group.f90	/^SUBROUTINE find_equiv_150(/;"	s	module:space_group
find_equiv_151	space_group.f90	/^SUBROUTINE find_equiv_151(/;"	s	module:space_group
find_equiv_152	space_group.f90	/^SUBROUTINE find_equiv_152(/;"	s	module:space_group
find_equiv_153	space_group.f90	/^SUBROUTINE find_equiv_153(/;"	s	module:space_group
find_equiv_154	space_group.f90	/^SUBROUTINE find_equiv_154(/;"	s	module:space_group
find_equiv_155	space_group.f90	/^SUBROUTINE find_equiv_155(/;"	s	module:space_group
find_equiv_156	space_group.f90	/^SUBROUTINE find_equiv_156(/;"	s	module:space_group
find_equiv_157	space_group.f90	/^SUBROUTINE find_equiv_157(/;"	s	module:space_group
find_equiv_158	space_group.f90	/^SUBROUTINE find_equiv_158(/;"	s	module:space_group
find_equiv_159	space_group.f90	/^SUBROUTINE find_equiv_159(/;"	s	module:space_group
find_equiv_16	space_group.f90	/^SUBROUTINE find_equiv_16 /;"	s	module:space_group
find_equiv_160	space_group.f90	/^SUBROUTINE find_equiv_160(/;"	s	module:space_group
find_equiv_161	space_group.f90	/^SUBROUTINE find_equiv_161(/;"	s	module:space_group
find_equiv_162	space_group.f90	/^SUBROUTINE find_equiv_162(/;"	s	module:space_group
find_equiv_163	space_group.f90	/^SUBROUTINE find_equiv_163(/;"	s	module:space_group
find_equiv_164	space_group.f90	/^SUBROUTINE find_equiv_164(/;"	s	module:space_group
find_equiv_165	space_group.f90	/^SUBROUTINE find_equiv_165(/;"	s	module:space_group
find_equiv_166	space_group.f90	/^SUBROUTINE find_equiv_166(/;"	s	module:space_group
find_equiv_167	space_group.f90	/^SUBROUTINE find_equiv_167(/;"	s	module:space_group
find_equiv_168	space_group.f90	/^SUBROUTINE find_equiv_168(/;"	s	module:space_group
find_equiv_169	space_group.f90	/^SUBROUTINE find_equiv_169(/;"	s	module:space_group
find_equiv_17	space_group.f90	/^SUBROUTINE find_equiv_17 /;"	s	module:space_group
find_equiv_170	space_group.f90	/^SUBROUTINE find_equiv_170(/;"	s	module:space_group
find_equiv_171	space_group.f90	/^SUBROUTINE find_equiv_171(/;"	s	module:space_group
find_equiv_172	space_group.f90	/^SUBROUTINE find_equiv_172(/;"	s	module:space_group
find_equiv_173	space_group.f90	/^SUBROUTINE find_equiv_173(/;"	s	module:space_group
find_equiv_174	space_group.f90	/^SUBROUTINE find_equiv_174(/;"	s	module:space_group
find_equiv_175	space_group.f90	/^SUBROUTINE find_equiv_175(/;"	s	module:space_group
find_equiv_176	space_group.f90	/^SUBROUTINE find_equiv_176(/;"	s	module:space_group
find_equiv_177	space_group.f90	/^SUBROUTINE find_equiv_177(/;"	s	module:space_group
find_equiv_178	space_group.f90	/^SUBROUTINE find_equiv_178(/;"	s	module:space_group
find_equiv_179	space_group.f90	/^SUBROUTINE find_equiv_179(/;"	s	module:space_group
find_equiv_18	space_group.f90	/^SUBROUTINE find_equiv_18 /;"	s	module:space_group
find_equiv_180	space_group.f90	/^SUBROUTINE find_equiv_180(/;"	s	module:space_group
find_equiv_181	space_group.f90	/^SUBROUTINE find_equiv_181(/;"	s	module:space_group
find_equiv_182	space_group.f90	/^SUBROUTINE find_equiv_182(/;"	s	module:space_group
find_equiv_183	space_group.f90	/^SUBROUTINE find_equiv_183(/;"	s	module:space_group
find_equiv_184	space_group.f90	/^SUBROUTINE find_equiv_184(/;"	s	module:space_group
find_equiv_185	space_group.f90	/^SUBROUTINE find_equiv_185(/;"	s	module:space_group
find_equiv_186	space_group.f90	/^SUBROUTINE find_equiv_186(/;"	s	module:space_group
find_equiv_187	space_group.f90	/^SUBROUTINE find_equiv_187(/;"	s	module:space_group
find_equiv_188	space_group.f90	/^SUBROUTINE find_equiv_188(/;"	s	module:space_group
find_equiv_189	space_group.f90	/^SUBROUTINE find_equiv_189(/;"	s	module:space_group
find_equiv_19	space_group.f90	/^SUBROUTINE find_equiv_19 /;"	s	module:space_group
find_equiv_190	space_group.f90	/^SUBROUTINE find_equiv_190(/;"	s	module:space_group
find_equiv_191	space_group.f90	/^SUBROUTINE find_equiv_191(/;"	s	module:space_group
find_equiv_192	space_group.f90	/^SUBROUTINE find_equiv_192(/;"	s	module:space_group
find_equiv_193	space_group.f90	/^SUBROUTINE find_equiv_193(/;"	s	module:space_group
find_equiv_194	space_group.f90	/^SUBROUTINE find_equiv_194(/;"	s	module:space_group
find_equiv_195	space_group.f90	/^SUBROUTINE find_equiv_195(/;"	s	module:space_group
find_equiv_196	space_group.f90	/^SUBROUTINE find_equiv_196(/;"	s	module:space_group
find_equiv_197	space_group.f90	/^SUBROUTINE find_equiv_197(/;"	s	module:space_group
find_equiv_198	space_group.f90	/^SUBROUTINE find_equiv_198(/;"	s	module:space_group
find_equiv_199	space_group.f90	/^SUBROUTINE find_equiv_199(/;"	s	module:space_group
find_equiv_2	space_group.f90	/^SUBROUTINE find_equiv_2 /;"	s	module:space_group
find_equiv_20	space_group.f90	/^SUBROUTINE find_equiv_20 /;"	s	module:space_group
find_equiv_200	space_group.f90	/^SUBROUTINE find_equiv_200(/;"	s	module:space_group
find_equiv_201	space_group.f90	/^SUBROUTINE find_equiv_201(/;"	s	module:space_group
find_equiv_202	space_group.f90	/^SUBROUTINE find_equiv_202(/;"	s	module:space_group
find_equiv_203	space_group.f90	/^SUBROUTINE find_equiv_203(/;"	s	module:space_group
find_equiv_204	space_group.f90	/^SUBROUTINE find_equiv_204(/;"	s	module:space_group
find_equiv_205	space_group.f90	/^SUBROUTINE find_equiv_205(/;"	s	module:space_group
find_equiv_206	space_group.f90	/^SUBROUTINE find_equiv_206(/;"	s	module:space_group
find_equiv_207	space_group.f90	/^SUBROUTINE find_equiv_207(/;"	s	module:space_group
find_equiv_208	space_group.f90	/^SUBROUTINE find_equiv_208(/;"	s	module:space_group
find_equiv_209	space_group.f90	/^SUBROUTINE find_equiv_209(/;"	s	module:space_group
find_equiv_21	space_group.f90	/^SUBROUTINE find_equiv_21 /;"	s	module:space_group
find_equiv_210	space_group.f90	/^SUBROUTINE find_equiv_210(/;"	s	module:space_group
find_equiv_211	space_group.f90	/^SUBROUTINE find_equiv_211(/;"	s	module:space_group
find_equiv_212	space_group.f90	/^SUBROUTINE find_equiv_212(/;"	s	module:space_group
find_equiv_213	space_group.f90	/^SUBROUTINE find_equiv_213(/;"	s	module:space_group
find_equiv_214	space_group.f90	/^SUBROUTINE find_equiv_214(/;"	s	module:space_group
find_equiv_215	space_group.f90	/^SUBROUTINE find_equiv_215(/;"	s	module:space_group
find_equiv_216	space_group.f90	/^SUBROUTINE find_equiv_216(/;"	s	module:space_group
find_equiv_217	space_group.f90	/^SUBROUTINE find_equiv_217(/;"	s	module:space_group
find_equiv_218	space_group.f90	/^SUBROUTINE find_equiv_218(/;"	s	module:space_group
find_equiv_219	space_group.f90	/^SUBROUTINE find_equiv_219(/;"	s	module:space_group
find_equiv_22	space_group.f90	/^SUBROUTINE find_equiv_22 /;"	s	module:space_group
find_equiv_220	space_group.f90	/^SUBROUTINE find_equiv_220(/;"	s	module:space_group
find_equiv_221	space_group.f90	/^SUBROUTINE find_equiv_221(/;"	s	module:space_group
find_equiv_222	space_group.f90	/^SUBROUTINE find_equiv_222(/;"	s	module:space_group
find_equiv_223	space_group.f90	/^SUBROUTINE find_equiv_223(/;"	s	module:space_group
find_equiv_224	space_group.f90	/^SUBROUTINE find_equiv_224(/;"	s	module:space_group
find_equiv_225	space_group.f90	/^SUBROUTINE find_equiv_225(/;"	s	module:space_group
find_equiv_226	space_group.f90	/^SUBROUTINE find_equiv_226(/;"	s	module:space_group
find_equiv_227	space_group.f90	/^SUBROUTINE find_equiv_227(/;"	s	module:space_group
find_equiv_228	space_group.f90	/^SUBROUTINE find_equiv_228(/;"	s	module:space_group
find_equiv_229	space_group.f90	/^SUBROUTINE find_equiv_229(/;"	s	module:space_group
find_equiv_23	space_group.f90	/^SUBROUTINE find_equiv_23 /;"	s	module:space_group
find_equiv_230	space_group.f90	/^SUBROUTINE find_equiv_230(/;"	s	module:space_group
find_equiv_24	space_group.f90	/^SUBROUTINE find_equiv_24 /;"	s	module:space_group
find_equiv_25	space_group.f90	/^SUBROUTINE find_equiv_25 /;"	s	module:space_group
find_equiv_26	space_group.f90	/^SUBROUTINE find_equiv_26 /;"	s	module:space_group
find_equiv_27	space_group.f90	/^SUBROUTINE find_equiv_27 /;"	s	module:space_group
find_equiv_28	space_group.f90	/^SUBROUTINE find_equiv_28 /;"	s	module:space_group
find_equiv_29	space_group.f90	/^SUBROUTINE find_equiv_29 /;"	s	module:space_group
find_equiv_3	space_group.f90	/^SUBROUTINE find_equiv_3 /;"	s	module:space_group
find_equiv_30	space_group.f90	/^SUBROUTINE find_equiv_30 /;"	s	module:space_group
find_equiv_31	space_group.f90	/^SUBROUTINE find_equiv_31 /;"	s	module:space_group
find_equiv_32	space_group.f90	/^SUBROUTINE find_equiv_32 /;"	s	module:space_group
find_equiv_33	space_group.f90	/^SUBROUTINE find_equiv_33 /;"	s	module:space_group
find_equiv_34	space_group.f90	/^SUBROUTINE find_equiv_34 /;"	s	module:space_group
find_equiv_35	space_group.f90	/^SUBROUTINE find_equiv_35 /;"	s	module:space_group
find_equiv_36	space_group.f90	/^SUBROUTINE find_equiv_36 /;"	s	module:space_group
find_equiv_37	space_group.f90	/^SUBROUTINE find_equiv_37 /;"	s	module:space_group
find_equiv_38	space_group.f90	/^SUBROUTINE find_equiv_38 /;"	s	module:space_group
find_equiv_39	space_group.f90	/^SUBROUTINE find_equiv_39 /;"	s	module:space_group
find_equiv_4	space_group.f90	/^SUBROUTINE find_equiv_4 /;"	s	module:space_group
find_equiv_40	space_group.f90	/^SUBROUTINE find_equiv_40 /;"	s	module:space_group
find_equiv_41	space_group.f90	/^SUBROUTINE find_equiv_41 /;"	s	module:space_group
find_equiv_42	space_group.f90	/^SUBROUTINE find_equiv_42 /;"	s	module:space_group
find_equiv_43	space_group.f90	/^SUBROUTINE find_equiv_43 /;"	s	module:space_group
find_equiv_44	space_group.f90	/^SUBROUTINE find_equiv_44 /;"	s	module:space_group
find_equiv_45	space_group.f90	/^SUBROUTINE find_equiv_45 /;"	s	module:space_group
find_equiv_46	space_group.f90	/^SUBROUTINE find_equiv_46 /;"	s	module:space_group
find_equiv_47	space_group.f90	/^SUBROUTINE find_equiv_47 /;"	s	module:space_group
find_equiv_48	space_group.f90	/^SUBROUTINE find_equiv_48 /;"	s	module:space_group
find_equiv_49	space_group.f90	/^SUBROUTINE find_equiv_49 /;"	s	module:space_group
find_equiv_5	space_group.f90	/^SUBROUTINE find_equiv_5 /;"	s	module:space_group
find_equiv_50	space_group.f90	/^SUBROUTINE find_equiv_50 /;"	s	module:space_group
find_equiv_51	space_group.f90	/^SUBROUTINE find_equiv_51 /;"	s	module:space_group
find_equiv_52	space_group.f90	/^SUBROUTINE find_equiv_52 /;"	s	module:space_group
find_equiv_53	space_group.f90	/^SUBROUTINE find_equiv_53 /;"	s	module:space_group
find_equiv_54	space_group.f90	/^SUBROUTINE find_equiv_54 /;"	s	module:space_group
find_equiv_55	space_group.f90	/^SUBROUTINE find_equiv_55 /;"	s	module:space_group
find_equiv_56	space_group.f90	/^SUBROUTINE find_equiv_56 /;"	s	module:space_group
find_equiv_57	space_group.f90	/^SUBROUTINE find_equiv_57 /;"	s	module:space_group
find_equiv_58	space_group.f90	/^SUBROUTINE find_equiv_58 /;"	s	module:space_group
find_equiv_59	space_group.f90	/^SUBROUTINE find_equiv_59 /;"	s	module:space_group
find_equiv_6	space_group.f90	/^SUBROUTINE find_equiv_6 /;"	s	module:space_group
find_equiv_60	space_group.f90	/^SUBROUTINE find_equiv_60 /;"	s	module:space_group
find_equiv_61	space_group.f90	/^SUBROUTINE find_equiv_61 /;"	s	module:space_group
find_equiv_62	space_group.f90	/^SUBROUTINE find_equiv_62 /;"	s	module:space_group
find_equiv_63	space_group.f90	/^SUBROUTINE find_equiv_63 /;"	s	module:space_group
find_equiv_64	space_group.f90	/^SUBROUTINE find_equiv_64 /;"	s	module:space_group
find_equiv_65	space_group.f90	/^SUBROUTINE find_equiv_65 /;"	s	module:space_group
find_equiv_66	space_group.f90	/^SUBROUTINE find_equiv_66 /;"	s	module:space_group
find_equiv_67	space_group.f90	/^SUBROUTINE find_equiv_67 /;"	s	module:space_group
find_equiv_68	space_group.f90	/^SUBROUTINE find_equiv_68 /;"	s	module:space_group
find_equiv_69	space_group.f90	/^SUBROUTINE find_equiv_69 /;"	s	module:space_group
find_equiv_7	space_group.f90	/^SUBROUTINE find_equiv_7 /;"	s	module:space_group
find_equiv_70	space_group.f90	/^SUBROUTINE find_equiv_70 /;"	s	module:space_group
find_equiv_71	space_group.f90	/^SUBROUTINE find_equiv_71 /;"	s	module:space_group
find_equiv_72	space_group.f90	/^SUBROUTINE find_equiv_72 /;"	s	module:space_group
find_equiv_73	space_group.f90	/^SUBROUTINE find_equiv_73 /;"	s	module:space_group
find_equiv_74	space_group.f90	/^SUBROUTINE find_equiv_74 /;"	s	module:space_group
find_equiv_75	space_group.f90	/^SUBROUTINE find_equiv_75 /;"	s	module:space_group
find_equiv_76	space_group.f90	/^SUBROUTINE find_equiv_76 /;"	s	module:space_group
find_equiv_77	space_group.f90	/^SUBROUTINE find_equiv_77 /;"	s	module:space_group
find_equiv_78	space_group.f90	/^SUBROUTINE find_equiv_78 /;"	s	module:space_group
find_equiv_79	space_group.f90	/^SUBROUTINE find_equiv_79 /;"	s	module:space_group
find_equiv_8	space_group.f90	/^SUBROUTINE find_equiv_8 /;"	s	module:space_group
find_equiv_80	space_group.f90	/^SUBROUTINE find_equiv_80 /;"	s	module:space_group
find_equiv_81	space_group.f90	/^SUBROUTINE find_equiv_81 /;"	s	module:space_group
find_equiv_82	space_group.f90	/^SUBROUTINE find_equiv_82 /;"	s	module:space_group
find_equiv_83	space_group.f90	/^SUBROUTINE find_equiv_83 /;"	s	module:space_group
find_equiv_84	space_group.f90	/^SUBROUTINE find_equiv_84 /;"	s	module:space_group
find_equiv_85	space_group.f90	/^SUBROUTINE find_equiv_85 /;"	s	module:space_group
find_equiv_86	space_group.f90	/^SUBROUTINE find_equiv_86 /;"	s	module:space_group
find_equiv_87	space_group.f90	/^SUBROUTINE find_equiv_87 /;"	s	module:space_group
find_equiv_88	space_group.f90	/^SUBROUTINE find_equiv_88 /;"	s	module:space_group
find_equiv_89	space_group.f90	/^SUBROUTINE find_equiv_89 /;"	s	module:space_group
find_equiv_9	space_group.f90	/^SUBROUTINE find_equiv_9 /;"	s	module:space_group
find_equiv_90	space_group.f90	/^SUBROUTINE find_equiv_90 /;"	s	module:space_group
find_equiv_91	space_group.f90	/^SUBROUTINE find_equiv_91 /;"	s	module:space_group
find_equiv_92	space_group.f90	/^SUBROUTINE find_equiv_92 /;"	s	module:space_group
find_equiv_93	space_group.f90	/^SUBROUTINE find_equiv_93 /;"	s	module:space_group
find_equiv_94	space_group.f90	/^SUBROUTINE find_equiv_94 /;"	s	module:space_group
find_equiv_95	space_group.f90	/^SUBROUTINE find_equiv_95 /;"	s	module:space_group
find_equiv_96	space_group.f90	/^SUBROUTINE find_equiv_96 /;"	s	module:space_group
find_equiv_97	space_group.f90	/^SUBROUTINE find_equiv_97 /;"	s	module:space_group
find_equiv_98	space_group.f90	/^SUBROUTINE find_equiv_98 /;"	s	module:space_group
find_equiv_99	space_group.f90	/^SUBROUTINE find_equiv_99 /;"	s	module:space_group
find_equivalent_tau	space_group.f90	/^   SUBROUTINE find_equivalent_tau(/;"	s	module:space_group
find_free_unit	kernel_table.f90	/^  integer, external   :: find_free_unit$/;"	v	module:kernel_table
find_intersection	bz_form.f90	/^SUBROUTINE find_intersection(/;"	s	module:bz_form
find_letter_coordinate	bz_form.f90	/^SUBROUTINE find_letter_coordinate(/;"	s	module:bz_form
find_n1n2_monoclinic	bz_form.f90	/^SUBROUTINE find_n1n2_monoclinic(/;"	s	module:bz_form
find_vertices	bz_form.f90	/^SUBROUTINE find_vertices(/;"	s	module:bz_form
finiteElectricFieldInfo	qes_types_module.f90	/^    TYPE(finiteFieldOut_type) :: finiteElectricFieldInfo$/;"	k	type:outputElectricField_type
finiteElectricFieldInfo_ispresent	qes_types_module.f90	/^    LOGICAL  :: finiteElectricFieldInfo_ispresent /;"	k	type:outputElectricField_type
finiteFieldOut_type	qes_types_module.f90	/^  TYPE :: finiteFieldOut_type$/;"	t	module:qes_types_module
finite_size_cell_volume	funct.f90	/^  real(DP):: finite_size_cell_volume /;"	v	module:funct
finite_size_cell_volume_set	funct.f90	/^  logical :: finite_size_cell_volume_set /;"	v	module:funct
firstKeyPoint	qes_types_module.f90	/^    TYPE(k_point_type) :: firstKeyPoint$/;"	k	type:electronicPolarization_type
fit_pol	radial_gradients.f90	/^subroutine fit_pol(/;"	s
fit_qrl	read_uspp.f90	/^  subroutine fit_qrl /;"	s	subroutine:readvan
fix_area	cell_base.f90	/^        LOGICAL   :: fix_area /;"	v	module:cell_base
fix_area	qes_types_module.f90	/^    LOGICAL :: fix_area$/;"	k	type:cell_control_type
fix_area_ispresent	qes_types_module.f90	/^    LOGICAL  :: fix_area_ispresent /;"	k	type:cell_control_type
fix_dependencies	control_flags.f90	/^    SUBROUTINE fix_dependencies(/;"	s	module:control_flags
fix_volume	cell_base.f90	/^        LOGICAL   :: fix_volume /;"	v	module:cell_base
fix_volume	qes_types_module.f90	/^    LOGICAL :: fix_volume$/;"	k	type:cell_control_type
fix_volume_ispresent	qes_types_module.f90	/^    LOGICAL  :: fix_volume_ispresent /;"	k	type:cell_control_type
fixatom	ions_base.f90	/^      INTEGER :: fixatom /;"	v	module:ions_base
fixed_magnetization	input_parameters.f90	/^        REAL(DP) :: fixed_magnetization(/;"	v	module:input_parameters
fixval	read_namelists.f90	/^     SUBROUTINE fixval(/;"	s	module:read_namelists_module
fmt_name	qexsd.f90	/^  CHARACTER(5), PARAMETER :: fmt_name /;"	v	module:qexsd_module
fmt_version	qexsd.f90	/^  CHARACTER(5), PARAMETER :: fmt_version /;"	v	module:qexsd_module
fname	bfgs_module.f90	/^   CHARACTER (len=8) :: fname=/;"	v	module:bfgs_module
fnhscl	input_parameters.f90	/^        REAL(DP)  ::  fnhscl(/;"	v	module:input_parameters
fnosee	input_parameters.f90	/^        REAL(DP) :: fnosee /;"	v	module:input_parameters
fnoseh	input_parameters.f90	/^        REAL(DP) :: fnoseh /;"	v	module:input_parameters
fnosep	input_parameters.f90	/^        REAL(DP) :: fnosep(/;"	v	module:input_parameters
forc_conv_thr	control_flags.f90	/^       etot_conv_thr = 0.0_DP, &!  conv. threshold for DFT energy$/;"	v	module:control_flags
forc_conv_thr	input_parameters.f90	/^        REAL(DP) :: forc_conv_thr /;"	v	module:input_parameters
forc_conv_thr	qes_types_module.f90	/^    REAL(DP) :: forc_conv_thr$/;"	k	type:control_variables_type
forc_maxiter	control_flags.f90	/^       etot_maxiter = 100,   &!  max number of iter. for etot convergence$/;"	v	module:control_flags
force	control_flags.f90	/^     REAL(DP) :: force$/;"	k	type:convergence_criteria
force_london	mm_dispersion.f90	/^   FUNCTION force_london /;"	f	module:london_module
force_mm	qmmm.f90	/^  REAL(DP), ALLOCATABLE :: force_mm(/;"	v	module:qmmm
force_pairing	control_flags.f90	/^  LOGICAL :: force_pairing /;"	v	module:control_flags
force_pairing	input_parameters.f90	/^        LOGICAL   :: force_pairing /;"	v	module:input_parameters
force_qm	qmmm.f90	/^  REAL(DP), ALLOCATABLE :: force_qm(/;"	v	module:qmmm
force_symmorphic	input_parameters.f90	/^        LOGICAL :: force_symmorphic /;"	v	module:input_parameters
force_symmorphic	qes_types_module.f90	/^    LOGICAL :: force_symmorphic$/;"	k	type:symmetry_flags_type
forces	qes_types_module.f90	/^    LOGICAL :: forces$/;"	k	type:control_variables_type
forces	qes_types_module.f90	/^    TYPE(matrix_type) :: forces$/;"	k	type:output_type
forces	qes_types_module.f90	/^    TYPE(matrix_type) :: forces$/;"	k	type:step_type
forces_ispresent	qes_types_module.f90	/^    LOGICAL  :: forces_ispresent /;"	k	type:output_type
fordt2	timestep.f90	/^        REAL(DP)  :: delthal, twodelt, fordt2,/;"	v	module:time_step
fox_init	fox_init_module.f90	/^   SUBROUTINE fox_init(/;"	s	module:fox_init_module
fox_init_module	fox_init_module.f90	/^MODULE fox_init_module$/;"	m
fpi	constants.f90	/^  REAL(DP), PARAMETER :: fpi /;"	v	module:constants
fractional_translation	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: fractional_translation$/;"	k	type:symmetry_type
fractional_translation_ispresent	qes_types_module.f90	/^    LOGICAL  :: fractional_translation_ispresent /;"	k	type:symmetry_type
free_cell	qes_types_module.f90	/^    TYPE(integerMatrix_type) :: free_cell$/;"	k	type:cell_control_type
free_cell_ispresent	qes_types_module.f90	/^    LOGICAL  :: free_cell_ispresent /;"	k	type:cell_control_type
free_complex	wannier_gw.f90	/^    subroutine free_complex(/;"	s	module:wannier_gw
free_positions	qes_types_module.f90	/^    TYPE(integerMatrix_type) :: free_positions$/;"	k	type:input_type
free_positions_ispresent	qes_types_module.f90	/^    LOGICAL  :: free_positions_ispresent /;"	k	type:input_type
free_real	wannier_gw.f90	/^   subroutine free_real(/;"	s	module:wannier_gw
frice	wave_base.f90	/^          REAL(DP) :: frice /;"	v	module:wave_base
frich	cell_base.f90	/^        REAL(DP) :: frich /;"	v	module:cell_base
fricp	ions_base.f90	/^      REAL(DP) :: fricp /;"	v	module:ions_base
fstr2cstr	fsockets.f90	/^   SUBROUTINE fstr2cstr(/;"	s	module:F90SOCKETS
funct	funct.f90	/^module funct$/;"	m
functional	qes_types_module.f90	/^    CHARACTER(len=256) :: functional$/;"	k	type:dft_type
functional	qes_types_module.f90	/^    CHARACTER(len=256) :: functional$/;"	k	type:vdW_type
functional_ispresent	qes_types_module.f90	/^    LOGICAL  :: functional_ispresent /;"	k	type:vdW_type
g	cell_base.f90	/^          REAL(DP) :: g(/;"	k	type:boxdimensions
g	recvec.f90	/^     REAL(DP), ALLOCATABLE, TARGET :: g(/;"	v	module:gvect
g2kin	gvecw.f90	/^     REAL(DP), ALLOCATABLE :: g2kin(/;"	v	module:gvecw
g2kin_init	gvecw.f90	/^     SUBROUTINE g2kin_init(/;"	s	module:gvecw
g_hdf5_write	hdf5_qe.f90	/^  TYPE(HDF5_type), save :: g_hdf5_write,/;"	v	module:hdf5_qe
gamma_only	control_flags.f90	/^  LOGICAL :: gamma_only /;"	v	module:control_flags
gamma_only	qes_types_module.f90	/^    LOGICAL :: gamma_only$/;"	k	type:basis_set_type
gamma_only	qes_types_module.f90	/^    LOGICAL :: gamma_only$/;"	k	type:basis_type
gamma_only_ispresent	qes_types_module.f90	/^    LOGICAL  :: gamma_only_ispresent /;"	k	type:basis_set_type
gamma_only_ispresent	qes_types_module.f90	/^    LOGICAL  :: gamma_only_ispresent /;"	k	type:basis_type
gate	input_parameters.f90	/^        LOGICAL :: gate /;"	v	module:input_parameters
gateInfo	qes_types_module.f90	/^    TYPE(gateInfo_/;"	k	type:outputElectricField_type
gateInfo_ispresent	qes_types_module.f90	/^    LOGICAL  :: gateInfo_ispresent /;"	k	type:outputElectricField_type
gateInfo_type	qes_types_module.f90	/^  TYPE :: gateInfo_type$/;"	t	module:qes_types_module
gate_gate_term	qes_types_module.f90	/^    REAL(DP) :: gate_gate_term$/;"	k	type:gateInfo_type
gate_settings	qes_types_module.f90	/^    TYPE(gate_settings_/;"	k	type:electric_field_type
gate_settings_ispresent	qes_types_module.f90	/^    LOGICAL  :: gate_settings_ispresent /;"	k	type:electric_field_type
gate_settings_type	qes_types_module.f90	/^  TYPE :: gate_settings_type$/;"	t	module:qes_types_module
gate_zpos	qes_types_module.f90	/^    REAL(DP) :: gate_zpos$/;"	k	type:gateInfo_type
gatefieldEnergy	qes_types_module.f90	/^    REAL(DP) :: gatefieldEnergy$/;"	k	type:gateInfo_type
gatefield_contr	qes_types_module.f90	/^    REAL(DP) :: gatefield_contr$/;"	k	type:total_energy_type
gatefield_contr_ispresent	qes_types_module.f90	/^    LOGICAL  :: gatefield_contr_ispresent /;"	k	type:total_energy_type
gau_parameter	funct.f90	/^  real(DP):: gau_parameter /;"	v	module:funct
gau_parameter	input_parameters.f90	/^        REAL(DP) :: gau_parameter /;"	v	module:input_parameters
gauss_dist_cmplx	random_numbers.f90	/^    FUNCTION gauss_dist_cmplx(/;"	f	module:random_numbers
gauss_dist_scal	random_numbers.f90	/^    FUNCTION gauss_dist_scal(/;"	f	module:random_numbers
gauss_dist_vect	random_numbers.f90	/^    FUNCTION gauss_dist_vect(/;"	f	module:random_numbers
gauss_freq	erf.f90	/^function gauss_freq /;"	f
gcc_spin	funct.f90	/^subroutine gcc_spin /;"	s	module:funct
gcc_spin_more	funct.f90	/^    SUBROUTINE gcc_spin_more(/;"	s	module:funct
gcor2	more_functionals.f90	/^      subroutine gcor2(/;"	s
gcutm	recvec.f90	/^     REAL(DP) :: gcutm /;"	v	module:gvect
gcutms	recvec.f90	/^     REAL(DP) :: gcutms=/;"	v	module:gvecs
gcutw	gvecw.f90	/^     REAL(DP) :: gcutw /;"	v	module:gvecw
gcx_spin	funct.f90	/^subroutine gcx_spin /;"	s	module:funct
gcx_spin_vec	funct.f90	/^subroutine gcx_spin_vec(/;"	s	module:funct
gcxc	funct.f90	/^subroutine gcxc /;"	s	module:funct
gdiis_iter	bfgs_module.f90	/^      bfgs_iter,         &! number of bfgs iterations$/;"	v	module:bfgs_module
gdiis_step	bfgs_module.f90	/^      SUBROUTINE gdiis_step(/;"	s	subroutine:bfgs
gdir	input_parameters.f90	/^        INTEGER :: gdir /;"	v	module:input_parameters
gen_rndm_r	uspp.f90	/^  subroutine gen_rndm_r(/;"	s	module:uspp
general_info	qes_types_module.f90	/^    TYPE(general_info_/;"	k	type:espresso_type
general_info	qexsd.f90	/^  TYPE (general_info_/;"	v	module:qexsd_module
general_info_ispresent	qes_types_module.f90	/^    LOGICAL  :: general_info_ispresent /;"	k	type:espresso_type
general_info_type	qes_types_module.f90	/^  TYPE :: general_info_type$/;"	t	module:qes_types_module
generate_axis	generate_function.f90	/^   SUBROUTINE generate_axis(/;"	s	module:generate_function
generate_distance	generate_function.f90	/^   SUBROUTINE generate_distance(/;"	s	module:generate_function
generate_erfc	generate_function.f90	/^      SUBROUTINE generate_erfc(/;"	s	module:generate_function
generate_exponential	generate_function.f90	/^      SUBROUTINE generate_exponential(/;"	s	module:generate_function
generate_function	generate_function.f90	/^MODULE generate_function$/;"	m
generate_gaussian	generate_function.f90	/^      SUBROUTINE generate_gaussian(/;"	s	module:generate_function
generate_graderfc	generate_function.f90	/^      SUBROUTINE generate_graderfc(/;"	s	module:generate_function
generate_gradexponential	generate_function.f90	/^      SUBROUTINE generate_gradexponential(/;"	s	module:generate_function
generate_gradgaussian	generate_function.f90	/^      SUBROUTINE generate_gradgaussian(/;"	s	module:generate_function
generate_k_along_lines	generate_k_along_lines.f90	/^SUBROUTINE generate_k_along_lines(/;"	s
generate_k_in_plane	generate_k_along_lines.f90	/^SUBROUTINE generate_k_in_plane(/;"	s
generated	pseudo_types.f90	/^     CHARACTER(LEN=80):: generated=/;"	k	type:pseudo_upf
get_3d_indices	xc_rVV10.f90	/^function get_3d_indices(/;"	f	module:rVV10
get_cell_param	cell_base.f90	/^          SUBROUTINE get_cell_param(/;"	s	module:cell_base
get_command_line	command_line_options.f90	/^  SUBROUTINE get_command_line /;"	s	module:command_line_options
get_dataset_hid	qeh5_module.f90	/^  FUNCTION get_dataset_hid(/;"	f	module:qeh5_base_module
get_dft_long	funct.f90	/^  function get_dft_long(/;"	f	module:funct
get_dft_name	funct.f90	/^  function get_dft_name /;"	f	module:funct
get_dft_short	funct.f90	/^  function get_dft_short /;"	f	module:funct
get_error_message	bspline.f90	/^  function get_error_message(/;"	f	module:bspline
get_error_routine	bspline.f90	/^  function get_error_routine(/;"	f	module:bspline
get_exx_fraction	funct.f90	/^  function get_exx_fraction /;"	f	module:funct
get_field	parser.f90	/^  SUBROUTINE get_field(/;"	s	module:parser
get_file	inpfile.f90	/^SUBROUTINE get_file(/;"	s
get_file_hid	qeh5_module.f90	/^  FUNCTION get_file_hid(/;"	f	module:qeh5_base_module
get_gau_parameter	funct.f90	/^  function get_gau_parameter /;"	f	module:funct
get_icorr	funct.f90	/^  function get_icorr /;"	f	module:funct
get_iexch	funct.f90	/^  function get_iexch /;"	f	module:funct
get_igcc	funct.f90	/^  function get_igcc /;"	f	module:funct
get_igcx	funct.f90	/^  function get_igcx /;"	f	module:funct
get_index	qexsd.f90	/^         FUNCTION get_index(/;"	f	subroutine:qexsd_init_clocks
get_inlc	funct.f90	/^  function get_inlc /;"	f	module:funct
get_libxc_version	funct.f90	/^  subroutine get_libxc_version$/;"	s	module:funct
get_meta	funct.f90	/^  function get_meta /;"	f	module:funct
get_nonlocc_name	funct.f90	/^  function get_nonlocc_name /;"	f	module:funct
get_potential	xc_rVV10.f90	/^  subroutine get_potential(/;"	s	module:rVV10
get_potential	xc_vdW_DF.f90	/^  SUBROUTINE get_potential /;"	s	module:vdW_DF
get_q0_on_grid	xc_rVV10.f90	/^  SUBROUTINE get_q0_on_grid /;"	s	module:rVV10
get_q0_on_grid	xc_vdW_DF.f90	/^  SUBROUTINE get_q0_on_grid /;"	s	module:vdW_DF
get_q0_on_grid_spin	xc_vdW_DF.f90	/^  SUBROUTINE get_q0_on_grid_spin /;"	s	module:vdW_DF
get_screening_parameter	funct.f90	/^  function get_screening_parameter /;"	f	module:funct
get_thetas_on_grid	xc_rVV10.f90	/^  SUBROUTINE get_thetas_on_grid /;"	s	module:rVV10
get_volume	cell_base.f90	/^      FUNCTION get_volume(/;"	f	module:cell_base
gethinv	cell_base.f90	/^      SUBROUTINE gethinv(/;"	s	module:cell_base
gfunc	metagga.f90	/^  subroutine gfunc /;"	s	subroutine:m06lc
gg	recvec.f90	/^     REAL(DP), ALLOCATABLE, TARGET :: gg(/;"	v	module:gvect
ggablyp4	more_functionals.f90	/^      subroutine ggablyp4(/;"	s
ggac	functionals.f90	/^subroutine ggac /;"	s
ggac_spin	lsda_functionals.f90	/^subroutine ggac_spin /;"	s
ggapbe	more_functionals.f90	/^      subroutine ggapbe(/;"	s
ggapw	more_functionals.f90	/^      subroutine ggapw(/;"	s
ggapwold	more_functionals.f90	/^      subroutine ggapwold(/;"	s
ggax	functionals.f90	/^subroutine ggax /;"	s
ggen	recvec_subs.f90	/^  SUBROUTINE ggen /;"	s	module:recvec_subs
ggens	recvec_subs.f90	/^  SUBROUTINE ggens(/;"	s	module:recvec_subs
gipaw_core_orbital	pseudo_types.f90	/^     REAL(DP), POINTER :: gipaw_core_orbital(/;"	k	type:pseudo_upf
gipaw_core_orbital_el	pseudo_types.f90	/^     CHARACTER(LEN=2), POINTER :: gipaw_core_orbital_el(/;"	k	type:pseudo_upf
gipaw_core_orbital_l	pseudo_types.f90	/^     REAL(DP), POINTER :: gipaw_core_orbital_l(/;"	k	type:pseudo_upf
gipaw_core_orbital_n	pseudo_types.f90	/^     REAL(DP), POINTER :: gipaw_core_orbital_n(/;"	k	type:pseudo_upf
gipaw_data_format	pseudo_types.f90	/^     INTEGER  :: gipaw_data_format /;"	k	type:pseudo_upf
gipaw_ncore_orbitals	pseudo_types.f90	/^     INTEGER  :: gipaw_ncore_orbitals$/;"	k	type:pseudo_upf
gipaw_vlocal_ae	pseudo_types.f90	/^     REAL(DP), POINTER :: gipaw_vlocal_ae(/;"	k	type:pseudo_upf
gipaw_vlocal_ps	pseudo_types.f90	/^     REAL(DP), POINTER :: gipaw_vlocal_ps(/;"	k	type:pseudo_upf
gipaw_wfs_ae	pseudo_types.f90	/^     REAL(DP), POINTER :: gipaw_wfs_ae(/;"	k	type:pseudo_upf
gipaw_wfs_el	pseudo_types.f90	/^     CHARACTER(LEN=2), POINTER :: gipaw_wfs_el(/;"	k	type:pseudo_upf
gipaw_wfs_ll	pseudo_types.f90	/^     INTEGER, POINTER :: gipaw_wfs_ll(/;"	k	type:pseudo_upf
gipaw_wfs_nchannels	pseudo_types.f90	/^     INTEGER :: gipaw_wfs_nchannels$/;"	k	type:pseudo_upf
gipaw_wfs_ps	pseudo_types.f90	/^     REAL(DP), POINTER :: gipaw_wfs_ps(/;"	k	type:pseudo_upf
gipaw_wfs_rcut	pseudo_types.f90	/^     REAL(DP), POINTER :: gipaw_wfs_rcut(/;"	k	type:pseudo_upf
gipaw_wfs_rcutus	pseudo_types.f90	/^     REAL(DP), POINTER :: gipaw_wfs_rcutus(/;"	k	type:pseudo_upf
gk_hdf5_write	hdf5_qe.f90	/^  TYPE(HDF5_type), save :: g_hdf5_write, gk_hdf5_write$/;"	v	module:hdf5_qe
gkcut	gvecw.f90	/^     REAL(DP) :: gkcut /;"	v	module:gvecw
gl	functionals.f90	/^subroutine gl /;"	s
global_version	version.f90	/^MODULE global_version$/;"	m
glyp	functionals.f90	/^subroutine glyp /;"	s
gomegaAr	tsvdw.f90	/^INTEGER, DIMENSION(:,:,:), ALLOCATABLE, PRIVATE :: gomegaAr /;"	v	module:tsvdw_module
gomegar	tsvdw.f90	/^INTEGER, DIMENSION(:,:), ALLOCATABLE, PRIVATE :: gomegar /;"	v	module:tsvdw_module
gp	constraints_module.f90	/^   REAL(DP), ALLOCATABLE :: gp(/;"	v	module:constraints_module
grad	bfgs_module.f90	/^      pos(:),            &! positions + cell$/;"	v	module:bfgs_module
grad_norm	qes_types_module.f90	/^    REAL(DP) :: grad_norm$/;"	k	type:opt_conv_type
grad_old	bfgs_module.f90	/^      pos_old(:,:),      &! list of m old positions - used only by gdiis$/;"	v	module:bfgs_module
grad_p	bfgs_module.f90	/^      pos_p(:),          &! positions at the previous accepted iteration$/;"	v	module:bfgs_module
gradc	funct.f90	/^  character (len=4) :: exc, corr, gradx, gradc,/;"	v	module:funct
gradient_coefficients	xc_rVV10.f90	/^function gradient_coefficients(/;"	f	module:rVV10
gradient_wolfe_condition	bfgs_module.f90	/^   LOGICAL FUNCTION gradient_wolfe_condition /;"	f	module:bfgs_module
gradx	funct.f90	/^  character (len=4) :: exc, corr, gradx,/;"	v	module:funct
gram_gamma_base	wave_base.f90	/^      SUBROUTINE gram_gamma_base(/;"	s	module:wave_base
gram_kp_base	wave_base.f90	/^      SUBROUTINE gram_kp_base(/;"	s	module:wave_base
grease	input_parameters.f90	/^        REAL(DP) :: grease /;"	v	module:input_parameters
grease	wave_base.f90	/^          REAL(DP) :: grease /;"	v	module:wave_base
greash	cell_base.f90	/^        REAL(DP) :: greash /;"	v	module:cell_base
greash	input_parameters.f90	/^        REAL(DP) :: greash /;"	v	module:input_parameters
greasp	input_parameters.f90	/^        REAL(DP) :: greasp /;"	v	module:input_parameters
greasp	ions_base.f90	/^      REAL(DP) :: greasp /;"	v	module:ions_base
grid	pseudo_types.f90	/^     TYPE(radial_grid_/;"	k	type:pseudo_upf
grid_type	wannier_gw.f90	/^  INTEGER :: grid_type!/;"	v	module:wannier_gw
group_id	hdf5_qe.f90	/^   INTEGER(HID_T) :: group_id /;"	k	type:HDF5_type
gshells	recvec.f90	/^     SUBROUTINE gshells /;"	s	module:gvect
gsmall	constants.f90	/^  REAL(DP), PARAMETER :: gsmall /;"	v	module:constants
gstart	recvec.f90	/^     INTEGER :: gstart /;"	v	module:gvect
gth_grid_for_rho	gth.f90	/^subroutine gth_grid_for_rho(/;"	s	module:m_gth
gth_p	gth.f90	/^  type (gth_pa/;"	v	module:m_gth
gth_parameters	gth.f90	/^  type gth_parameters$/;"	t	module:m_gth
gvecs	recvec.f90	/^   MODULE gvecs$/;"	m
gvecs_init	recvec.f90	/^     SUBROUTINE gvecs_init(/;"	s	module:gvecs
gvect	recvec.f90	/^   MODULE gvect$/;"	m
gvect_init	recvec.f90	/^     SUBROUTINE gvect_init(/;"	s	module:gvect
gvecw	gvecw.f90	/^   MODULE gvecw$/;"	m
gvecw_init	gvecw.f90	/^     SUBROUTINE gvecw_init(/;"	s	module:gvecw
gvel	cell_base.f90	/^          REAL(DP) :: gvel(/;"	k	type:boxdimensions
gvt4	metagga.f90	/^subroutine gvt4 /;"	s
h	cell_base.f90	/^        REAL(DP) :: h(/;"	v	module:cell_base
h5_write_gvecs	hdf5_qe.f90	/^  subroutine h5_write_gvecs(/;"	s	module:hdf5_qe
h_block	bfgs_module.f90	/^      metric(:,:),       &$/;"	v	module:bfgs_module
h_j	input_parameters.f90	/^      REAL(DP) :: h_j /;"	v	module:input_parameters
hartree	radial_grids.f90	/^subroutine hartree(/;"	s	module:radial_grids
has_been_read	read_input.f90	/^   LOGICAL :: has_been_read /;"	v	module:read_input
has_finite_size_correction	funct.f90	/^  logical :: has_finite_size_correction /;"	v	module:funct
has_gipaw	pseudo_types.f90	/^     LOGICAL  :: has_gipaw /;"	k	type:pseudo_upf
has_so	pseudo_types.f90	/^     LOGICAL :: has_so /;"	k	type:pseudo_upf
has_wfc	pseudo_types.f90	/^     LOGICAL           :: has_wfc /;"	k	type:pseudo_upf
has_xml	has_xml.f90	/^LOGICAL FUNCTION has_xml(/;"	f
hcth	functionals.f90	/^subroutine hcth(/;"	s
hdf5_close	hdf5_qe.f90	/^  SUBROUTINE hdf5_close(/;"	s	module:hdf5_qe
hdf5_qe	hdf5_qe.f90	/^module hdf5_qe$/;"	m
herman_skillman_grid	read_uspp.f90	/^  SUBROUTINE herman_skillman_grid /;"	s	module:read_uspp_module
herman_skillman_int	simpsn.f90	/^SUBROUTINE herman_skillman_int(/;"	s
highestOccupiedLevel	qes_types_module.f90	/^    REAL(DP) :: highestOccupiedLevel$/;"	k	type:band_structure_type
highestOccupiedLevel_ispresent	qes_types_module.f90	/^    LOGICAL  :: highestOccupiedLevel_ispresent /;"	k	type:band_structure_type
hinv	cell_base.f90	/^          REAL(DP) :: hinv(/;"	k	type:boxdimensions
hinv_block	bfgs_module.f90	/^      h_block(:,:),      &$/;"	v	module:bfgs_module
hl	functionals.f90	/^subroutine hl /;"	s
hmat	cell_base.f90	/^          REAL(DP) :: hmat(/;"	k	type:boxdimensions
hnew	cell_base.f90	/^        REAL(DP) :: hnew(/;"	v	module:cell_base
hold	cell_base.f90	/^        REAL(DP) :: hold(/;"	v	module:cell_base
hpsi_gamma	wave_base.f90	/^      FUNCTION hpsi_gamma(/;"	f	module:wave_base
hpsi_kp	wave_base.f90	/^      FUNCTION hpsi_kp(/;"	f	module:wave_base
hpsort	sort.f90	/^subroutine hpsort /;"	s
hpsort_eps	sort.f90	/^subroutine hpsort_eps /;"	s
hubbard_alpha	input_parameters.f90	/^        REAL(DP) :: hubbard_alpha(/;"	v	module:input_parameters
hubbard_beta	input_parameters.f90	/^        REAL(DP) :: hubbard_beta(/;"	v	module:input_parameters
hubbard_j	input_parameters.f90	/^        REAL(DP) :: hubbard_j(/;"	v	module:input_parameters
hubbard_j0	input_parameters.f90	/^        REAL(DP) :: hubbard_j0(/;"	v	module:input_parameters
hubbard_u	input_parameters.f90	/^        REAL(DP) :: hubbard_u(/;"	v	module:input_parameters
huntn	bspline.f90	/^  subroutine huntn(/;"	s	module:bspline
hvel	cell_base.f90	/^          REAL(DP) :: hvel(/;"	k	type:boxdimensions
hybrid	qes_types_module.f90	/^    TYPE(hybrid_/;"	k	type:dft_type
hybrid_ispresent	qes_types_module.f90	/^    LOGICAL  :: hybrid_ispresent /;"	k	type:dft_type
hybrid_type	qes_types_module.f90	/^  TYPE :: hybrid_type$/;"	t	module:qes_types_module
i2gupdwn_bgrp	electrons_base.f90	/^      INTEGER :: i2gupdwn_bgrp(/;"	v	module:electrons_base
i4b	kind.f90	/^      INTEGER, PARAMETER :: i4b /;"	v	module:kinds
i_cons	noncol.f90	/^      nspin_gga = 1,      & !  =1 when nspin=1,4 (domag=.false.)   $/;"	v	module:noncollin_module
i_list	wannier_gw.f90	/^  INTEGER, ALLOCATABLE :: i_list(/;"	v	module:wannier_gw
iatom	wannier_new.f90	/^          INTEGER :: iatom /;"	k	type:wannier_data
iatomwfc	wannier_new.f90	/^                    m = 0, &           ! m value for atomic wfc$/;"	k	type:ingredient
ibands	mp_exx.f90	/^  INTEGER, ALLOCATABLE :: ibands(/;"	v	module:mp_exx
ibgrp_g2l	electrons_base.f90	/^      INTEGER, ALLOCATABLE :: ibgrp_g2l(/;"	v	module:electrons_base
ibnd_begin	becmod.f90	/^     INTEGER :: ibnd_begin$/;"	k	type:bec_type
ibnd_end	mp_bands.f90	/^  INTEGER :: ibnd_end /;"	v	module:mp_bands_TDDFPT
ibnd_start	mp_bands.f90	/^  INTEGER :: ibnd_start /;"	v	module:mp_bands_TDDFPT
ibox	mdiis.f90	/^    INTEGER,  POINTER :: ibox(/;"	k	type:mdiis_type
ibrav	bz_form.f90	/^    INTEGER :: ibrav /;"	k	type:bz
ibrav	cell_base.f90	/^    INTEGER          :: ibrav$/;"	v	module:cell_base
ibrav	input_parameters.f90	/^        INTEGER :: ibrav /;"	v	module:input_parameters
icontxt	wannier_gw.f90	/^  INTEGER :: icontxt!/;"	v	module:wannier_gw
icorr	funct.f90	/^  integer :: icorr /;"	v	module:funct
id	qeh5_module.f90	/^     INTEGER(HID_T)        ::    id /;"	k	type:qeh5_dataset
id	qeh5_module.f90	/^     INTEGER(HID_T)        ::  id /;"	k	type:qeh5_datatype
id	qeh5_module.f90	/^     INTEGER(HID_T)       ::  id$/;"	k	type:qeh5_dataspace
id	qeh5_module.f90	/^    INTEGER(HID_T)        ::   id /;"	k	type:qeh5_file
id	qeh5_module.f90	/^    INTEGER(HID_T)        ::   id$/;"	k	type:qeh5_hid
identity	basic_algebra_routines.f90	/^     FUNCTION identity(/;"	f	module:basic_algebra_routines
idiago	wannier_gw.f90	/^     INTEGER :: idiago /;"	k	type:optimal_options
idir	qes_types_module.f90	/^    INTEGER :: idir$/;"	k	type:dipoleOutput_type
idone_debug	hdf5_qe.f90	/^  INTEGER, save ::  off_npw, npw_g, idone_debug$/;"	v	module:hdf5_qe
iesr	control_flags.f90	/^  INTEGER, PUBLIC :: iesr /;"	v	module:control_flags
iesr	input_parameters.f90	/^       INTEGER :: iesr /;"	v	module:input_parameters
iexch	funct.f90	/^  integer :: iexch /;"	v	module:funct
iexx_end	mp_exx.f90	/^  INTEGER :: iexx_end /;"	v	module:mp_exx
iexx_iend	mp_exx.f90	/^  INTEGER, ALLOCATABLE :: iexx_iend(/;"	v	module:mp_exx
iexx_istart	mp_exx.f90	/^  INTEGER, ALLOCATABLE :: iexx_istart(/;"	v	module:mp_exx
iexx_start	mp_exx.f90	/^  INTEGER :: iexx_start /;"	v	module:mp_exx
if_pos	ions_base.f90	/^      INTEGER, ALLOCATABLE :: if_pos(/;"	v	module:ions_base
if_postot	wyckoff.f90	/^INTEGER, ALLOCATABLE :: ityptot(:), if_postot(/;"	v	module:wyckoff
iforce	ions_base.f90	/^      INTEGER, ALLOCATABLE :: iforce(/;"	v	module:ions_base
iforceh	cell_base.f90	/^        INTEGER   :: iforceh(/;"	v	module:cell_base
ig_l2g	recvec.f90	/^     INTEGER, ALLOCATABLE, TARGET :: ig_l2g(/;"	v	module:gvect
igcc	funct.f90	/^  integer :: igcc /;"	v	module:funct
igcc_is_lyp	funct.f90	/^  function igcc_is_lyp /;"	f	module:funct
igcx	funct.f90	/^  integer :: igcx /;"	v	module:funct
ihpsort	sort.f90	/^subroutine ihpsort /;"	s
ijtoh	uspp.f90	/^       nhtolm(:,:),      &! correspondence n <-> combined lm index for (l,m)$/;"	v	module:uspp
imatches	matches.f90	/^FUNCTION imatches(/;"	f
imeta	funct.f90	/^  integer :: imeta /;"	v	module:funct
imix	control_flags.f90	/^    nmix,             &! the number of iteration kept in the history$/;"	v	module:control_flags
impose_deviatoric_strain	deviatoric.f90	/^SUBROUTINE impose_deviatoric_strain /;"	s
impose_deviatoric_strain_2d	deviatoric.f90	/^SUBROUTINE impose_deviatoric_strain_2d /;"	s
impose_deviatoric_stress	deviatoric.f90	/^SUBROUTINE impose_deviatoric_stress /;"	s
impose_deviatoric_stress_2d	deviatoric.f90	/^SUBROUTINE impose_deviatoric_stress_2d /;"	s
in_C6	mm_dispersion.f90	/^  REAL ( DP ) , PUBLIC :: scal6=0._dp , lon_rcut=0._dp , &$/;"	v	module:london_module
in_rvdw	mm_dispersion.f90	/^       in_C6 ( nsx ) = -1.0_dp, in_rvdw(/;"	v	module:london_module
ind	bz_form.f90	/^    INTEGER :: ind /;"	k	type:bz
ind_bck	ions_base.f90	/^      INTEGER,  ALLOCATABLE :: ind_bck(/;"	v	module:ions_base
ind_srt	ions_base.f90	/^      INTEGER,  ALLOCATABLE :: ind_srt(/;"	v	module:ions_base
index	qes_types_module.f90	/^    INTEGER :: index$/;"	k	type:Hubbard_ns_type
index	qes_types_module.f90	/^    INTEGER :: index$/;"	k	type:atom_type
index_ispresent	qes_types_module.f90	/^    LOGICAL :: index_ispresent /;"	k	type:atom_type
indsur	bz_form.f90	/^    INTEGER, ALLOCATABLE :: indsur(/;"	k	type:bz
indv	uspp.f90	/^  INTEGER, ALLOCATABLE ::&$/;"	v	module:uspp
indv_ijkb0	uspp.f90	/^       ijtoh(:,:,:),     &! correspondence beta indexes ih,jh -> composite index ijh$/;"	v	module:uspp
info	qes_types_module.f90	/^    CHARACTER(len=256) :: info$/;"	k	type:info_type
info	qes_types_module.f90	/^    TYPE(info_/;"	k	type:symmetry_type
info_type	qes_types_module.f90	/^  TYPE :: info_type$/;"	t	module:qes_types_module
ing	wannier_new.f90	/^          TYPE (ingr/;"	k	type:wannier_data
ingredient	wannier_new.f90	/^  TYPE ingredient$/;"	t	module:wannier_new
init_Hubbard_ns	qexsd.f90	/^         SUBROUTINE init_Hubbard_ns(/;"	s	subroutine:qexsd_init_dftU
init_autopilot	autopilot.f90	/^  SUBROUTINE init_autopilot$/;"	s	module:autopilot
init_bz	bz_form.f90	/^SUBROUTINE init_bz(/;"	s	module:bz_form
init_bz_1	bz_form.f90	/^SUBROUTINE init_bz_1(/;"	s	module:bz_form
init_bz_10	bz_form.f90	/^SUBROUTINE init_bz_10(/;"	s	module:bz_form
init_bz_11	bz_form.f90	/^SUBROUTINE init_bz_11(/;"	s	module:bz_form
init_bz_12	bz_form.f90	/^SUBROUTINE init_bz_12(/;"	s	module:bz_form
init_bz_13	bz_form.f90	/^SUBROUTINE init_bz_13(/;"	s	module:bz_form
init_bz_14	bz_form.f90	/^SUBROUTINE init_bz_14(/;"	s	module:bz_form
init_bz_15	bz_form.f90	/^SUBROUTINE init_bz_15(/;"	s	module:bz_form
init_bz_16	bz_form.f90	/^SUBROUTINE init_bz_16(/;"	s	module:bz_form
init_bz_2	bz_form.f90	/^SUBROUTINE init_bz_2(/;"	s	module:bz_form
init_bz_3	bz_form.f90	/^SUBROUTINE init_bz_3(/;"	s	module:bz_form
init_bz_4	bz_form.f90	/^SUBROUTINE init_bz_4(/;"	s	module:bz_form
init_bz_5	bz_form.f90	/^SUBROUTINE init_bz_5(/;"	s	module:bz_form
init_bz_6	bz_form.f90	/^SUBROUTINE init_bz_6(/;"	s	module:bz_form
init_bz_7	bz_form.f90	/^SUBROUTINE init_bz_7(/;"	s	module:bz_form
init_bz_8	bz_form.f90	/^SUBROUTINE init_bz_8(/;"	s	module:bz_form
init_bz_9	bz_form.f90	/^SUBROUTINE init_bz_9(/;"	s	module:bz_form
init_constraint	constraints_module.f90	/^   SUBROUTINE init_constraint(/;"	s	module:constraints_module
init_dft_exxrpa	funct.f90	/^  subroutine init_dft_exxrpa /;"	s	module:funct
init_dofree	cell_base.f90	/^  SUBROUTINE init_dofree /;"	s	module:cell_base
init_fd_gradient	fd_gradient.f90	/^SUBROUTINE init_fd_gradient(/;"	s	module:fd_gradient
init_hubbard_J	qexsd.f90	/^         SUBROUTINE init_hubbard_J(/;"	s	subroutine:qexsd_init_dftU
init_hubbard_commons	qexsd.f90	/^         SUBROUTINE init_hubbard_commons(/;"	s	subroutine:qexsd_init_dftU
init_index_over_band	mp_exx.f90	/^  SUBROUTINE init_index_over_band(/;"	s	module:mp_exx
init_london	mm_dispersion.f90	/^   SUBROUTINE init_london /;"	s	module:london_module
init_londonc6	qexsd.f90	/^          SUBROUTINE init_londonc6(/;"	s	subroutine:qexsd_init_vdw
init_orthopools	mp_pools.f90	/^  LOGICAL,PRIVATE :: init_orthopools /;"	v	module:mp_orthopools
init_second	check_stop.f90	/^  REAL(DP) :: init_second$/;"	v	module:check_stop
init_starting_ns	qexsd.f90	/^         SUBROUTINE init_starting_ns(/;"	s	subroutine:qexsd_init_dftU
init_tpiba2	cell_base.f90	/^    REAL(DP) :: init_tpiba2 /;"	v	module:cell_base
initialize_hdf5	hdf5_qe.f90	/^  subroutine initialize_hdf5(/;"	s	module:hdf5_qe
initialize_hdf5	qeh5_module.f90	/^  SUBROUTINE initialize_hdf5(/;"	s	module:qeh5_base_module
initialize_hdf5_array	hdf5_qe.f90	/^  subroutine initialize_hdf5_array(/;"	s	module:hdf5_qe
initialize_io_hdf5	hdf5_qe.f90	/^  subroutine initialize_io_hdf5(/;"	s	module:hdf5_qe
initialize_kernel_table	kernel_table.f90	/^  subroutine initialize_kernel_table(/;"	s	module:kernel_table
initialize_spline_interpolation	xc_rVV10.f90	/^SUBROUTINE initialize_spline_interpolation /;"	s	module:rVV10
initialize_spline_interpolation	xc_vdW_DF.f90	/^  SUBROUTINE initialize_spline_interpolation /;"	s	module:vdW_DF
initialized	ws_base.f90	/^    LOGICAL  ::  &$/;"	k	type:ws_type
inlc	funct.f90	/^  integer :: inlc /;"	v	module:funct
input	qes_types_module.f90	/^    TYPE(input_/;"	k	type:espresso_type
input	qexsd_input.f90	/^  TYPE(input_/;"	v	module:qexsd_input
inputOccupations	qes_types_module.f90	/^    REAL(DP), DIMENSION(:), ALLOCATABLE :: inputOccupations$/;"	k	type:inputOccupations_type
inputOccupations	qes_types_module.f90	/^    TYPE(inputOccupations_/;"	k	type:bands_type
inputOccupations_ispresent	qes_types_module.f90	/^    LOGICAL  :: inputOccupations_ispresent /;"	k	type:bands_type
inputOccupations_type	qes_types_module.f90	/^  TYPE :: inputOccupations_type$/;"	t	module:qes_types_module
input_dft	input_parameters.f90	/^        CHARACTER(len=80) :: input_dft /;"	v	module:input_parameters
input_drho	io_files.f90	/^  CHARACTER(LEN=256) :: input_drho /;"	v	module:io_files
input_file	open_close_input_file.f90	/^  CHARACTER(LEN=256), SAVE :: input_file /;"	v	module:open_close_input_file
input_file_	command_line_options.f90	/^  CHARACTER(LEN=256) :: input_file_ /;"	v	module:command_line_options
input_from_file	inpfile.f90	/^SUBROUTINE input_from_file(/;"	s
input_parameters	input_parameters.f90	/^MODULE input_parameters$/;"	m
input_type	qes_types_module.f90	/^  TYPE :: input_type$/;"	t	module:qes_types_module
input_xml_schema_file	input_parameters.f90	/^        CHARACTER(len=256) :: input_xml_schema_file /;"	v	module:input_parameters
int_to_char	int_to_char.f90	/^  FUNCTION int_to_char(/;"	f
integerMatrix	qes_types_module.f90	/^    INTEGER, DIMENSION(:), ALLOCATABLE :: integerMatrix$/;"	k	type:integerMatrix_type
integerMatrix_type	qes_types_module.f90	/^  TYPE :: integerMatrix_type$/;"	t	module:qes_types_module
integerVector	qes_types_module.f90	/^    INTEGER, DIMENSION(:), ALLOCATABLE :: integerVector$/;"	k	type:integerVector_type
integerVector_type	qes_types_module.f90	/^  TYPE :: integerVector_type$/;"	t	module:qes_types_module
inter_bgrp_comm	mp_bands.f90	/^  INTEGER :: inter_bgrp_comm /;"	v	module:mp_bands
inter_egrp_comm	mp_exx.f90	/^  INTEGER :: inter_egrp_comm /;"	v	module:mp_exx
inter_image_comm	mp_images.f90	/^  INTEGER :: inter_image_comm /;"	v	module:mp_images
inter_orthopool_comm	mp_pools.f90	/^  INTEGER :: inter_orthopool_comm /;"	v	module:mp_orthopools
inter_plane_line	bz_form.f90	/^SUBROUTINE inter_plane_line(/;"	s	module:bz_form
inter_pool_comm	mp_pools.f90	/^  INTEGER :: inter_pool_comm /;"	v	module:mp_pools
interpolate_Dkernel_Dk	xc_rVV10.f90	/^subroutine interpolate_Dkernel_Dk(/;"	s	module:rVV10
interpolate_Dkernel_Dk	xc_vdW_DF.f90	/^  SUBROUTINE interpolate_Dkernel_Dk /;"	s	module:vdW_DF
interpolate_kernel	xc_rVV10.f90	/^subroutine interpolate_kernel(/;"	s	module:rVV10
interpolate_kernel	xc_vdW_DF.f90	/^  SUBROUTINE interpolate_kernel /;"	s	module:vdW_DF
intra_bgrp_comm	mp_bands.f90	/^  INTEGER :: intra_bgrp_comm /;"	v	module:mp_bands
intra_egrp_comm	mp_exx.f90	/^  INTEGER :: intra_egrp_comm /;"	v	module:mp_exx
intra_image_comm	mp_images.f90	/^  INTEGER :: intra_image_comm /;"	v	module:mp_images
intra_orthopool_comm	mp_pools.f90	/^  INTEGER :: intra_orthopool_comm /;"	v	module:mp_orthopools
intra_pool_comm	mp_pools.f90	/^  INTEGER :: intra_pool_comm /;"	v	module:mp_pools
inv_hess	bfgs_module.f90	/^      grad_p(:),         &! gradients at the previous accepted iteration$/;"	v	module:bfgs_module
inverse	mdiis.f90	/^    SUBROUTINE inverse(/;"	s	subroutine:update_by_mdiis
invert_3x3_matrix	xc_rVV10.f90	/^subroutine invert_3x3_matrix(/;"	s	module:rVV10
invmat_c	invmat.f90	/^  SUBROUTINE invmat_c /;"	s	module:matrix_inversion
invmat_r	invmat.f90	/^  SUBROUTINE invmat_r /;"	s	module:matrix_inversion
io_base	io_base.f90	/^MODULE io_base$/;"	m
io_files	io_files.f90	/^MODULE io_files$/;"	m
io_global	io_global.f90	/^MODULE io_global$/;"	m
io_level	control_flags.f90	/^  INTEGER, PUBLIC :: &$/;"	v	module:control_flags
ion	qes_types_module.f90	/^    TYPE(atom_type) :: ion$/;"	k	type:ionicPolarization_type
ion_control	qes_types_module.f90	/^    TYPE(ion_control_/;"	k	type:input_type
ion_control_type	qes_types_module.f90	/^  TYPE :: ion_control_type$/;"	t	module:qes_types_module
ion_damping	input_parameters.f90	/^        REAL(DP) :: ion_damping /;"	v	module:input_parameters
ion_dipole	qes_types_module.f90	/^    TYPE(scalarQuantity_type) :: ion_dipole$/;"	k	type:dipoleOutput_type
ion_dynamics	input_parameters.f90	/^        CHARACTER(len=80) :: ion_dynamics /;"	v	module:input_parameters
ion_dynamics	qes_types_module.f90	/^    CHARACTER(len=256) :: ion_dynamics$/;"	k	type:ion_control_type
ion_dynamics_allowed	input_parameters.f90	/^        CHARACTER(len=80) :: ion_dynamics_allowed(/;"	v	module:input_parameters
ion_maxstep	input_parameters.f90	/^        INTEGER   :: ion_maxstep /;"	v	module:input_parameters
ion_nstepe	input_parameters.f90	/^        INTEGER   :: ion_nstepe /;"	v	module:input_parameters
ion_positions	input_parameters.f90	/^        CHARACTER(len=80) :: ion_positions /;"	v	module:input_parameters
ion_radius	input_parameters.f90	/^        REAL(DP) :: ion_radius(/;"	v	module:input_parameters
ion_temperature	input_parameters.f90	/^        CHARACTER(len=80) :: ion_temperature /;"	v	module:input_parameters
ion_temperature	qes_types_module.f90	/^    CHARACTER(len=256) :: ion_temperature$/;"	k	type:md_type
ion_velocities	input_parameters.f90	/^        CHARACTER(len=80) :: ion_velocities /;"	v	module:input_parameters
ionic	qes_types_module.f90	/^    REAL(DP) :: ionic$/;"	k	type:phase_type
ionicDipole	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: ionicDipole$/;"	k	type:finiteFieldOut_type
ionicPolarization	qes_types_module.f90	/^    TYPE(ionicPolarization_/;"	k	type:BerryPhaseOutput_type
ionicPolarization_type	qes_types_module.f90	/^  TYPE :: ionicPolarization_type$/;"	t	module:qes_types_module
ionic_ispresent	qes_types_module.f90	/^    LOGICAL :: ionic_ispresent /;"	k	type:phase_type
ionode	io_global.f90	/^  LOGICAL :: ionode /;"	v	module:io_global
ionode_id	io_global.f90	/^  INTEGER :: ionode_id /;"	v	module:io_global
ions	input_parameters.f90	/^        NAMELIST \/ ions /;"	n	module:input_parameters
ions_base	ions_base.f90	/^  MODULE ions_base$/;"	m
ions_base_init	ions_base.f90	/^    SUBROUTINE ions_base_init(/;"	s	module:ions_base
ions_bcast	read_namelists.f90	/^     SUBROUTINE ions_bcast(/;"	s	module:read_namelists_module
ions_checkin	read_namelists.f90	/^     SUBROUTINE ions_checkin(/;"	s	module:read_namelists_module
ions_cofmass	ions_base.f90	/^    SUBROUTINE ions_cofmass(/;"	s	module:ions_base
ions_cofmsub	ions_base.f90	/^  SUBROUTINE ions_cofmsub(/;"	s	module:ions_base
ions_defaults	read_namelists.f90	/^     SUBROUTINE ions_defaults(/;"	s	module:read_namelists_module
ions_displacement	ions_base.f90	/^   SUBROUTINE ions_displacement(/;"	s	module:ions_base
ions_kinene	ions_base.f90	/^  SUBROUTINE ions_kinene(/;"	s	module:ions_base
ions_reference_positions	ions_base.f90	/^  SUBROUTINE ions_reference_positions(/;"	s	module:ions_base
ions_shiftvar	ions_base.f90	/^  subroutine ions_shiftvar(/;"	s	module:ions_base
ions_temp	ions_base.f90	/^  subroutine ions_temp(/;"	s	module:ions_base
ions_thermal_stress	ions_base.f90	/^  subroutine ions_thermal_stress(/;"	s	module:ions_base
ions_vel2	ions_base.f90	/^    SUBROUTINE ions_vel2(/;"	s	module:ions_base
ions_vel3	ions_base.f90	/^    SUBROUTINE ions_vel3(/;"	s	module:ions_base
ions_vrescal	ions_base.f90	/^  subroutine ions_vrescal(/;"	s	module:ions_base
ipr	gth.f90	/^     integer,  pointer :: lll(:), ipr(/;"	k	type:gth_parameters
iprint	control_flags.f90	/^  INTEGER :: iprint /;"	v	module:control_flags
iprint	input_parameters.f90	/^        INTEGER :: iprint /;"	v	module:input_parameters
iprnks	input_parameters.f90	/^      INTEGER, ALLOCATABLE :: iprnks(/;"	v	module:input_parameters
iproc	tsvdw.f90	/^INTEGER, PRIVATE :: iproc /;"	v	module:tsvdw_module
iraug	pseudo_types.f90	/^     INTEGER          :: iraug /;"	k	type:paw_in_upf
is_allocated_bec_type	becmod.f90	/^  FUNCTION is_allocated_bec_type /;"	f	module:becmod
is_gth	pseudo_types.f90	/^     LOGICAL :: is_gth /;"	k	type:pseudo_upf
is_multiproj	pseudo_types.f90	/^     LOGICAL :: is_multiproj /;"	k	type:pseudo_upf
isave	control_flags.f90	/^  INTEGER :: isave /;"	v	module:control_flags
isave	input_parameters.f90	/^        INTEGER :: isave /;"	v	module:input_parameters
isgradient	funct.f90	/^  logical :: isgradient /;"	v	module:funct
ish	uspp.f90	/^       nvb,                  &! number of species with Vanderbilt PPs (CPV)$/;"	v	module:uspp_param
ishybrid	funct.f90	/^  logical :: ishybrid /;"	v	module:funct
islda	funct.f90	/^  logical :: islda /;"	v	module:funct
ismeta	funct.f90	/^  logical :: ismeta /;"	v	module:funct
isnonlocc	funct.f90	/^  logical :: isnonlocc /;"	v	module:funct
isnumeric	capital.f90	/^LOGICAL FUNCTION isnumeric /;"	f
isolve	control_flags.f90	/^  INTEGER, PUBLIC :: &$/;"	v	module:control_flags
isotropic	cell_base.f90	/^        LOGICAL   :: isotropic /;"	v	module:cell_base
isotropic	qes_types_module.f90	/^    LOGICAL :: isotropic$/;"	k	type:cell_control_type
isotropic_ispresent	qes_types_module.f90	/^    LOGICAL  :: isotropic_ispresent /;"	k	type:cell_control_type
ispin	electrons_base.f90	/^      INTEGER, ALLOCATABLE :: ispin(/;"	v	module:electrons_base
ispin	qes_types_module.f90	/^    INTEGER :: ispin$/;"	k	type:inputOccupations_type
ispin_bgrp	electrons_base.f90	/^      INTEGER, ALLOCATABLE  :: ispin_bgrp(/;"	v	module:electrons_base
istatus	tsvdw.f90	/^INTEGER, DIMENSION(:), ALLOCATABLE, PRIVATE :: istatus /;"	v	module:tsvdw_module
istep	control_flags.f90	/^    nstep = 1,       &! number of ionic steps$/;"	v	module:control_flags
ithres	wannier_gw.f90	/^     INTEGER :: ithres!/;"	k	type:optimal_options
ityp	ions_base.f90	/^      INTEGER,  ALLOCATABLE :: ityp(/;"	v	module:ions_base
itype	gth.f90	/^     integer  :: itype,/;"	k	type:gth_parameters
ityptot	wyckoff.f90	/^INTEGER, ALLOCATABLE :: ityptot(/;"	v	module:wyckoff
iunbfgs	io_files.f90	/^  INTEGER :: iunbfgs /;"	v	module:io_files
iunefield	io_files.f90	/^  INTEGER :: iunefield /;"	v	module:io_files
iunefieldm	io_files.f90	/^  INTEGER :: iunefieldm /;"	v	module:io_files
iunefieldp	io_files.f90	/^  INTEGER :: iunefieldp /;"	v	module:io_files
iunexit	io_files.f90	/^  INTEGER :: iunexit /;"	v	module:io_files
iunhub	io_files.f90	/^  INTEGER :: iunhub /;"	v	module:io_files
iunit	qexsd.f90	/^  INTEGER          :: iunit,/;"	v	module:qexsd_module
iunlock	io_files.f90	/^  INTEGER :: iunlock /;"	v	module:io_files
iunmix	io_files.f90	/^  INTEGER :: iunmix /;"	v	module:io_files
iunnewimage	io_files.f90	/^  INTEGER :: iunnewimage /;"	v	module:io_files
iunoldwfc	io_files.f90	/^  INTEGER :: iunoldwfc /;"	v	module:io_files
iunoldwfc2	io_files.f90	/^  INTEGER :: iunoldwfc2 /;"	v	module:io_files
iunpun	io_files.f90	/^  INTEGER :: iunpun /;"	v	module:io_files
iunres	io_files.f90	/^  INTEGER :: iunres /;"	v	module:io_files
iunsat	io_files.f90	/^  INTEGER :: iunsat /;"	v	module:io_files
iuntmp	io_files.f90	/^  INTEGER :: iuntmp /;"	v	module:io_files
iunupdate	io_files.f90	/^  INTEGER :: iunupdate /;"	v	module:io_files
iunwf	io_files.f90	/^  INTEGER :: iunwf /;"	v	module:io_files
iunwfc	io_files.f90	/^  INTEGER :: iunwfc /;"	v	module:io_files
iunwfc_exx	io_files.f90	/^  INTEGER :: iunwfc_exx /;"	v	module:io_files
iunwpp	io_files.f90	/^  INTEGER :: iunwpp /;"	v	module:io_files
iupdwn	electrons_base.f90	/^      INTEGER :: iupdwn(/;"	v	module:electrons_base
iupdwn_bgrp	electrons_base.f90	/^      INTEGER :: iupdwn_bgrp(/;"	v	module:electrons_base
iver	uspp.f90	/^       nbetam,               &! max number of beta functions$/;"	v	module:uspp_param
iverbosity	control_flags.f90	/^  INTEGER, PUBLIC :: & ! variable controlling the amount of I\/O to output$/;"	v	module:control_flags
ivertex	bz_form.f90	/^    INTEGER, ALLOCATABLE :: ivertex(/;"	k	type:bz
jblock	mp_exx.f90	/^  INTEGER :: jblock$/;"	v	module:mp_exx
jchi	pseudo_types.f90	/^     REAL(DP), POINTER :: jchi(/;"	k	type:pseudo_upf
jellium	input_parameters.f90	/^      LOGICAL  :: jellium=/;"	v	module:input_parameters
jjj	pseudo_types.f90	/^     REAL(DP), POINTER :: jjj(/;"	k	type:pseudo_upf
job	qes_types_module.f90	/^    CHARACTER(len=256) :: job$/;"	k	type:general_info_type
k	becmod.f90	/^     COMPLEX(DP),ALLOCATABLE :: k(/;"	k	type:bec_type
k1	input_parameters.f90	/^        INTEGER :: nkstot = 0, nk1 /;"	v	module:input_parameters
k1	qes_types_module.f90	/^    INTEGER :: k1$/;"	k	type:monkhorst_pack_type
k2	input_parameters.f90	/^        INTEGER :: nkstot = 0, nk1 = 0, nk2 /;"	v	module:input_parameters
k2	qes_types_module.f90	/^    INTEGER :: k2$/;"	k	type:monkhorst_pack_type
k3	input_parameters.f90	/^        INTEGER :: nkstot = 0, nk1 = 0, nk2 = 0, nk3 /;"	v	module:input_parameters
k3	qes_types_module.f90	/^    INTEGER :: k3$/;"	k	type:monkhorst_pack_type
kF	xc_vdW_DF.f90	/^  function kF(/;"	f	module:vdW_DF
k_point	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: k_point$/;"	k	type:k_point_type
k_point	qes_types_module.f90	/^    TYPE(k_point_/;"	k	type:k_points_IBZ_type
k_point	qes_types_module.f90	/^    TYPE(k_point_/;"	k	type:ks_energies_type
k_point_ispresent	qes_types_module.f90	/^    LOGICAL  :: k_point_ispresent /;"	k	type:k_points_IBZ_type
k_point_type	qes_types_module.f90	/^  TYPE :: k_point_type$/;"	t	module:qes_types_module
k_points	input_parameters.f90	/^        CHARACTER(len=80) :: k_points /;"	v	module:input_parameters
k_points_IBZ	qes_types_module.f90	/^    TYPE(k_points_IBZ_/;"	k	type:input_type
k_points_IBZ_type	qes_types_module.f90	/^  TYPE :: k_points_IBZ_type$/;"	t	module:qes_types_module
kbeta	pseudo_types.f90	/^     INTEGER,  POINTER :: kbeta(/;"	k	type:pseudo_upf
keep_occ	electrons_base.f90	/^      LOGICAL :: keep_occ /;"	v	module:electrons_base
kernel	kernel_table.f90	/^  real(dp), allocatable :: kernel(/;"	v	module:kernel_table
kernel_file_name	kernel_table.f90	/^  character(len=1000) :: kernel_file_name /;"	v	module:kernel_table
kernel_table	kernel_table.f90	/^MODULE kernel_table$/;"	m
kinds	kind.f90	/^    MODULE kinds$/;"	m
kkbeta	pseudo_types.f90	/^     INTEGER :: kkbeta /;"	k	type:pseudo_upf
ks_energies	qes_types_module.f90	/^    TYPE(ks_energies_/;"	k	type:band_structure_type
ks_energies_type	qes_types_module.f90	/^  TYPE :: ks_energies_type$/;"	t	module:qes_types_module
kunit	mp_pools.f90	/^  INTEGER :: kunit /;"	v	module:mp_pools
l	paw_variables.f90	/^        INTEGER :: l /;"	k	type:paw_info
l	wannier_new.f90	/^         INTEGER :: l /;"	k	type:ingredient
l_big_system	wannier_gw.f90	/^  LOGICAL :: l_big_system!/;"	v	module:wannier_gw
l_bse	wannier_gw.f90	/^  LOGICAL :: l_bse!/;"	v	module:wannier_gw
l_complete	wannier_gw.f90	/^     LOGICAL :: l_complete!/;"	k	type:optimal_options
l_cond_pol_base	wannier_gw.f90	/^  LOGICAL :: l_cond_pol_base!/;"	v	module:wannier_gw
l_contour	wannier_gw.f90	/^  LOGICAL :: l_contour!/;"	v	module:wannier_gw
l_coulomb_analysis	wannier_gw.f90	/^  LOGICAL :: l_coulomb_analysis!/;"	v	module:wannier_gw
l_exchange	wannier_gw.f90	/^  LOGICAL :: l_exchange!/;"	v	module:wannier_gw
l_exit_muller	input_parameters.f90	/^        LOGICAL :: l_exit_muller=/;"	v	module:input_parameters
l_fast_pola	wannier_gw.f90	/^  LOGICAL :: l_fast_pola!/;"	v	module:wannier_gw
l_frac_occ	wannier_gw.f90	/^  LOGICAL :: l_frac_occ!/;"	v	module:wannier_gw
l_full	wannier_gw.f90	/^  LOGICAL :: l_full!/;"	v	module:wannier_gw
l_gram	wannier_gw.f90	/^  LOGICAL :: l_gram!/;"	v	module:wannier_gw
l_head	wannier_gw.f90	/^  LOGICAL :: l_head=/;"	v	module:wannier_gw
l_iter_algorithm	wannier_gw.f90	/^  LOGICAL :: l_iter_algorithm!/;"	v	module:wannier_gw
l_list	wannier_gw.f90	/^  LOGICAL :: l_list /;"	v	module:wannier_gw
l_mplathe	input_parameters.f90	/^        LOGICAL :: l_mplathe=/;"	v	module:input_parameters
l_plot_mlwf	wannier_gw.f90	/^  LOGICAL :: l_plot_mlwf!/;"	v	module:wannier_gw
l_pmat_diago	wannier_gw.f90	/^  LOGICAL :: l_pmat_diago!/;"	v	module:wannier_gw
l_pmatrix	wannier_gw.f90	/^  LOGICAL :: l_pmatrix /;"	v	module:wannier_gw
l_real	wannier_gw.f90	/^  LOGICAL :: l_real!/;"	v	module:wannier_gw
l_scissor	wannier_gw.f90	/^  LOGICAL :: l_scissor!/;"	v	module:wannier_gw
l_selfconsistent	wannier_gw.f90	/^  LOGICAL :: l_selfconsistent!/;"	v	module:wannier_gw
l_semicore	wannier_gw.f90	/^  LOGICAL :: l_semicore!/;"	v	module:wannier_gw
l_semicore_read	wannier_gw.f90	/^  LOGICAL :: l_semicore_read!/;"	v	module:wannier_gw
l_simple	wannier_gw.f90	/^  LOGICAL :: l_simple!/;"	v	module:wannier_gw
l_t_wannier	wannier_gw.f90	/^  LOGICAL :: l_t_wannier!/;"	v	module:wannier_gw
l_truncated_coulomb	wannier_gw.f90	/^  LOGICAL :: l_truncated_coulomb!/;"	v	module:wannier_gw
l_ts_eigen	wannier_gw.f90	/^  LOGICAL :: l_ts_eigen!/;"	v	module:wannier_gw
l_v_basis	wannier_gw.f90	/^  LOGICAL :: l_v_basis!/;"	v	module:wannier_gw
l_verbose	wannier_gw.f90	/^  LOGICAL :: l_verbose!/;"	v	module:wannier_gw
l_whole_s	wannier_gw.f90	/^  LOGICAL :: l_whole_s!/;"	v	module:wannier_gw
l_wing	wannier_gw.f90	/^  LOGICAL :: l_wing!/;"	v	module:wannier_gw
l_zero	wannier_gw.f90	/^  LOGICAL :: l_zero!/;"	v	module:wannier_gw
la2F	input_parameters.f90	/^        LOGICAL :: la2F /;"	v	module:input_parameters
label	qes_types_module.f90	/^    CHARACTER(len=256) :: label$/;"	k	type:HubbardCommon_type
label	qes_types_module.f90	/^    CHARACTER(len=256) :: label$/;"	k	type:HubbardJ_type
label	qes_types_module.f90	/^    CHARACTER(len=256) :: label$/;"	k	type:Hubbard_ns_type
label	qes_types_module.f90	/^    CHARACTER(len=256) :: label$/;"	k	type:clock_type
label	qes_types_module.f90	/^    CHARACTER(len=256) :: label$/;"	k	type:k_point_type
label	qes_types_module.f90	/^    CHARACTER(len=256) :: label$/;"	k	type:starting_ns_type
label_ispresent	qes_types_module.f90	/^    LOGICAL :: label_ispresent /;"	k	type:HubbardCommon_type
label_ispresent	qes_types_module.f90	/^    LOGICAL :: label_ispresent /;"	k	type:k_point_type
label_srt	ions_base.f90	/^      CHARACTER(LEN=3), ALLOCATABLE :: label_srt(/;"	v	module:ions_base
ladd	paw_variables.f90	/^        INTEGER          :: ladd /;"	k	type:paw_radial_integrator
lagrange	constraints_module.f90	/^   REAL(DP), ALLOCATABLE :: lagrange(/;"	v	module:constraints_module
lagrange_multiplier	qes_types_module.f90	/^    REAL(DP) :: lagrange_multiplier$/;"	k	type:spin_constraints_type
lambda	input_parameters.f90	/^        REAL(DP) :: lambda /;"	v	module:input_parameters
lambda	noncol.f90	/^      r_m(ntypx) = 0.0d0,  &!  Radius for local integrations for each type$/;"	v	module:noncollin_module
lambda_cold	input_parameters.f90	/^        REAL(DP) :: lambda_cold$/;"	v	module:input_parameters
lanczos_restart	wannier_gw.f90	/^  INTEGER :: lanczos_restart!/;"	v	module:wannier_gw
latgen	latgen.f90	/^SUBROUTINE latgen(/;"	s
lbands	control_flags.f90	/^    lwfpbe0nscf=.FALSE.,&$/;"	v	module:control_flags
lberry	input_parameters.f90	/^        LOGICAL :: lberry /;"	v	module:input_parameters
lbfgs	control_flags.f90	/^    lscf    =.FALSE., &! if .TRUE. the calc. is selfconsistent$/;"	v	module:control_flags
lchi	pseudo_types.f90	/^     INTEGER, POINTER  :: lchi(/;"	k	type:pseudo_upf
lconstrain	control_flags.f90	/^    lbands  =.FALSE., &! if .TRUE. the calc. is band structure$/;"	v	module:control_flags
lda_plus_u	input_parameters.f90	/^        LOGICAL :: lda_plus_u /;"	v	module:input_parameters
lda_plus_u_kind	input_parameters.f90	/^        INTEGER :: lda_plus_u_kind /;"	v	module:input_parameters
lda_plus_u_kind	qes_types_module.f90	/^    INTEGER :: lda_plus_u_kind$/;"	k	type:dftU_type
lda_plus_u_kind_ispresent	qes_types_module.f90	/^    LOGICAL  :: lda_plus_u_kind_ispresent /;"	k	type:dftU_type
ldftd3	control_flags.f90	/^    llondon =.FALSE., & ! if .TRUE. compute Grimme D2 dispersion corrections$/;"	v	module:control_flags
lecrpa	control_flags.f90	/^  LOGICAL :: lecrpa /;"	v	module:control_flags
lecrpa	input_parameters.f90	/^        LOGICAL :: lecrpa /;"	v	module:input_parameters
lelfield	input_parameters.f90	/^        LOGICAL :: lelfield /;"	v	module:input_parameters
len_head_block_freq	wannier_gw.f90	/^  INTEGER :: len_head_block_freq!/;"	v	module:wannier_gw
len_head_block_wfc	wannier_gw.f90	/^  INTEGER :: len_head_block_wfc!/;"	v	module:wannier_gw
letter_coord	bz_form.f90	/^    REAL(DP), ALLOCATABLE :: letter_coord(/;"	k	type:bz
letter_list	bz_form.f90	/^    CHARACTER(LEN=3), ALLOCATABLE :: letter_list(/;"	k	type:bz
letter_type	bz_form.f90	/^    CHARACTER(LEN=20) :: letter_type /;"	k	type:bz
lfcpdyn	fcp_variables.f90	/^   LOGICAL          :: lfcpdyn /;"	v	module:fcp_variables
lfcpdyn	input_parameters.f90	/^        LOGICAL  :: lfcpdyn /;"	v	module:input_parameters
lfcpopt	fcp_variables.f90	/^   LOGICAL          :: lfcpopt /;"	v	module:fcp_variables
lfcpopt	input_parameters.f90	/^        LOGICAL  :: lfcpopt /;"	v	module:input_parameters
lforcet	input_parameters.f90	/^        LOGICAL  :: lforcet=/;"	v	module:input_parameters
library_init	command_line_options.f90	/^  LOGICAL :: library_init /;"	v	module:command_line_options
library_mode	mp_world.f90	/^  LOGICAL :: library_mode /;"	v	module:mp_world
libxc_major	funct.f90	/^  integer :: libxc_major=/;"	v	module:funct
libxc_micro	funct.f90	/^  integer :: libxc_major=0, libxc_minor=0, libxc_micro=/;"	v	module:funct
libxc_minor	funct.f90	/^  integer :: libxc_major=0, libxc_minor=/;"	v	module:funct
lkpoint_dir	input_parameters.f90	/^        LOGICAL :: lkpoint_dir /;"	v	module:input_parameters
lll	gth.f90	/^     integer,  pointer :: lll(/;"	k	type:gth_parameters
lll	pseudo_types.f90	/^     INTEGER,  POINTER :: lll(/;"	k	type:pseudo_upf
lloc	gth.f90	/^     integer  :: itype, lloc,/;"	k	type:gth_parameters
lloc	pseudo_types.f90	/^     INTEGER :: lloc /;"	k	type:pseudo_upf
llondon	control_flags.f90	/^    lconstrain=.FALSE.,&! if .TRUE. the calc. is constraint$/;"	v	module:control_flags
lls	pseudo_types.f90	/^     INTEGER,POINTER          :: lls(/;"	k	type:pseudo_config
lm_fact	paw_variables.f90	/^    INTEGER,PARAMETER    :: lm_fact /;"	v	module:paw_variables
lm_fact_x	paw_variables.f90	/^    INTEGER,PARAMETER    :: lm_fact_x /;"	v	module:paw_variables
lm_max	paw_variables.f90	/^        INTEGER          :: lm_max /;"	k	type:paw_radial_integrator
lmax	gth.f90	/^     integer  :: itype, lloc, lmax$/;"	k	type:gth_parameters
lmax	paw_variables.f90	/^        INTEGER          :: lmax /;"	k	type:paw_radial_integrator
lmax	pseudo_types.f90	/^     INTEGER :: lmax /;"	k	type:pseudo_upf
lmax_aug	pseudo_types.f90	/^     INTEGER          :: lmax_aug /;"	k	type:paw_in_upf
lmax_rho	pseudo_types.f90	/^     INTEGER :: lmax_rho /;"	k	type:pseudo_upf
lmaxkb	uspp.f90	/^  INTEGER :: &$/;"	v	module:uspp_param
lmaxq	uspp.f90	/^       lmaxkb,               &! max angular momentum$/;"	v	module:uspp_param
lmaxx	parameters.f90	/^       npk    = 40000,  &! max number of k-points               $/;"	v	module:parameters
lmd	control_flags.f90	/^    lbfgs   =.FALSE., &! if .TRUE. the calc. is a relaxation based on BFGS$/;"	v	module:control_flags
localization_thr	input_parameters.f90	/^        REAL(DP) :: localization_thr /;"	v	module:input_parameters
localization_threshold	qes_types_module.f90	/^    REAL(DP) :: localization_threshold$/;"	k	type:hybrid_type
localization_threshold_ispresent	qes_types_module.f90	/^    LOGICAL  :: localization_threshold_ispresent /;"	k	type:hybrid_type
locate	splinelib.f90	/^         FUNCTION locate(/;"	f	module:splinelib
lon_rcut	mm_dispersion.f90	/^  REAL ( DP ) , PUBLIC :: scal6=0._dp , lon_rcut=/;"	v	module:london_module
london	input_parameters.f90	/^        LOGICAL   :: london /;"	v	module:input_parameters
london_c6	input_parameters.f90	/^                       london_rcut = 200.00_DP , &$/;"	v	module:input_parameters
london_c6	qes_types_module.f90	/^    TYPE(HubbardCommon_type), DIMENSION(:), ALLOCATABLE :: london_c6$/;"	k	type:vdW_type
london_c6_ispresent	qes_types_module.f90	/^    LOGICAL  :: london_c6_ispresent /;"	k	type:vdW_type
london_module	mm_dispersion.f90	/^MODULE london_module$/;"	m
london_rcut	input_parameters.f90	/^        REAL ( DP ) :: london_s6   =   0.75_DP ,&$/;"	v	module:input_parameters
london_rcut	qes_types_module.f90	/^    REAL(DP) :: london_rcut$/;"	k	type:vdW_type
london_rcut_ispresent	qes_types_module.f90	/^    LOGICAL  :: london_rcut_ispresent /;"	k	type:vdW_type
london_rvdw	input_parameters.f90	/^                       london_c6( nsx ) = -1.0_DP, &$/;"	v	module:input_parameters
london_s6	input_parameters.f90	/^        REAL ( DP ) :: london_s6 /;"	v	module:input_parameters
london_s6	qes_types_module.f90	/^    REAL(DP) :: london_s6$/;"	k	type:vdW_type
london_s6_ispresent	qes_types_module.f90	/^    LOGICAL  :: london_s6_ispresent /;"	k	type:vdW_type
lorbm	input_parameters.f90	/^        LOGICAL :: lorbm /;"	v	module:input_parameters
lowercase	capital.f90	/^FUNCTION lowercase(/;"	f
lowestUnoccupiedLevel	qes_types_module.f90	/^    REAL(DP) :: lowestUnoccupiedLevel$/;"	k	type:band_structure_type
lowestUnoccupiedLevel_ispresent	qes_types_module.f90	/^    LOGICAL  :: lowestUnoccupiedLevel_ispresent /;"	k	type:band_structure_type
lpl	uspp.f90	/^       lpx(nlx,nlx),     &! maximum combined angular momentum LM$/;"	v	module:uspp
lpx	uspp.f90	/^  INTEGER ::             &! for each pair of combined momenta lm(1),lm(2): $/;"	v	module:uspp
lqmax	parameters.f90	/^       lmaxx  = 3,      &! max non local angular momentum (l=0 to lmaxx)      $/;"	v	module:parameters
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:BerryPhaseOutput_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:HubbardCommon_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:HubbardJ_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:Hubbard_ns_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:algorithmic_info_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:atom_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:atomic_constraint_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:atomic_constraints_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:atomic_positions_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:atomic_species_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:atomic_structure_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:band_structure_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:bands_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:basisSetItem_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:basis_set_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:basis_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:bfgs_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:boundary_conditions_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:cell_control_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:cell_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:clock_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:closed_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:control_variables_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:convergence_info_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:created_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:creator_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:dftU_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:dft_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:dipoleOutput_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:ekin_functional_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:electric_field_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:electron_control_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:electronicPolarization_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:equivalent_atoms_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:esm_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:espresso_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:finiteFieldOut_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:gateInfo_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:gate_settings_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:general_info_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:hybrid_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:info_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:inputOccupations_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:input_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:integerMatrix_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:integerVector_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:ion_control_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:ionicPolarization_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:k_point_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:k_points_IBZ_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:ks_energies_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:magnetization_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:matrix_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:md_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:monkhorst_pack_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:occupations_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:opt_conv_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:outputElectricField_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:outputPBC_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:output_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:parallel_info_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:phase_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:polarization_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:qpoint_grid_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:reciprocal_lattice_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:scalarQuantity_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:scf_conv_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:smearing_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:species_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:spin_constraints_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:spin_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:starting_ns_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:step_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:symmetries_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:symmetry_flags_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:symmetry_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:timing_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:total_energy_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:vdW_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:vector_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:wyckoff_positions_type
lread	qes_types_module.f90	/^    LOGICAL  :: lread /;"	k	type:xml_format_type
lscf	control_flags.f90	/^  LOGICAL, PUBLIC :: &$/;"	v	module:control_flags
lsda	qes_types_module.f90	/^    LOGICAL :: lsda$/;"	k	type:band_structure_type
lsda	qes_types_module.f90	/^    LOGICAL :: lsda$/;"	k	type:magnetization_type
lsda	qes_types_module.f90	/^    LOGICAL :: lsda$/;"	k	type:spin_type
lsg	input_parameters.f90	/^        LOGICAL  :: lsg /;"	v	module:input_parameters
lsign	noncol.f90	/^      noncolin, &           !  true if noncollinear magnetism is allowed$/;"	v	module:noncollin_module
lspinorb	input_parameters.f90	/^        LOGICAL  :: lspinorb /;"	v	module:input_parameters
lwannier	wannier_gw.f90	/^  LOGICAL  :: lwannier!/;"	v	module:wannier_gw
lwf	control_flags.f90	/^    lmd     =.FALSE., &! if .TRUE. the calc. is a dynamics$/;"	v	module:control_flags
lwfnscf	control_flags.f90	/^    lwf     =.FALSE., &! if .TRUE. the calc. is with wannier functions$/;"	v	module:control_flags
lwfpbe0nscf	control_flags.f90	/^    lwfnscf =.FALSE., &$/;"	v	module:control_flags
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:BerryPhaseOutput_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:HubbardCommon_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:HubbardJ_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:Hubbard_ns_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:algorithmic_info_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:atom_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:atomic_constraint_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:atomic_constraints_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:atomic_positions_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:atomic_species_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:atomic_structure_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:band_structure_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:bands_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:basisSetItem_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:basis_set_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:basis_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:bfgs_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:boundary_conditions_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:cell_control_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:cell_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:clock_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:closed_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:control_variables_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:convergence_info_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:created_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:creator_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:dftU_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:dft_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:dipoleOutput_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:ekin_functional_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:electric_field_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:electron_control_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:electronicPolarization_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:equivalent_atoms_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:esm_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:espresso_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:finiteFieldOut_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:gateInfo_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:gate_settings_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:general_info_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:hybrid_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:info_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:inputOccupations_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:input_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:integerMatrix_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:integerVector_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:ion_control_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:ionicPolarization_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:k_point_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:k_points_IBZ_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:ks_energies_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:magnetization_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:matrix_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:md_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:monkhorst_pack_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:occupations_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:opt_conv_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:outputElectricField_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:outputPBC_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:output_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:parallel_info_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:phase_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:polarization_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:qpoint_grid_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:reciprocal_lattice_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:scalarQuantity_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:scf_conv_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:smearing_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:species_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:spin_constraints_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:spin_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:starting_ns_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:step_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:symmetries_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:symmetry_flags_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:symmetry_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:timing_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:total_energy_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:vdW_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:vector_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:wyckoff_positions_type
lwrite	qes_types_module.f90	/^    LOGICAL  :: lwrite /;"	k	type:xml_format_type
lxdm	control_flags.f90	/^    ts_vdw  =.FALSE., & ! as above for Tkatchenko-Scheffler disp.corrections$/;"	v	module:control_flags
lxmlinput_loc	open_close_input_file.f90	/^  LOGICAL, SAVE :: lxmlinput_loc /;"	v	module:open_close_input_file
lyp	functionals.f90	/^subroutine lyp /;"	s
m	paw_variables.f90	/^        INTEGER :: m /;"	k	type:paw_info
m	wannier_new.f90	/^         INTEGER :: l = 0, &           ! l value for atomi/;"	k	type:ingredient
m06lc	metagga.f90	/^subroutine m06lc /;"	s
m06lx	metagga.f90	/^subroutine m06lx /;"	s
m06lxc	metagga.f90	/^subroutine m06lxc /;"	s
m06lxc_spin	metagga.f90	/^subroutine m06lxc_spin /;"	s
m1	cell_base.f90	/^          REAL(DP) :: m1(/;"	k	type:boxdimensions
m_gth	gth.f90	/^module m_gth$/;"	m
m_loc	noncol.f90	/^      r_loc(:),            &! local integrated charge $/;"	v	module:noncollin_module
magnetization	qes_types_module.f90	/^    TYPE(magnetization_/;"	k	type:output_type
magnetization_type	qes_types_module.f90	/^  TYPE :: magnetization_type$/;"	t	module:qes_types_module
magtot_nc	noncol.f90	/^      mcons(3,ntypx)=0.d0, &!  constrained values for local variables$/;"	v	module:noncollin_module
make_emended_upf_copy	emend_upf.f90	/^FUNCTION  make_emended_upf_copy(/;"	f	module:emend_upf_module
make_rmat	mdiis.f90	/^    SUBROUTINE make_rmat(/;"	s	subroutine:update_by_mdiis
mass	qes_types_module.f90	/^    REAL(DP) :: mass$/;"	k	type:species_type
mass	qmmm.f90	/^  REAL(DP), ALLOCATABLE :: mass(/;"	v	module:qmmm
mass_ispresent	qes_types_module.f90	/^    LOGICAL  :: mass_ispresent /;"	k	type:species_type
match_skipping_spaces	matches.f90	/^PURE  FUNCTION  match_skipping_spaces /;"	f
matches	matches.f90	/^FUNCTION matches(/;"	f
matching	funct.f90	/^  integer function matching(/;"	f	module:funct
matrix	basic_algebra_routines.f90	/^     FUNCTION matrix(/;"	f	module:basic_algebra_routines
matrix	qes_types_module.f90	/^    REAL(DP), DIMENSION(:), ALLOCATABLE :: matrix$/;"	k	type:matrix_type
matrix_inversion	invmat.f90	/^MODULE matrix_inversion$/;"	m
matrix_times_vector	basic_algebra_routines.f90	/^     FUNCTION matrix_times_vector(/;"	f	module:basic_algebra_routines
matrix_type	qes_types_module.f90	/^  TYPE :: matrix_type$/;"	t	module:qes_types_module
max_cg_iter	control_flags.f90	/^    david,            &! max dimension of subspace in Davidson diagonalization$/;"	v	module:control_flags
max_contributors	mp_exx.f90	/^  INTEGER :: max_contributors$/;"	v	module:mp_exx
max_event_step	autopilot.f90	/^  INTEGER, parameter :: max_event_step /;"	v	module:autopilot
max_ibands	mp_exx.f90	/^  INTEGER :: max_ibands$/;"	v	module:mp_exx
max_ngm	wannier_gw.f90	/^  INTEGER :: max_ngm!/;"	v	module:wannier_gw
max_ngm_set	wannier_gw.f90	/^    subroutine  max_ngm_set$/;"	s	module:wannier_gw
max_nstep	qes_types_module.f90	/^    INTEGER :: max_nstep$/;"	k	type:electron_control_type
max_pairs	mp_exx.f90	/^  INTEGER :: max_pairs /;"	v	module:mp_exx
max_ppcg_iter	control_flags.f90	/^    max_cg_iter,      &! maximum number of iterations in a CG call$/;"	v	module:control_flags
max_rules	autopilot.f90	/^  INTEGER   :: max_rules /;"	v	module:autopilot
max_seconds	check_stop.f90	/^  REAL(DP) :: max_seconds /;"	v	module:check_stop
max_seconds	input_parameters.f90	/^        REAL(DP) :: max_seconds /;"	v	module:input_parameters
max_seconds	qes_types_module.f90	/^    INTEGER :: max_seconds$/;"	k	type:control_variables_type
max_xml_steps	control_flags.f90	/^  INTEGER  :: max_xml_steps /;"	v	module:control_flags
max_xml_steps	input_parameters.f90	/^        INTEGER :: max_xml_steps /;"	v	module:input_parameters
maxdims	hdf5_qe.f90	/^   INTEGER(HSIZE_T), DIMENSION(1:2) :: maxdims$/;"	k	type:HDF5_type
maxdims	qeh5_module.f90	/^     INTEGER(HSIZE_T),ALLOCATABLE  ::  dims(:),maxdims(/;"	k	type:qeh5_dataspace
maxiter	input_parameters.f90	/^        INTEGER :: maxiter /;"	v	module:input_parameters
maxiter2	wannier_gw.f90	/^  INTEGER :: maxiter2!/;"	v	module:wannier_gw
maxwfdt	input_parameters.f90	/^          REAL(DP) :: maxwfdt$/;"	v	module:input_parameters
mbox	mdiis.f90	/^    INTEGER           :: mbox /;"	k	type:mdiis_type
mcons	noncol.f90	/^      angle2(ntypx),       &!  magnetization's direction for each atom$/;"	v	module:noncollin_module
md	qes_types_module.f90	/^    TYPE(md_/;"	k	type:ion_control_type
md5_from_file	wrappers.f90	/^  SUBROUTINE md5_from_file /;"	s	module:wrappers
md_ispresent	qes_types_module.f90	/^    LOGICAL  :: md_ispresent /;"	k	type:ion_control_type
md_type	qes_types_module.f90	/^  TYPE :: md_type$/;"	t	module:qes_types_module
mdiis	mdiis.f90	/^MODULE mdiis$/;"	m
mdiis_type	mdiis.f90	/^  TYPE mdiis_type$/;"	t	module:mdiis
me	tsvdw.f90	/^INTEGER, PRIVATE :: me /;"	v	module:tsvdw_module
me_bgrp	mp_bands.f90	/^  INTEGER :: me_bgrp /;"	v	module:mp_bands
me_egrp	mp_exx.f90	/^  INTEGER :: me_egrp /;"	v	module:mp_exx
me_image	mp_images.f90	/^  INTEGER :: me_image /;"	v	module:mp_images
me_orthopool	mp_pools.f90	/^  INTEGER :: me_orthopool /;"	v	module:mp_orthopools
me_pool	mp_pools.f90	/^  INTEGER :: me_pool /;"	v	module:mp_pools
memchk	control_flags.f90	/^  LOGICAL :: memchk /;"	v	module:control_flags
memory	input_parameters.f90	/^        CHARACTER(len=80) :: memory /;"	v	module:input_parameters
memory_allowed	input_parameters.f90	/^        CHARACTER(len=80) :: memory_allowed(/;"	v	module:input_parameters
memspace	hdf5_qe.f90	/^   INTEGER(HID_T) :: memspace /;"	k	type:HDF5_type
memspace	qeh5_module.f90	/^     TYPE(qeh5_dataspace)  ::    memspace /;"	k	type:qeh5_dataset
memspace_ispresent	qeh5_module.f90	/^     LOGICAL               ::    memspace_ispresent /;"	k	type:qeh5_dataset
memstat	wrappers.f90	/^  SUBROUTINE memstat /;"	s	module:wrappers
mergeig	mp_wave.f90	/^      SUBROUTINE mergeig(/;"	s	module:mp_wave
mergekg	mp_wave.f90	/^      SUBROUTINE mergekg /;"	s	module:mp_wave
mergewf	mp_wave.f90	/^      SUBROUTINE mergewf /;"	s	module:mp_wave
mesh	pseudo_types.f90	/^     INTEGER :: mesh /;"	k	type:pseudo_upf
mesh	radial_grids.f90	/^  INTEGER :: &$/;"	k	type:radial_grid_type
meta	funct.f90	/^  character (len=4) :: exc, corr, gradx, gradc, meta,/;"	v	module:funct
metaFX	metagga.f90	/^subroutine metaFX(/;"	s
meta_ionode	io_global.f90	/^  LOGICAL :: meta_ionode /;"	v	module:io_global
meta_ionode_id	io_global.f90	/^  INTEGER :: meta_ionode_id /;"	v	module:io_global
metac	metagga.f90	/^subroutine metac(/;"	s
metac_spin	metagga.f90	/^subroutine metac_spin(/;"	s
metax	metagga.f90	/^subroutine metax(/;"	s
metric	bfgs_module.f90	/^      inv_hess(:,:),     &! inverse hessian matrix (updated using BFGS formula)$/;"	v	module:bfgs_module
mill	recvec.f90	/^     INTEGER, ALLOCATABLE, TARGET :: mill(/;"	v	module:gvect
mill_g	recvec.f90	/^     INTEGER, ALLOCATABLE, TARGET :: mill_g(/;"	v	module:gvect
minus_g	io_base.f90	/^         function minus_g /;"	f	subroutine:charge_k_to_g
mixing_beta	control_flags.f90	/^  REAL(DP), PUBLIC :: &$/;"	v	module:control_flags
mixing_beta	input_parameters.f90	/^        REAL(DP) :: mixing_beta /;"	v	module:input_parameters
mixing_beta	qes_types_module.f90	/^    REAL(DP) :: mixing_beta$/;"	k	type:electron_control_type
mixing_fixed_ns	input_parameters.f90	/^        INTEGER :: mixing_fixed_ns /;"	v	module:input_parameters
mixing_mode	input_parameters.f90	/^        CHARACTER(len=80) :: mixing_mode /;"	v	module:input_parameters
mixing_mode	qes_types_module.f90	/^    CHARACTER(len=256) :: mixing_mode$/;"	k	type:electron_control_type
mixing_ndim	input_parameters.f90	/^        INTEGER :: mixing_ndim /;"	v	module:input_parameters
mixing_ndim	qes_types_module.f90	/^    INTEGER :: mixing_ndim$/;"	k	type:electron_control_type
mk_dffnl_gth	gth.f90	/^  subroutine mk_dffnl_gth(/;"	s	module:m_gth
mk_ffnl_gth	gth.f90	/^  subroutine mk_ffnl_gth(/;"	s	module:m_gth
modenum	control_flags.f90	/^  INTEGER, PUBLIC :: &$/;"	v	module:control_flags
modulus	qes_types_module.f90	/^    CHARACTER(len=256) :: modulus$/;"	k	type:phase_type
modulus	qes_types_module.f90	/^    REAL(DP) :: modulus$/;"	k	type:polarization_type
modulus_ispresent	qes_types_module.f90	/^    LOGICAL :: modulus_ispresent /;"	k	type:phase_type
monkhorst_pack	qes_types_module.f90	/^    CHARACTER(len=256) :: monkhorst_pack$/;"	k	type:monkhorst_pack_type
monkhorst_pack	qes_types_module.f90	/^    TYPE(monkhorst_pack_/;"	k	type:k_points_IBZ_type
monkhorst_pack_ispresent	qes_types_module.f90	/^    LOGICAL  :: monkhorst_pack_ispresent /;"	k	type:k_points_IBZ_type
monkhorst_pack_type	qes_types_module.f90	/^  TYPE :: monkhorst_pack_type$/;"	t	module:qes_types_module
more_options	qes_types_module.f90	/^    CHARACTER(len=256) :: more_options$/;"	k	type:wyckoff_positions_type
more_options_ispresent	qes_types_module.f90	/^    LOGICAL :: more_options_ispresent /;"	k	type:wyckoff_positions_type
mp_bands	mp_bands.f90	/^MODULE mp_bands$/;"	m
mp_bands_TDDFPT	mp_bands.f90	/^MODULE mp_bands_TDDFPT$/;"	m
mp_exx	mp_exx.f90	/^MODULE mp_exx$/;"	m
mp_global	mp_global.f90	/^MODULE mp_global$/;"	m
mp_global_end	mp_global.f90	/^  SUBROUTINE mp_global_end /;"	s	module:mp_global
mp_images	mp_images.f90	/^MODULE mp_images$/;"	m
mp_init_image	mp_images.f90	/^  SUBROUTINE mp_init_image /;"	s	module:mp_images
mp_orthopools	mp_pools.f90	/^MODULE mp_orthopools$/;"	m
mp_pools	mp_pools.f90	/^MODULE mp_pools$/;"	m
mp_start_bands	mp_bands.f90	/^  SUBROUTINE mp_start_bands(/;"	s	module:mp_bands
mp_start_exx	mp_exx.f90	/^  SUBROUTINE mp_start_exx(/;"	s	module:mp_exx
mp_start_images	mp_images.f90	/^  SUBROUTINE mp_start_images /;"	s	module:mp_images
mp_start_orthopools	mp_pools.f90	/^  SUBROUTINE mp_start_orthopools(/;"	s	module:mp_orthopools
mp_start_pools	mp_pools.f90	/^  SUBROUTINE mp_start_pools(/;"	s	module:mp_pools
mp_startup	mp_global.f90	/^  SUBROUTINE mp_startup /;"	s	module:mp_global
mp_stop_orthopools	mp_pools.f90	/^  SUBROUTINE mp_stop_orthopools(/;"	s	module:mp_orthopools
mp_wave	mp_wave.f90	/^    MODULE mp_wave$/;"	m
mp_world	mp_world.f90	/^MODULE mp_world$/;"	m
mp_world_end	mp_world.f90	/^  SUBROUTINE mp_world_end /;"	s	module:mp_world
mp_world_start	mp_world.f90	/^  SUBROUTINE mp_world_start /;"	s	module:mp_world
mpime	mp_world.f90	/^  INTEGER :: mpime /;"	v	module:mp_world
msh	atom.f90	/^  INTEGER, ALLOCATABLE :: msh(/;"	v	module:atom
mx	uspp.f90	/^       nlx  = (lmaxx+1)**2, &! maximum number of combined angular momentum$/;"	v	module:uspp
mxr	mm_dispersion.f90	/^  INTEGER :: mxr$/;"	v	module:london_module
my_bgrp_id	mp_bands.f90	/^  INTEGER :: my_bgrp_id /;"	v	module:mp_bands
my_egrp_id	mp_exx.f90	/^  INTEGER :: my_egrp_id /;"	v	module:mp_exx
my_getarg	command_line_options.f90	/^  SUBROUTINE my_getarg /;"	s	module:command_line_options
my_iargc	command_line_options.f90	/^  INTEGER FUNCTION my_iargc /;"	f	module:command_line_options
my_image_id	mp_images.f90	/^  INTEGER :: my_image_id=/;"	v	module:mp_images
my_orthopool_id	mp_pools.f90	/^  INTEGER :: my_orthopool_id /;"	v	module:mp_orthopools
my_pool_id	mp_pools.f90	/^  INTEGER :: my_pool_id /;"	v	module:mp_pools
mycol	wannier_gw.f90	/^  INTEGER :: mycol!/;"	v	module:wannier_gw
mype	becmod.f90	/^     INTEGER :: mype$/;"	k	type:bec_type
myrow	wannier_gw.f90	/^  INTEGER :: myrow!/;"	v	module:wannier_gw
n_atom_wfc	uspp.f90	/^  FUNCTION n_atom_wfc(/;"	f	module:uspp_param
n_auto_vars	autopilot.f90	/^  INTEGER, parameter :: n_auto_vars /;"	v	module:autopilot
n_berry_cycles	qes_types_module.f90	/^    INTEGER :: n_berry_cycles$/;"	k	type:electric_field_type
n_berry_cycles_ispresent	qes_types_module.f90	/^    LOGICAL  :: n_berry_cycles_ispresent /;"	k	type:electric_field_type
n_cntr	input_parameters.f90	/^      INTEGER  :: n_cntr /;"	v	module:input_parameters
n_events	autopilot.f90	/^  INTEGER   :: n_events /;"	v	module:autopilot
n_fast_pmat	wannier_gw.f90	/^  INTEGER :: n_fast_pmat!/;"	v	module:wannier_gw
n_full	wannier_gw.f90	/^  INTEGER :: n_full(/;"	v	module:wannier_gw
n_gauss	wannier_gw.f90	/^  INTEGER :: n_gauss!/;"	v	module:wannier_gw
n_gw_states	wannier_gw.f90	/^  INTEGER :: n_gw_states!/;"	v	module:wannier_gw
n_inner	input_parameters.f90	/^        INTEGER :: n_inner /;"	v	module:input_parameters
n_list	wannier_gw.f90	/^  INTEGER :: n_list(/;"	v	module:wannier_gw
n_muller	input_parameters.f90	/^        INTEGER :: n_muller=/;"	v	module:input_parameters
n_opt_steps	qes_types_module.f90	/^    INTEGER :: n_opt_steps$/;"	k	type:opt_conv_type
n_pmat	wannier_gw.f90	/^  INTEGER :: n_pmat!/;"	v	module:wannier_gw
n_pola_lanczos	wannier_gw.f90	/^  INTEGER :: n_pola_lanczos!/;"	v	module:wannier_gw
n_pola_lanczos_eff	wannier_gw.f90	/^  INTEGER :: n_pola_lanczos_eff!/;"	v	module:wannier_gw
n_proj	input_parameters.f90	/^        INTEGER  :: n_proj /;"	v	module:input_parameters
n_rules	autopilot.f90	/^  INTEGER   :: n_rules /;"	v	module:autopilot
n_scf_steps	control_flags.f90	/^  INTEGER,  PUBLIC :: &$/;"	v	module:control_flags
n_scf_steps	qes_types_module.f90	/^    INTEGER :: n_scf_steps$/;"	k	type:scf_conv_type
n_self_lanczos	wannier_gw.f90	/^  INTEGER :: n_self_lanczos!/;"	v	module:wannier_gw
n_self_lanczos_eff	wannier_gw.f90	/^  INTEGER :: n_self_lanczos_eff!/;"	v	module:wannier_gw
n_semicore	wannier_gw.f90	/^  INTEGER :: n_semicore!/;"	v	module:wannier_gw
n_step	qes_types_module.f90	/^    INTEGER :: n_step$/;"	k	type:step_type
na	ions_base.f90	/^      INTEGER :: na(/;"	v	module:ions_base
na_inp	input_parameters.f90	/^        INTEGER,  ALLOCATABLE :: na_inp(/;"	v	module:input_parameters
name	qeh5_module.f90	/^     CHARACTER(LEN=256)    ::    name /;"	k	type:qeh5_dataset
name	qeh5_module.f90	/^    CHARACTER(LEN=256)    ::   name /;"	k	type:qeh5_file
name	qes_types_module.f90	/^    CHARACTER(len=256) :: name$/;"	k	type:atom_type
name	qes_types_module.f90	/^    CHARACTER(len=256) :: name$/;"	k	type:info_type
name	qes_types_module.f90	/^    CHARACTER(len=256) :: name$/;"	k	type:species_type
name_ispresent	qes_types_module.f90	/^    LOGICAL :: name_ispresent /;"	k	type:info_type
nargs	command_line_options.f90	/^  INTEGER :: nargs /;"	v	module:command_line_options
nat	input_parameters.f90	/^        INTEGER :: nat /;"	v	module:input_parameters
nat	ions_base.f90	/^      INTEGER :: nat /;"	v	module:ions_base
nat	qes_types_module.f90	/^    INTEGER :: nat$/;"	k	type:atomic_structure_type
nat	qes_types_module.f90	/^    INTEGER :: nat$/;"	k	type:equivalent_atoms_type
nat_all	qmmm.f90	/^  INTEGER  :: nat_all$/;"	v	module:qmmm
nat_mm	qmmm.f90	/^  INTEGER  :: nat_mm$/;"	v	module:qmmm
nat_qm	qmmm.f90	/^  INTEGER  :: nat_qm$/;"	v	module:qmmm
nattot	wyckoff.f90	/^INTEGER :: nattot$/;"	v	module:wyckoff
nax	ions_base.f90	/^      INTEGER :: nax /;"	v	module:ions_base
nband_	command_line_options.f90	/^  INTEGER :: nimage_= 1, npool_= 1, ndiag_ = 0, nband_=/;"	v	module:command_line_options
nbeg	control_flags.f90	/^  INTEGER :: nbeg /;"	v	module:control_flags
nberrycyc	input_parameters.f90	/^        INTEGER  :: nberrycyc /;"	v	module:input_parameters
nbeta	pseudo_types.f90	/^     INTEGER :: nbeta /;"	k	type:pseudo_upf
nbetam	uspp.f90	/^       nhm,                  &! max number of different beta functions per atom$/;"	v	module:uspp_param
nbgrp	mp_bands.f90	/^  INTEGER :: nbgrp /;"	v	module:mp_bands
nbgrp	qes_types_module.f90	/^    INTEGER :: nbgrp$/;"	k	type:parallel_info_type
nbnd	becmod.f90	/^     INTEGER :: nbnd$/;"	k	type:bec_type
nbnd	electrons_base.f90	/^      INTEGER :: nbnd /;"	v	module:electrons_base
nbnd	input_parameters.f90	/^        INTEGER :: nbnd /;"	v	module:input_parameters
nbnd	qes_types_module.f90	/^    INTEGER :: nbnd$/;"	k	type:band_structure_type
nbnd	qes_types_module.f90	/^    INTEGER :: nbnd$/;"	k	type:bands_type
nbnd_dw	qes_types_module.f90	/^    INTEGER :: nbnd_dw$/;"	k	type:band_structure_type
nbnd_dw_ispresent	qes_types_module.f90	/^    LOGICAL  :: nbnd_dw_ispresent /;"	k	type:band_structure_type
nbnd_ispresent	qes_types_module.f90	/^    LOGICAL  :: nbnd_ispresent /;"	k	type:band_structure_type
nbnd_ispresent	qes_types_module.f90	/^    LOGICAL  :: nbnd_ispresent /;"	k	type:bands_type
nbnd_loc	becmod.f90	/^     INTEGER :: nbnd_loc$/;"	k	type:bec_type
nbnd_up	qes_types_module.f90	/^    INTEGER :: nbnd_up$/;"	k	type:band_structure_type
nbnd_up_ispresent	qes_types_module.f90	/^    LOGICAL  :: nbnd_up_ispresent /;"	k	type:band_structure_type
nbndx	electrons_base.f90	/^      INTEGER :: nbndx /;"	v	module:electrons_base
nbox	mdiis.f90	/^    INTEGER           :: nbox /;"	k	type:mdiis_type
nbsp	electrons_base.f90	/^      INTEGER :: nbsp /;"	v	module:electrons_base
nbsp_bgrp	electrons_base.f90	/^      INTEGER :: nbsp_bgrp /;"	v	module:electrons_base
nbspx	electrons_base.f90	/^      INTEGER :: nbspx /;"	v	module:electrons_base
nbspx_bgrp	electrons_base.f90	/^      INTEGER :: nbspx_bgrp /;"	v	module:electrons_base
nc	becmod.f90	/^     COMPLEX(DP),ALLOCATABLE :: nc(/;"	k	type:bec_type
nc_fields	input_parameters.f90	/^      INTEGER :: nc_fields /;"	v	module:input_parameters
ncc	funct.f90	/^  integer, parameter:: nxc=8, ncc=/;"	v	module:funct
nchi	pseudo_types.f90	/^     INTEGER, POINTER  :: nchi(/;"	k	type:pseudo_upf
ncnl	funct.f90	/^  integer, parameter:: nxc=8, ncc=10, ngcx=42, ngcc=12, nmeta=6, ncnl=/;"	v	module:funct
nconstr	constraints_module.f90	/^   INTEGER               :: nconstr=/;"	v	module:constraints_module
nconstr_inp	input_parameters.f90	/^      INTEGER  :: nconstr_inp /;"	v	module:input_parameters
nd_nmbr	io_files.f90	/^  CHARACTER(len=6)   :: nd_nmbr /;"	v	module:io_files
ndega	input_parameters.f90	/^        INTEGER   ::  ndega /;"	v	module:input_parameters
ndfrz	ions_base.f90	/^      INTEGER :: ndfrz /;"	v	module:ions_base
ndiag	qes_types_module.f90	/^    INTEGER :: ndiag$/;"	k	type:parallel_info_type
ndiag_	command_line_options.f90	/^  INTEGER :: nimage_= 1, npool_= 1, ndiag_ /;"	v	module:command_line_options
ndim	qes_types_module.f90	/^    INTEGER :: ndim$/;"	k	type:bfgs_type
ndim_Hubbard_J	qes_types_module.f90	/^    INTEGER   :: ndim_Hubbard_J$/;"	k	type:dftU_type
ndim_Hubbard_J0	qes_types_module.f90	/^    INTEGER   :: ndim_Hubbard_J0$/;"	k	type:dftU_type
ndim_Hubbard_U	qes_types_module.f90	/^    INTEGER   :: ndim_Hubbard_U$/;"	k	type:dftU_type
ndim_Hubbard_alpha	qes_types_module.f90	/^    INTEGER   :: ndim_Hubbard_alpha$/;"	k	type:dftU_type
ndim_Hubbard_beta	qes_types_module.f90	/^    INTEGER   :: ndim_Hubbard_beta$/;"	k	type:dftU_type
ndim_Hubbard_ns	qes_types_module.f90	/^    INTEGER   :: ndim_Hubbard_ns$/;"	k	type:dftU_type
ndim_atom	qes_types_module.f90	/^    INTEGER   :: ndim_atom$/;"	k	type:atomic_positions_type
ndim_atom	qes_types_module.f90	/^    INTEGER   :: ndim_atom$/;"	k	type:wyckoff_positions_type
ndim_atomic_constraint	qes_types_module.f90	/^    INTEGER   :: ndim_atomic_constraint$/;"	k	type:atomic_constraints_type
ndim_electronicPolarization	qes_types_module.f90	/^    INTEGER   :: ndim_electronicPolarization$/;"	k	type:BerryPhaseOutput_type
ndim_inputOccupations	qes_types_module.f90	/^    INTEGER   :: ndim_inputOccupations$/;"	k	type:bands_type
ndim_ionicPolarization	qes_types_module.f90	/^    INTEGER   :: ndim_ionicPolarization$/;"	k	type:BerryPhaseOutput_type
ndim_k_point	qes_types_module.f90	/^    INTEGER   :: ndim_k_point$/;"	k	type:k_points_IBZ_type
ndim_ks_energies	qes_types_module.f90	/^    INTEGER   :: ndim_ks_energies$/;"	k	type:band_structure_type
ndim_london_c6	qes_types_module.f90	/^    INTEGER   :: ndim_london_c6$/;"	k	type:vdW_type
ndim_partial	qes_types_module.f90	/^    INTEGER   :: ndim_partial$/;"	k	type:timing_type
ndim_species	qes_types_module.f90	/^    INTEGER   :: ndim_species$/;"	k	type:atomic_species_type
ndim_starting_ns	qes_types_module.f90	/^    INTEGER   :: ndim_starting_ns$/;"	k	type:dftU_type
ndim_step	qes_types_module.f90	/^    INTEGER   :: ndim_step$/;"	k	type:espresso_type
ndim_symmetry	qes_types_module.f90	/^    INTEGER   :: ndim_symmetry$/;"	k	type:symmetries_type
ndmx	radial_grids.f90	/^  integer, parameter :: &$/;"	v	module:radial_grids
ndofp	ions_base.f90	/^      INTEGER :: ndofp /;"	v	module:ions_base
ndr	control_flags.f90	/^  INTEGER :: ndr /;"	v	module:control_flags
ndr	input_parameters.f90	/^        INTEGER :: ndr /;"	v	module:input_parameters
ndw	control_flags.f90	/^  INTEGER :: ndw /;"	v	module:control_flags
ndw	input_parameters.f90	/^        INTEGER :: ndw /;"	v	module:input_parameters
negrp	mp_exx.f90	/^  INTEGER :: negrp /;"	v	module:mp_exx
nel	electrons_base.f90	/^      INTEGER :: nel(/;"	v	module:electrons_base
nelec	qes_types_module.f90	/^    REAL(DP) :: nelec$/;"	k	type:band_structure_type
nelt	electrons_base.f90	/^      INTEGER :: nelt /;"	v	module:electrons_base
neqq	latgen.f90	/^  LOGICAL FUNCTION neqq /;"	f	function:at2ibrav
next	mdiis.f90	/^    INTEGER           :: next /;"	k	type:mdiis_type
nfaces	bz_form.f90	/^    INTEGER :: nfaces /;"	k	type:bz
nfit	qes_types_module.f90	/^    INTEGER :: nfit$/;"	k	type:esm_type
ngcc	funct.f90	/^  integer, parameter:: nxc=8, ncc=10, ngcx=42, ngcc=/;"	v	module:funct
ngcx	funct.f90	/^  integer, parameter:: nxc=8, ncc=10, ngcx=/;"	v	module:funct
ngl	recvec.f90	/^     INTEGER :: ngl /;"	v	module:gvect
ngm	qes_types_module.f90	/^    INTEGER :: ngm$/;"	k	type:basis_set_type
ngm	recvec.f90	/^     INTEGER :: ngm /;"	v	module:gvect
ngm0	control_flags.f90	/^  INTEGER, PUBLIC :: &$/;"	v	module:control_flags
ngm_g	recvec.f90	/^     INTEGER :: ngm_g=/;"	v	module:gvect
ngms	qes_types_module.f90	/^    INTEGER :: ngms$/;"	k	type:basis_set_type
ngms	recvec.f90	/^     INTEGER :: ngms /;"	v	module:gvecs
ngms_g	recvec.f90	/^     INTEGER :: ngms_g=/;"	v	module:gvecs
ngms_ispresent	qes_types_module.f90	/^    LOGICAL  :: ngms_ispresent /;"	k	type:basis_set_type
ngmx	recvec.f90	/^     INTEGER :: ngmx /;"	v	module:gvect
ngsx	recvec.f90	/^     INTEGER :: ngsx /;"	v	module:gvecs
ngw	gvecw.f90	/^     INTEGER :: ngw /;"	v	module:gvecw
ngw_g	gvecw.f90	/^     INTEGER :: ngw_g=/;"	v	module:gvecw
ngwx	gvecw.f90	/^     INTEGER :: ngwx /;"	v	module:gvecw
nh	uspp.f90	/^  INTEGER :: &$/;"	v	module:uspp_param
nhclm	input_parameters.f90	/^        INTEGER, PARAMETER :: nhclm /;"	v	module:input_parameters
nhgrp	input_parameters.f90	/^        INTEGER   ::  nhgrp(/;"	v	module:input_parameters
nhm	uspp.f90	/^       nh(npsx),             &! number of beta functions per atomic type$/;"	v	module:uspp_param
nhpcl	input_parameters.f90	/^        INTEGER   ::  nhpcl /;"	v	module:input_parameters
nhptyp	input_parameters.f90	/^        INTEGER   :: nhptyp /;"	v	module:input_parameters
nhtoj	uspp.f90	/^       qq_at(:,:,:),          &! the integral of q functions in the solid (ONE PER ATOM !!!!) $/;"	v	module:uspp
nhtol	uspp.f90	/^       indv(:,:),        &! indes linking  atomic beta's to beta's in the solid$/;"	v	module:uspp
nhtolm	uspp.f90	/^       nhtol(:,:),       &! correspondence n <-> angular momentum l$/;"	v	module:uspp
nibands	mp_exx.f90	/^  INTEGER, ALLOCATABLE :: nibands(/;"	v	module:mp_exx
nimage	mp_images.f90	/^  INTEGER :: nimage /;"	v	module:mp_images
nimage_	command_line_options.f90	/^  INTEGER :: nimage_=/;"	v	module:command_line_options
ning	wannier_new.f90	/^          INTEGER :: iatom = 0,              &$/;"	k	type:wannier_data
ningx	wannier_new.f90	/^  INTEGER, PARAMETER :: ningx /;"	v	module:wannier_new
nit	input_parameters.f90	/^          INTEGER :: nit$/;"	v	module:input_parameters
niter	control_flags.f90	/^    ngm0,             &! used in mix_rho$/;"	v	module:control_flags
niter_cg_restart	input_parameters.f90	/^        INTEGER :: niter_cg_restart$/;"	v	module:input_parameters
niter_cold_restart	input_parameters.f90	/^        INTEGER :: niter_cold_restart /;"	v	module:input_parameters
nk	qes_types_module.f90	/^    INTEGER :: nk$/;"	k	type:k_points_IBZ_type
nk1	input_parameters.f90	/^        INTEGER :: nkstot = 0, nk1 /;"	v	module:input_parameters
nk1	qes_types_module.f90	/^    INTEGER :: nk1$/;"	k	type:monkhorst_pack_type
nk2	input_parameters.f90	/^        INTEGER :: nkstot = 0, nk1 = 0, nk2 /;"	v	module:input_parameters
nk2	qes_types_module.f90	/^    INTEGER :: nk2$/;"	k	type:monkhorst_pack_type
nk3	input_parameters.f90	/^        INTEGER :: nkstot = 0, nk1 = 0, nk2 = 0, nk3 /;"	v	module:input_parameters
nk3	qes_types_module.f90	/^    INTEGER :: nk3$/;"	k	type:monkhorst_pack_type
nk_ispresent	qes_types_module.f90	/^    LOGICAL  :: nk_ispresent /;"	k	type:k_points_IBZ_type
nk_per_string	qes_types_module.f90	/^    INTEGER :: nk_per_string$/;"	k	type:electric_field_type
nk_per_string_ispresent	qes_types_module.f90	/^    LOGICAL  :: nk_per_string_ispresent /;"	k	type:electric_field_type
nkb	uspp.f90	/^  INTEGER :: nkb,/;"	v	module:uspp
nkbus	uspp.f90	/^  INTEGER :: nkb,        &! total number of beta functions, with struct.fact.$/;"	v	module:uspp
nks	qes_types_module.f90	/^    INTEGER :: nks$/;"	k	type:band_structure_type
nkstot	input_parameters.f90	/^        INTEGER :: nkstot /;"	v	module:input_parameters
nlc	funct.f90	/^subroutine nlc /;"	s	module:funct
nlcc	pseudo_types.f90	/^     LOGICAL :: nlcc /;"	k	type:pseudo_upf
nlcc_any	uspp.f90	/^       okvan = .FALSE.,&  ! if .TRUE. at least one pseudo is Vanderbilt$/;"	v	module:uspp
nlett	bz_form.f90	/^    INTEGER :: nlett /;"	k	type:bz
nlx	uspp.f90	/^  INTEGER, PARAMETER :: &$/;"	v	module:uspp
nmeta	funct.f90	/^  integer, parameter:: nxc=8, ncc=10, ngcx=42, ngcc=12, nmeta=/;"	v	module:funct
nmix	control_flags.f90	/^    niter,            &! the maximum number of iteration$/;"	v	module:control_flags
nn	pseudo_types.f90	/^     INTEGER, POINTER :: nn(/;"	k	type:pseudo_upf
nnode	mp_world.f90	/^  INTEGER :: nnode /;"	v	module:mp_world
nns	pseudo_types.f90	/^     INTEGER,POINTER          :: nns(/;"	k	type:pseudo_config
no_t_rev	input_parameters.f90	/^        LOGICAL  :: no_t_rev /;"	v	module:input_parameters
no_t_rev	qes_types_module.f90	/^    LOGICAL :: no_t_rev$/;"	k	type:symmetry_flags_type
noinv	control_flags.f90	/^  LOGICAL, PUBLIC :: &$/;"	v	module:control_flags
noinv	input_parameters.f90	/^        LOGICAL :: nosym = .true., noinv /;"	v	module:input_parameters
noinv	qes_types_module.f90	/^    LOGICAL :: noinv$/;"	k	type:symmetry_flags_type
nomore	control_flags.f90	/^  INTEGER :: nomore /;"	v	module:control_flags
non_local_term	qes_types_module.f90	/^    CHARACTER(len=256) :: non_local_term$/;"	k	type:vdW_type
non_local_term_ispresent	qes_types_module.f90	/^    LOGICAL  :: non_local_term_ispresent /;"	k	type:vdW_type
noncolin	input_parameters.f90	/^        LOGICAL  :: noncolin /;"	v	module:input_parameters
noncolin	noncol.f90	/^  LOGICAL :: &$/;"	v	module:noncollin_module
noncolin	qes_types_module.f90	/^    LOGICAL :: noncolin$/;"	k	type:band_structure_type
noncolin	qes_types_module.f90	/^    LOGICAL :: noncolin$/;"	k	type:magnetization_type
noncolin	qes_types_module.f90	/^    LOGICAL :: noncolin$/;"	k	type:spin_type
noncollin_module	noncol.f90	/^MODULE noncollin_module$/;"	m
nonlocc	funct.f90	/^  character (len=4) :: exc, corr, gradx, gradc, meta, nonlocc$/;"	v	module:funct
norm	basic_algebra_routines.f90	/^     FUNCTION norm(/;"	f	module:basic_algebra_routines
norm_b	ws_base.f90	/^        b(3,3),  & ! the inverse of a, i.e. the transponse of the fundamental $/;"	k	type:ws_type
normal	bz_form.f90	/^    REAL(DP), ALLOCATABLE :: normal(/;"	k	type:bz
northopool	mp_pools.f90	/^  INTEGER :: northopool /;"	v	module:mp_orthopools
nosym	input_parameters.f90	/^        LOGICAL :: nosym /;"	v	module:input_parameters
nosym	qes_types_module.f90	/^    LOGICAL :: nosym$/;"	k	type:symmetry_flags_type
nosym_evc	input_parameters.f90	/^        LOGICAL :: nosym_evc /;"	v	module:input_parameters
nosym_evc	qes_types_module.f90	/^    LOGICAL :: nosym_evc$/;"	k	type:symmetry_flags_type
notset	funct.f90	/^  integer, parameter:: notset /;"	v	module:funct
np_muller	input_parameters.f90	/^        INTEGER :: np_muller=/;"	v	module:input_parameters
npair	tsvdw.f90	/^INTEGER, DIMENSION(:), ALLOCATABLE, PRIVATE :: npair /;"	v	module:tsvdw_module
npcol	wannier_gw.f90	/^  INTEGER :: npcol!/;"	v	module:wannier_gw
npk	parameters.f90	/^       nsx    = ntypx,  &! max number of atomic species (CP)$/;"	v	module:parameters
npol	noncol.f90	/^  INTEGER :: &$/;"	v	module:noncollin_module
npool	mp_pools.f90	/^  INTEGER :: npool /;"	v	module:mp_pools
npool	qes_types_module.f90	/^    INTEGER :: npool$/;"	k	type:parallel_info_type
npool_	command_line_options.f90	/^  INTEGER :: nimage_= 1, npool_=/;"	v	module:command_line_options
nppstr	input_parameters.f90	/^        INTEGER :: nppstr /;"	v	module:input_parameters
nprnks	input_parameters.f90	/^      INTEGER :: nprnks(/;"	v	module:input_parameters
nproc	becmod.f90	/^     INTEGER :: nproc$/;"	k	type:bec_type
nproc	mp_world.f90	/^  INTEGER :: nproc /;"	v	module:mp_world
nproc_bgrp	mp_bands.f90	/^  INTEGER :: nproc_bgrp /;"	v	module:mp_bands
nproc_bgrp_file	mp_global.f90	/^  INTEGER :: nproc_bgrp_file /;"	v	module:mp_global
nproc_egrp	mp_exx.f90	/^  INTEGER :: nproc_egrp /;"	v	module:mp_exx
nproc_file	mp_global.f90	/^  INTEGER :: nproc_file /;"	v	module:mp_global
nproc_image	mp_images.f90	/^  INTEGER :: nproc_image=/;"	v	module:mp_images
nproc_image_file	mp_global.f90	/^  INTEGER :: nproc_image_file /;"	v	module:mp_global
nproc_ortho_file	mp_global.f90	/^  INTEGER :: nproc_ortho_file /;"	v	module:mp_global
nproc_orthopool	mp_pools.f90	/^  INTEGER :: nproc_orthopool /;"	v	module:mp_orthopools
nproc_pool	mp_pools.f90	/^  INTEGER :: nproc_pool /;"	v	module:mp_pools
nproc_pool_file	mp_global.f90	/^  INTEGER :: nproc_pool_file /;"	v	module:mp_global
nprocs	qes_types_module.f90	/^    INTEGER :: nprocs$/;"	k	type:parallel_info_type
nprow	wannier_gw.f90	/^  INTEGER :: nprow!/;"	v	module:wannier_gw
npsx	parameters.f90	/^       ntypx  = 10,     &! max number of different types of atom$/;"	v	module:parameters
npw	qes_types_module.f90	/^    INTEGER :: npw$/;"	k	type:ks_energies_type
npw_g	hdf5_qe.f90	/^  INTEGER, save ::  off_npw, npw_g,/;"	v	module:hdf5_qe
npwx	qes_types_module.f90	/^    INTEGER :: npwx$/;"	k	type:basis_set_type
npx	bz_form.f90	/^    INTEGER :: npx /;"	k	type:bz
nqf	pseudo_types.f90	/^     INTEGER :: nqf /;"	k	type:pseudo_upf
nqlc	pseudo_types.f90	/^     INTEGER :: nqlc /;"	k	type:pseudo_upf
nqx1	input_parameters.f90	/^        INTEGER  :: nqx1 /;"	v	module:input_parameters
nqx1	qes_types_module.f90	/^    INTEGER :: nqx1$/;"	k	type:qpoint_grid_type
nqx2	input_parameters.f90	/^        INTEGER  :: nqx1 = 0, nqx2 /;"	v	module:input_parameters
nqx2	qes_types_module.f90	/^    INTEGER :: nqx2$/;"	k	type:qpoint_grid_type
nqx3	input_parameters.f90	/^        INTEGER  :: nqx1 = 0, nqx2 = 0, nqx3=/;"	v	module:input_parameters
nqx3	qes_types_module.f90	/^    INTEGER :: nqx3$/;"	k	type:qpoint_grid_type
nr1	input_parameters.f90	/^        INTEGER :: nr1 /;"	v	module:input_parameters
nr1	qes_types_module.f90	/^    INTEGER :: nr1$/;"	k	type:basisSetItem_type
nr1	tsvdw.f90	/^INTEGER, PRIVATE :: nr1,/;"	v	module:tsvdw_module
nr1b	input_parameters.f90	/^        INTEGER :: nr1b /;"	v	module:input_parameters
nr1r	tsvdw.f90	/^INTEGER, PRIVATE :: nr1r,/;"	v	module:tsvdw_module
nr1s	input_parameters.f90	/^        INTEGER :: nr1s /;"	v	module:input_parameters
nr2	input_parameters.f90	/^        INTEGER :: nr2 /;"	v	module:input_parameters
nr2	qes_types_module.f90	/^    INTEGER :: nr2$/;"	k	type:basisSetItem_type
nr2	tsvdw.f90	/^INTEGER, PRIVATE :: nr1,nr2,/;"	v	module:tsvdw_module
nr2b	input_parameters.f90	/^        INTEGER :: nr2b /;"	v	module:input_parameters
nr2r	tsvdw.f90	/^INTEGER, PRIVATE :: nr1r,nr2r,/;"	v	module:tsvdw_module
nr2s	input_parameters.f90	/^        INTEGER :: nr2s /;"	v	module:input_parameters
nr3	input_parameters.f90	/^        INTEGER :: nr3 /;"	v	module:input_parameters
nr3	qes_types_module.f90	/^    INTEGER :: nr3$/;"	k	type:basisSetItem_type
nr3	tsvdw.f90	/^INTEGER, PRIVATE :: nr1,nr2,nr3 /;"	v	module:tsvdw_module
nr3b	input_parameters.f90	/^        INTEGER :: nr3b /;"	v	module:input_parameters
nr3r	tsvdw.f90	/^INTEGER, PRIVATE :: nr1r,nr2r,nr3r /;"	v	module:tsvdw_module
nr3s	input_parameters.f90	/^        INTEGER :: nr3s /;"	v	module:input_parameters
nr_step_length	bfgs_module.f90	/^   REAL(DP) :: &$/;"	v	module:bfgs_module
nr_step_length_old	bfgs_module.f90	/^      nr_step_length,    &! length of (new) Newton-Raphson step$/;"	v	module:bfgs_module
nraise	input_parameters.f90	/^        INTEGER :: nraise /;"	v	module:input_parameters
nraise	qes_types_module.f90	/^    INTEGER :: nraise$/;"	k	type:md_type
nrot	qes_types_module.f90	/^    INTEGER :: nrot$/;"	k	type:symmetries_type
nscdm	input_parameters.f90	/^        INTEGER  :: nscdm /;"	v	module:input_parameters
nsd	input_parameters.f90	/^          INTEGER :: nsd$/;"	v	module:input_parameters
nset	wannier_gw.f90	/^  INTEGER :: nset!/;"	v	module:wannier_gw
nset_overlap	wannier_gw.f90	/^  INTEGER :: nset_overlap!/;"	v	module:wannier_gw
nsp	ions_base.f90	/^      INTEGER :: nsp /;"	v	module:ions_base
nspace	wannier_gw.f90	/^  INTEGER :: nspace!/;"	v	module:wannier_gw
nspin	electrons_base.f90	/^      INTEGER :: nspin /;"	v	module:electrons_base
nspin	input_parameters.f90	/^        INTEGER :: nspin /;"	v	module:input_parameters
nspin_gga	noncol.f90	/^      nspin_mag = 1,      & !  =1 when nspin=1,4 (domag=.false.), =2 when$/;"	v	module:noncollin_module
nspin_lsda	noncol.f90	/^      report,             & !  print the local quantities (magnet. and rho)$/;"	v	module:noncollin_module
nspin_mag	noncol.f90	/^      nspin_lsda = 1,     & !  =1 when nspin=1,4 =2 when nspin=2 $/;"	v	module:noncollin_module
nspinx	input_parameters.f90	/^        INTEGER, PARAMETER :: nspinx=/;"	v	module:input_parameters
nstates	tsvdw.f90	/^INTEGER, DIMENSION(:), ALLOCATABLE, PRIVATE :: nstates /;"	v	module:tsvdw_module
nstep	control_flags.f90	/^     INTEGER  :: nstep$/;"	k	type:convergence_criteria
nstep	control_flags.f90	/^  INTEGER, PUBLIC :: &$/;"	v	module:control_flags
nstep	input_parameters.f90	/^        INTEGER :: nstep /;"	v	module:input_parameters
nstep	qes_types_module.f90	/^    INTEGER :: nstep$/;"	k	type:control_variables_type
nstep_ispresent	qes_types_module.f90	/^    LOGICAL  :: nstep_ispresent /;"	k	type:control_variables_type
nstepe	control_flags.f90	/^  INTEGER :: nstepe /;"	v	module:control_flags
nsteps	input_parameters.f90	/^          INTEGER :: nsteps$/;"	v	module:input_parameters
nsteps_lanczos	wannier_gw.f90	/^  INTEGER :: nsteps_lanczos!/;"	v	module:wannier_gw
nsteps_lanczos_pola	wannier_gw.f90	/^  INTEGER :: nsteps_lanczos_pola!/;"	v	module:wannier_gw
nsteps_lanczos_self	wannier_gw.f90	/^  INTEGER :: nsteps_lanczos_self!/;"	v	module:wannier_gw
nsx	parameters.f90	/^       npsx   = ntypx,  &! max number of different PPs (obsolete)$/;"	v	module:parameters
nsym	qes_types_module.f90	/^    INTEGER :: nsym$/;"	k	type:symmetries_type
ntask_groups	mp_bands.f90	/^  INTEGER :: ntask_groups /;"	v	module:mp_bands
ntask_groups	mp_exx.f90	/^  INTEGER :: ntask_groups /;"	v	module:mp_exx
ntask_groups_file	mp_global.f90	/^  INTEGER :: ntask_groups_file=/;"	v	module:mp_global
ntasks	qes_types_module.f90	/^    INTEGER :: ntasks$/;"	k	type:parallel_info_type
ntg_	command_line_options.f90	/^  INTEGER :: nimage_= 1, npool_= 1, ndiag_ = 0, nband_= 1, ntg_=/;"	v	module:command_line_options
nthreads	qes_types_module.f90	/^    INTEGER :: nthreads$/;"	k	type:parallel_info_type
ntyp	input_parameters.f90	/^        INTEGER :: ntyp /;"	v	module:input_parameters
ntyp	qes_types_module.f90	/^    INTEGER :: ntyp$/;"	k	type:atomic_species_type
ntypes	qmmm.f90	/^  INTEGER  :: ntypes$/;"	v	module:qmmm
ntypx	parameters.f90	/^  INTEGER, PARAMETER :: &$/;"	v	module:parameters
nudx	electrons_base.f90	/^      INTEGER :: nudx /;"	v	module:electrons_base
nudx_bgrp	electrons_base.f90	/^      INTEGER :: nudx_bgrp /;"	v	module:electrons_base
nullify_paw_in_upf	pseudo_types.f90	/^  SUBROUTINE nullify_paw_in_upf(/;"	s	module:pseudo_types
nullify_pseudo_upf	pseudo_types.f90	/^  SUBROUTINE nullify_pseudo_upf(/;"	s	module:pseudo_types
nullify_radial_grid	radial_grids.f90	/^      subroutine nullify_radial_grid(/;"	s	module:radial_grids
num_determinant	coulomb_vcut.f90	/^function num_determinant(/;"	f	module:coulomb_vcut_module
num_inverse	coulomb_vcut.f90	/^function num_inverse(/;"	f	module:coulomb_vcut_module
num_nbnds	wannier_gw.f90	/^  INTEGER :: num_nbnds /;"	v	module:wannier_gw
num_nbndv	wannier_gw.f90	/^  INTEGER :: num_nbndv(/;"	v	module:wannier_gw
num_nbndv_min	wannier_gw.f90	/^  INTEGER :: num_nbndv_min(/;"	v	module:wannier_gw
num_of_atomic_wfc	qes_types_module.f90	/^    INTEGER :: num_of_atomic_wfc$/;"	k	type:band_structure_type
num_of_atomic_wfc_ispresent	qes_types_module.f90	/^    LOGICAL  :: num_of_atomic_wfc_ispresent /;"	k	type:band_structure_type
num_of_constraints	qes_types_module.f90	/^    INTEGER :: num_of_constraints$/;"	k	type:atomic_constraints_type
nump_lanczos	wannier_gw.f90	/^  INTEGER :: nump_lanczos!/;"	v	module:wannier_gw
nums_lanczos	wannier_gw.f90	/^  INTEGER :: nums_lanczos!/;"	v	module:wannier_gw
numw_prod	wannier_gw.f90	/^  INTEGER :: numw_prod!/;"	v	module:wannier_gw
nupdwn	electrons_base.f90	/^      INTEGER :: nupdwn(/;"	v	module:electrons_base
nupdwn_bgrp	electrons_base.f90	/^      INTEGER :: nupdwn_bgrp(/;"	v	module:electrons_base
nv	pseudo_types.f90	/^     CHARACTER(len=11) :: nv /;"	k	type:pseudo_upf
nvb	uspp.f90	/^  INTEGER :: &$/;"	v	module:uspp_param
nvec	mdiis.f90	/^    INTEGER           :: nvec /;"	k	type:mdiis_type
nvertices	bz_form.f90	/^    INTEGER :: nvertices /;"	k	type:bz
nwan	input_parameters.f90	/^          INTEGER :: &$/;"	v	module:input_parameters
nwan	wannier_new.f90	/^  INTEGER :: &$/;"	v	module:wannier_new
nwanx	input_parameters.f90	/^          INTEGER, PARAMETER :: nwanx /;"	v	module:input_parameters
nwf	input_parameters.f90	/^          INTEGER :: nwf$/;"	v	module:input_parameters
nwf_max	input_parameters.f90	/^      INTEGER, PARAMETER :: nwf_max /;"	v	module:input_parameters
nwfc	pseudo_types.f90	/^     INTEGER :: nwfc /;"	k	type:pseudo_upf
nwfs	pseudo_types.f90	/^     INTEGER :: nwfs$/;"	k	type:pseudo_config
nwordatwfc	io_files.f90	/^  INTEGER :: nwordatwfc /;"	v	module:io_files
nwordwann	io_files.f90	/^  INTEGER :: nwordwann /;"	v	module:io_files
nwordwf	io_files.f90	/^  INTEGER :: nwordwf /;"	v	module:io_files
nwordwfc	io_files.f90	/^  INTEGER :: nwordwfc /;"	v	module:io_files
nwordwfcU	io_files.f90	/^  INTEGER :: nwordwfcU /;"	v	module:io_files
nwordwpp	io_files.f90	/^  INTEGER :: nwordwpp /;"	v	module:io_files
nx	paw_variables.f90	/^        INTEGER          :: nx /;"	k	type:paw_radial_integrator
nxc	funct.f90	/^  integer, parameter:: nxc=/;"	v	module:funct
nyfft	mp_bands.f90	/^  INTEGER :: nyfft /;"	v	module:mp_bands
nyfft_	command_line_options.f90	/^  INTEGER :: nimage_= 1, npool_= 1, ndiag_ = 0, nband_= 1, ntg_= 1, nyfft_ /;"	v	module:command_line_options
nyfft_file	mp_global.f90	/^  INTEGER :: nyfft_file=/;"	v	module:mp_global
oc	pseudo_types.f90	/^     REAL(DP), POINTER :: oc(/;"	k	type:pseudo_upf
oc	pseudo_types.f90	/^     REAL(DP),POINTER :: oc(/;"	k	type:paw_in_upf
occmass	input_parameters.f90	/^        REAL(DP) :: occmass /;"	v	module:input_parameters
occs	read_cards.f90	/^         INTEGER, POINTER :: occs(/;"	k	type:occupancy_type
occupancy_type	read_cards.f90	/^      TYPE occupancy_type$/;"	t	subroutine:card_ksout
occupation_constraints	input_parameters.f90	/^        LOGICAL :: occupation_constraints /;"	v	module:input_parameters
occupation_damping	input_parameters.f90	/^        REAL(DP) :: occupation_damping /;"	v	module:input_parameters
occupation_dynamics	input_parameters.f90	/^        CHARACTER(len=80) :: occupation_dynamics /;"	v	module:input_parameters
occupations	input_parameters.f90	/^        CHARACTER(len=80) :: occupations /;"	v	module:input_parameters
occupations	qes_types_module.f90	/^    CHARACTER(len=256) :: occupations$/;"	k	type:occupations_type
occupations	qes_types_module.f90	/^    TYPE(occupations_/;"	k	type:bands_type
occupations	qes_types_module.f90	/^    TYPE(vector_type) :: occupations$/;"	k	type:ks_energies_type
occupations_kind	qes_types_module.f90	/^    TYPE(occupations_type) :: occupations_kind$/;"	k	type:band_structure_type
occupations_type	qes_types_module.f90	/^  TYPE :: occupations_type$/;"	t	module:qes_types_module
ocs	pseudo_types.f90	/^     REAL(DP),POINTER         :: ocs(/;"	k	type:pseudo_config
off_fast_pmat	wannier_gw.f90	/^  REAL(kind=DP) :: off_fast_pmat!/;"	v	module:wannier_gw
off_npw	hdf5_qe.f90	/^  INTEGER, save ::  off_npw,/;"	v	module:hdf5_qe
offset	hdf5_qe.f90	/^   INTEGER(HSIZE_T), DIMENSION(2) :: counts, counts_g, offset$/;"	k	type:HDF5_type
offset	qeh5_module.f90	/^     INTEGER(HSIZE_T),ALLOCATABLE  ::  offset(/;"	k	type:qeh5_dataspace
okpaw	paw_variables.f90	/^    LOGICAL :: &$/;"	v	module:paw_variables
okvan	uspp.f90	/^  LOGICAL :: &$/;"	v	module:uspp
omega	bz_form.f90	/^    REAL(DP) :: omega /;"	k	type:bz
omega	cell_base.f90	/^          REAL(DP) :: omega /;"	k	type:boxdimensions
omega	cell_base.f90	/^    REAl(DP) :: omega /;"	v	module:cell_base
omega_gauss	wannier_gw.f90	/^  REAL(kind=DP) :: omega_gauss!/;"	v	module:wannier_gw
one_atom_occupations	input_parameters.f90	/^        LOGICAL :: one_atom_occupations=/;"	v	module:input_parameters
only_paw	paw_variables.f90	/^    LOGICAL  :: only_paw$/;"	v	module:paw_variables
open_close_input_file	open_close_input_file.f90	/^MODULE open_close_input_file$/;"	m
open_input_file	open_close_input_file.f90	/^  INTEGER FUNCTION open_input_file /;"	f	module:open_close_input_file
open_socket	fsockets.f90	/^   SUBROUTINE open_socket(/;"	s	module:F90SOCKETS
opening_message	environment.f90	/^  SUBROUTINE opening_message(/;"	s	module:environment
opt_conv	qes_types_module.f90	/^    TYPE(opt_conv_/;"	k	type:convergence_info_type
opt_conv_ispresent	qes_types_module.f90	/^    LOGICAL  :: opt_conv_ispresent /;"	k	type:convergence_info_type
opt_conv_type	qes_types_module.f90	/^  TYPE :: opt_conv_type$/;"	t	module:qes_types_module
optimal_options	wannier_gw.f90	/^  TYPE optimal_options!/;"	t	module:wannier_gw
optx	functionals.f90	/^subroutine optx(/;"	s
order	qes_types_module.f90	/^    CHARACTER(len=256) :: order$/;"	k	type:Hubbard_ns_type
order	qes_types_module.f90	/^    CHARACTER(len=256) :: order$/;"	k	type:integerMatrix_type
order	qes_types_module.f90	/^    CHARACTER(len=256) :: order$/;"	k	type:matrix_type
origin_choice	input_parameters.f90	/^        INTEGER :: origin_choice /;"	v	module:input_parameters
ortho_eps	control_flags.f90	/^  REAL(DP) :: ortho_eps /;"	v	module:control_flags
ortho_eps	input_parameters.f90	/^        REAL(DP) :: ortho_eps /;"	v	module:input_parameters
ortho_max	control_flags.f90	/^  INTEGER  :: ortho_max /;"	v	module:control_flags
ortho_max	input_parameters.f90	/^        INTEGER   :: ortho_max /;"	v	module:input_parameters
orthogonalization	input_parameters.f90	/^        CHARACTER(len=80) :: orthogonalization /;"	v	module:input_parameters
orthorombic	coulomb_vcut.f90	/^      LOGICAL           :: orthorombic$/;"	k	type:vcut_type
ounit	qexsd.f90	/^  INTEGER          :: iunit, ounit$/;"	v	module:qexsd_module
outdir	input_parameters.f90	/^        CHARACTER(len=256) :: outdir /;"	v	module:input_parameters
outdir	qes_types_module.f90	/^    CHARACTER(len=256) :: outdir$/;"	k	type:control_variables_type
output	qes_types_module.f90	/^    TYPE(output_/;"	k	type:espresso_type
outputElectricField_type	qes_types_module.f90	/^  TYPE :: outputElectricField_type$/;"	t	module:qes_types_module
outputPBC_type	qes_types_module.f90	/^  TYPE :: outputPBC_type$/;"	t	module:qes_types_module
output_drho	io_files.f90	/^  CHARACTER(LEN=256) :: output_drho /;"	v	module:io_files
output_ispresent	qes_types_module.f90	/^    LOGICAL  :: output_ispresent /;"	k	type:espresso_type
output_type	qes_types_module.f90	/^  TYPE :: output_type$/;"	t	module:qes_types_module
p	wannier_gw.f90	/^     COMPLEX(kind=DP), DIMENSION(:,:), POINTER :: p$/;"	k	type:complex_matrix_pointer
p	wannier_gw.f90	/^     REAL(kind=DP), DIMENSION(:,:), POINTER :: p$/;"	k	type:real_matrix_pointer
p_mpime	wannier_gw.f90	/^  INTEGER :: p_mpime!/;"	v	module:wannier_gw
p_nproc	wannier_gw.f90	/^  INTEGER :: p_nproc!/;"	v	module:wannier_gw
padefit	lsda_functionals.f90	/^   subroutine padefit(/;"	s	subroutine:vwn1_rpa_spin
padefit	lsda_functionals.f90	/^   subroutine padefit(/;"	s	subroutine:vwn_spin
pail	cell_base.f90	/^          REAL(DP) :: pail(/;"	k	type:boxdimensions
pair	tsvdw.f90	/^INTEGER, DIMENSION(:,:), ALLOCATABLE, PRIVATE :: pair /;"	v	module:tsvdw_module
paiu	cell_base.f90	/^          REAL(DP) :: paiu(/;"	k	type:boxdimensions
parallel_info	environment.f90	/^  SUBROUTINE parallel_info /;"	s	module:environment
parallel_info	qes_types_module.f90	/^    TYPE(parallel_info_/;"	k	type:espresso_type
parallel_info	qexsd.f90	/^  TYPE (parallel_info_/;"	v	module:qexsd_module
parallel_info_ispresent	qes_types_module.f90	/^    LOGICAL  :: parallel_info_ispresent /;"	k	type:espresso_type
parallel_info_type	qes_types_module.f90	/^  TYPE :: parallel_info_type$/;"	t	module:qes_types_module
parameters	parameters.f90	/^MODULE parameters$/;"	m
parse_mailbox	autopilot.f90	/^  SUBROUTINE parse_mailbox /;"	s	module:autopilot
parse_unit	parser.f90	/^  INTEGER :: parse_unit /;"	v	module:parser
parser	parser.f90	/^MODULE parser$/;"	m
partial	qes_types_module.f90	/^    TYPE(clock_type), DIMENSION(:), ALLOCATABLE :: partial$/;"	k	type:timing_type
partial_ispresent	qes_types_module.f90	/^    LOGICAL  :: partial_ispresent /;"	k	type:timing_type
passop	input_parameters.f90	/^        REAL(DP) :: passop /;"	v	module:input_parameters
pause_p	autopilot.f90	/^  LOGICAL   :: pause_p /;"	v	module:autopilot
paw	pseudo_types.f90	/^     TYPE(paw_/;"	k	type:pseudo_upf
paw	qes_types_module.f90	/^    LOGICAL :: paw$/;"	k	type:algorithmic_info_type
paw_as_gipaw	pseudo_types.f90	/^     LOGICAL  :: paw_as_gipaw /;"	k	type:pseudo_upf
paw_data_format	pseudo_types.f90	/^     INTEGER :: paw_data_format /;"	k	type:pseudo_upf
paw_in_upf	pseudo_types.f90	/^  TYPE paw_in_upf$/;"	t	module:pseudo_types
paw_info	paw_variables.f90	/^    TYPE paw_info$/;"	t	module:paw_variables
paw_is_init	paw_variables.f90	/^    LOGICAL              :: paw_is_init /;"	v	module:paw_variables
paw_radial_integrator	paw_variables.f90	/^    TYPE paw_radial_integrator$/;"	t	module:paw_variables
paw_variables	paw_variables.f90	/^MODULE paw_variables$/;"	m
pbc	cell_base.f90	/^      FUNCTION pbc(/;"	f	module:cell_base
pbc	constraints_module.f90	/^   FUNCTION pbc(/;"	f	module:constraints_module
pbcs_components	cell_base.f90	/^      SUBROUTINE pbcs_components(/;"	s	module:cell_base
pbcs_vectors	cell_base.f90	/^      SUBROUTINE pbcs_vectors(/;"	s	module:cell_base
pbe_gauscheme	functionals.f90	/^      SUBROUTINE pbe_gauscheme(/;"	s
pbec	functionals.f90	/^subroutine pbec /;"	s
pbec_spin	lsda_functionals.f90	/^subroutine pbec_spin /;"	s
pbex	functionals.f90	/^subroutine pbex /;"	s
pbex_m06l	metagga.f90	/^subroutine pbex_m06l /;"	s
pbex_vec	functionals.f90	/^subroutine pbex_vec /;"	s
pbexgau	functionals.f90	/^      SUBROUTINE pbexgau(/;"	s
pbexgau_lsd	functionals.f90	/^      SUBROUTINE pbexgau_lsd(/;"	s
pbexsr	functionals.f90	/^      SUBROUTINE pbexsr(/;"	s
pbexsr_lsd	functionals.f90	/^      SUBROUTINE pbexsr_lsd(/;"	s
perd	cell_base.f90	/^          INTEGER :: perd(/;"	k	type:boxdimensions
perdew86	functionals.f90	/^subroutine perdew86 /;"	s
perdew86_spin	lsda_functionals.f90	/^subroutine perdew86_spin /;"	s
pfunc	pseudo_types.f90	/^     REAL(DP),POINTER :: pfunc(/;"	k	type:paw_in_upf
pfunc_rel	pseudo_types.f90	/^     REAL(DP),POINTER :: pfunc(:,:,:),&! Psi_i(r)*Psi_j(r)$/;"	k	type:paw_in_upf
phase	qes_types_module.f90	/^    REAL(DP) :: phase$/;"	k	type:phase_type
phase	qes_types_module.f90	/^    TYPE(phase_/;"	k	type:electronicPolarization_type
phase	qes_types_module.f90	/^    TYPE(phase_/;"	k	type:ionicPolarization_type
phase_type	qes_types_module.f90	/^  TYPE :: phase_type$/;"	t	module:qes_types_module
phi_bgrp	wavefunctions.f90	/^     COMPLEX(DP), ALLOCATABLE :: phi_bgrp(/;"	v	module:wavefunctions
pi	constants.f90	/^  REAL(DP), PARAMETER :: pi /;"	v	module:constants
pilot_p	autopilot.f90	/^  LOGICAL   :: pilot_p /;"	v	module:autopilot
pilot_type	autopilot.f90	/^  CHARACTER(LEN=256) :: pilot_type$/;"	v	module:autopilot
pilot_unit	autopilot.f90	/^  INTEGER   :: pilot_unit /;"	v	module:autopilot
pippo	hdf5_qe.f90	/^integer  :: pippo$/;"	v	module:hdf5_qe
planar_average	generate_function.f90	/^      SUBROUTINE planar_average(/;"	s	module:generate_function
plist_id	hdf5_qe.f90	/^   INTEGER(HID_T) :: plist_id /;"	k	type:HDF5_type
plot_io	plot_io.f90	/^subroutine plot_io /;"	s
plot_wan_num	input_parameters.f90	/^               nwan,          &! number of wannier functions$/;"	v	module:input_parameters
plot_wan_num	wannier_new.f90	/^     nwan,                     &! number of wannier functions$/;"	v	module:wannier_new
plot_wan_spin	input_parameters.f90	/^               plot_wan_num = 0,  &! number of wannier for plotting$/;"	v	module:input_parameters
plot_wan_spin	wannier_new.f90	/^     plot_wan_num,             &! number of wannier for plotting  $/;"	v	module:wannier_new
plot_wannier	input_parameters.f90	/^          LOGICAL :: &$/;"	v	module:input_parameters
plot_wannier	wannier_new.f90	/^     rkmesh,                   &! if .TRUE. regular k-mesh without symmetry is used !now used in input_parameters_mod$/;"	v	module:wannier_new
plugin_arguments	plugin_arguments.f90	/^SUBROUTINE plugin_arguments(/;"	s
plugin_arguments_bcast	plugin_arguments.f90	/^  SUBROUTINE plugin_arguments_bcast(/;"	s
plugin_etot	plugin_variables.f90	/^  REAL(DP) :: plugin_etot$/;"	v	module:plugin_variables
plugin_flags	plugin_flags.f90	/^MODULE plugin_flags$/;"	m
plugin_name	plugin_flags.f90	/^  CHARACTER(LEN=256), PUBLIC :: plugin_name$/;"	v	module:plugin_flags
plugin_variables	plugin_variables.f90	/^MODULE plugin_variables$/;"	m
pmat_cutoff	wannier_gw.f90	/^  REAL(kind=DP) :: pmat_cutoff!/;"	v	module:wannier_gw
pmat_ethr	wannier_gw.f90	/^  REAL(kind=DP) :: pmat_ethr!/;"	v	module:wannier_gw
pmat_type	wannier_gw.f90	/^  INTEGER :: pmat_type!/;"	v	module:wannier_gw
point_label_type	input_parameters.f90	/^        CHARACTER(len=10) :: point_label_type=/;"	v	module:input_parameters
pointlist	noncol.f90	/^  INTEGER, ALLOCATABLE :: &$/;"	v	module:noncollin_module
polarization	qes_types_module.f90	/^    TYPE(scalarQuantity_type) :: polarization$/;"	k	type:polarization_type
polarization_type	qes_types_module.f90	/^  TYPE :: polarization_type$/;"	t	module:qes_types_module
pos	bfgs_module.f90	/^   REAL(DP), ALLOCATABLE :: &$/;"	v	module:bfgs_module
pos_best	bfgs_module.f90	/^      grad_old(:,:),     &! list of m old gradients - used only by gdiis$/;"	v	module:bfgs_module
pos_old	bfgs_module.f90	/^      step_old(:),       &! the previous search direction (normalized NR step)$/;"	v	module:bfgs_module
pos_p	bfgs_module.f90	/^      grad(:),           &! gradients + cell_force$/;"	v	module:bfgs_module
position	qes_types_module.f90	/^    CHARACTER(len=256) :: position$/;"	k	type:atom_type
position_ispresent	qes_types_module.f90	/^    LOGICAL :: position_ispresent /;"	k	type:atom_type
postfix	io_files.f90	/^  CHARACTER(len=6) :: postfix /;"	v	module:io_files
pot_extrapolation	input_parameters.f90	/^        CHARACTER(len=80) :: pot_extrapolation /;"	v	module:input_parameters
pot_extrapolation	qes_types_module.f90	/^    CHARACTER(len=256) :: pot_extrapolation$/;"	k	type:md_type
pot_prefactor	qes_types_module.f90	/^    REAL(DP) :: pot_prefactor$/;"	k	type:gateInfo_type
potentialAmp	qes_types_module.f90	/^    TYPE(scalarQuantity_type) :: potentialAmp$/;"	k	type:dipoleOutput_type
potential_decrease_width	qes_types_module.f90	/^    REAL(DP) :: potential_decrease_width$/;"	k	type:electric_field_type
potential_decrease_width_ispresent	qes_types_module.f90	/^    LOGICAL  :: potential_decrease_width_ispresent /;"	k	type:electric_field_type
potential_max_position	qes_types_module.f90	/^    REAL(DP) :: potential_max_position$/;"	k	type:electric_field_type
potential_max_position_ispresent	qes_types_module.f90	/^    LOGICAL  :: potential_max_position_ispresent /;"	k	type:electric_field_type
potentiostat_contr	qes_types_module.f90	/^    REAL(DP) :: potentiostat_contr$/;"	k	type:total_energy_type
potentiostat_contr_ispresent	qes_types_module.f90	/^    LOGICAL  :: potentiostat_contr_ispresent /;"	k	type:total_energy_type
pp	wannier_new.f90	/^  COMPLEX(kind=DP), allocatable :: &$/;"	v	module:wannier_new
pp_format	read_pseudo.f90	/^INTEGER FUNCTION pp_format /;"	f	module:read_pseudo_mod
predveffAdn	tsvdw.f90	/^REAL(DP), DIMENSION(:), ALLOCATABLE, PRIVATE:: predveffAdn /;"	v	module:tsvdw_module
prefix	input_parameters.f90	/^        CHARACTER(len=256) :: prefix /;"	v	module:input_parameters
prefix	io_files.f90	/^  CHARACTER(len=256) :: prefix /;"	v	module:io_files
prefix	qes_types_module.f90	/^    CHARACTER(len=256) :: prefix$/;"	k	type:control_variables_type
prepare_dataspace	qeh5_module.f90	/^  SUBROUTINE prepare_dataspace(/;"	s	module:qeh5_base_module
prepare_for_reading_final	hdf5_qe.f90	/^  subroutine prepare_for_reading_final(/;"	s	module:hdf5_qe
prepare_for_writing_final	hdf5_qe.f90	/^  subroutine prepare_for_writing_final(/;"	s	module:hdf5_qe
prepare_index_hdf5	hdf5_qe.f90	/^  SUBROUTINE prepare_index_hdf5(/;"	s	module:hdf5_qe
press	cell_base.f90	/^        REAL(DP) :: press /;"	v	module:cell_base
press	input_parameters.f90	/^        REAL(DP) :: press /;"	v	module:input_parameters
press_ai	input_parameters.f90	/^      NAMELIST \/ press_ai /;"	n	module:input_parameters
press_ai_bcast	read_namelists.f90	/^     SUBROUTINE press_ai_bcast(/;"	s	module:read_namelists_module
press_ai_defaults	read_namelists.f90	/^     SUBROUTINE press_ai_defaults(/;"	s	module:read_namelists_module
press_conv_thr	input_parameters.f90	/^        REAL(DP) :: press_conv_thr /;"	v	module:input_parameters
press_conv_thr	qes_types_module.f90	/^    REAL(DP) :: press_conv_thr$/;"	k	type:control_variables_type
pressure	qes_types_module.f90	/^    REAL(DP) :: pressure$/;"	k	type:cell_control_type
print_every	qes_types_module.f90	/^    INTEGER :: print_every$/;"	k	type:control_variables_type
print_kind_info	kind.f90	/^      SUBROUTINE print_kind_info /;"	s	module:kinds
print_wannier_coeff	input_parameters.f90	/^               use_energy_int = .false., &$/;"	v	module:input_parameters
print_wannier_coeff	wannier_new.f90	/^     use_energy_int,           &! if .TRUE. uses energy interval for wannier generation, not band numbers   $/;"	v	module:wannier_new
psd	pseudo_types.f90	/^     CHARACTER(LEN=2) :: psd=/;"	k	type:pseudo_upf
pseud	pseudo_types.f90	/^     CHARACTER(len=32)        :: pseud$/;"	k	type:pseudo_config
pseudo_config	pseudo_types.f90	/^  TYPE pseudo_config$/;"	t	module:pseudo_types
pseudo_dir	input_parameters.f90	/^        CHARACTER(len=256) :: pseudo_dir /;"	v	module:input_parameters
pseudo_dir	io_files.f90	/^  CHARACTER(len=256) :: pseudo_dir /;"	v	module:io_files
pseudo_dir	qes_types_module.f90	/^    CHARACTER(len=256) :: pseudo_dir$/;"	k	type:atomic_species_type
pseudo_dir	qes_types_module.f90	/^    CHARACTER(len=256) :: pseudo_dir$/;"	k	type:control_variables_type
pseudo_dir_cur	io_files.f90	/^  CHARACTER(len=256) :: pseudo_dir_cur /;"	v	module:io_files
pseudo_dir_ispresent	qes_types_module.f90	/^    LOGICAL :: pseudo_dir_ispresent /;"	k	type:atomic_species_type
pseudo_file	qes_types_module.f90	/^    CHARACTER(len=256) :: pseudo_file$/;"	k	type:species_type
pseudo_types	pseudo_types.f90	/^MODULE pseudo_types$/;"	m
pseudo_upf	pseudo_types.f90	/^  TYPE pseudo_upf$/;"	t	module:pseudo_types
psfile	io_files.f90	/^  CHARACTER(len=256) :: psfile(/;"	v	module:io_files
psic	wavefunctions.f90	/^     COMPLEX(DP) , ALLOCATABLE, TARGET :: &$/;"	v	module:wavefunctions
psic_nc	wavefunctions.f90	/^       psic(:), &      ! additional memory for FFT$/;"	v	module:wavefunctions
pstickdealloc	fft_base.f90	/^      SUBROUTINE pstickdealloc(/;"	s	module:fft_base
pswfc	pseudo_types.f90	/^     REAL(DP), POINTER :: pswfc(/;"	k	type:pseudo_upf
ptfunc	pseudo_types.f90	/^          pfunc_rel(:,:,:), & ! Psi_i(r)*Psi_j(r) small component$/;"	k	type:paw_in_upf
pvar	input_parameters.f90	/^      LOGICAL  :: pvar /;"	v	module:input_parameters
pw	functionals.f90	/^subroutine pw /;"	s
pw_dot	pw_dot.f90	/^SUBROUTINE pw_dot(/;"	s
pw_spin	lsda_functionals.f90	/^subroutine pw_spin /;"	s
pw_spin_vec	lsda_functionals.f90	/^subroutine pw_spin_vec /;"	s
pwcorr	functionals.f90	/^subroutine pwcorr(/;"	s
pwlda	more_functionals.f90	/^      subroutine pwlda(/;"	s
pwlsd	more_functionals.f90	/^      subroutine pwlsd(/;"	s
pwscatter	mp_wave.f90	/^   SUBROUTINE pwscatter(/;"	s	module:mp_wave
pz	functionals.f90	/^subroutine pz /;"	s
pzKZK	functionals.f90	/^subroutine pzKZK /;"	s
pz_polarized	lsda_functionals.f90	/^subroutine pz_polarized /;"	s
pz_spin	lsda_functionals.f90	/^subroutine pz_spin /;"	s
q2sigma	gvecw.f90	/^     REAL(DP) :: q2sigma=/;"	v	module:gvecw
q2sigma	input_parameters.f90	/^        REAL(DP) :: ecfixed = 0.0_DP, qcutz = 0.0_DP, q2sigma /;"	v	module:input_parameters
q2sigma	qes_types_module.f90	/^    REAL(DP) :: q2sigma$/;"	k	type:ekin_functional_type
q_cut	kernel_table.f90	/^  real(dp) :: r_max, q_cut,/;"	v	module:kernel_table
q_mesh	kernel_table.f90	/^  real(dp), allocatable :: q_mesh(/;"	v	module:kernel_table
q_min	kernel_table.f90	/^  real(dp) :: r_max, q_cut, q_min,/;"	v	module:kernel_table
q_with_l	pseudo_types.f90	/^     LOGICAL :: q_with_l /;"	k	type:pseudo_upf
qbac	electrons_base.f90	/^      REAL(DP) :: qbac /;"	v	module:electrons_base
qcutz	gvecw.f90	/^     REAL(DP) :: qcutz /;"	v	module:gvecw
qcutz	input_parameters.f90	/^        REAL(DP) :: ecfixed = 0.0_DP, qcutz /;"	v	module:input_parameters
qcutz	qes_types_module.f90	/^    REAL(DP) :: qcutz$/;"	k	type:ekin_functional_type
qe_erf	erf.f90	/^function qe_erf /;"	f
qe_erfc	erf.f90	/^function qe_erfc /;"	f
qeh5_base_module	qeh5_module.f90	/^MODULE qeh5_base_module$/;"	m
qeh5_closefile	qeh5_module.f90	/^  SUBROUTINE qeh5_closefile /;"	s	module:qeh5_base_module
qeh5_dataset	qeh5_module.f90	/^  TYPE qeh5_dataset$/;"	t	module:qeh5_base_module
qeh5_dataspace	qeh5_module.f90	/^  TYPE qeh5_dataspace /;"	t	module:qeh5_base_module
qeh5_datatype	qeh5_module.f90	/^  TYPE qeh5_datatype /;"	t	module:qeh5_base_module
qeh5_file	qeh5_module.f90	/^  TYPE qeh5_file /;"	t	module:qeh5_base_module
qeh5_hid	qeh5_module.f90	/^  TYPE qeh5_hid$/;"	t	module:qeh5_base_module
qeh5_open_dataset	qeh5_module.f90	/^  SUBROUTINE qeh5_open_dataset /;"	s	module:qeh5_base_module
qeh5_open_group	qeh5_module.f90	/^  SUBROUTINE qeh5_open_group(/;"	s	module:qeh5_base_module
qeh5_openfile	qeh5_module.f90	/^  SUBROUTINE  qeh5_openfile(/;"	s	module:qeh5_base_module
qeh5_read_complex	qeh5_module.f90	/^  SUBROUTINE qeh5_read_complex /;"	s	module:qeh5_base_module
qeh5_read_complex_2	qeh5_module.f90	/^  SUBROUTINE qeh5_read_complex_2 /;"	s	module:qeh5_base_module
qeh5_read_complex_3	qeh5_module.f90	/^  SUBROUTINE qeh5_read_complex_3 /;"	s	module:qeh5_base_module
qeh5_read_integer	qeh5_module.f90	/^  SUBROUTINE qeh5_read_integer /;"	s	module:qeh5_base_module
qeh5_read_integer_2	qeh5_module.f90	/^  SUBROUTINE qeh5_read_integer_2 /;"	s	module:qeh5_base_module
qeh5_read_integer_3	qeh5_module.f90	/^  SUBROUTINE qeh5_read_integer_3 /;"	s	module:qeh5_base_module
qeh5_read_real	qeh5_module.f90	/^  SUBROUTINE qeh5_read_real /;"	s	module:qeh5_base_module
qeh5_read_real_2	qeh5_module.f90	/^  SUBROUTINE qeh5_read_real_2 /;"	s	module:qeh5_base_module
qeh5_read_real_3	qeh5_module.f90	/^  SUBROUTINE qeh5_read_real_3 /;"	s	module:qeh5_base_module
qeh5_set_file_hyperslab	qeh5_module.f90	/^     SUBROUTINE qeh5_set_file_hyperslab /;"	s	module:qeh5_base_module
qeh5_set_memory_hyperslab	qeh5_module.f90	/^  SUBROUTINE qeh5_set_memory_hyperslab /;"	s	module:qeh5_base_module
qeh5_wplan_complex	qeh5_module.f90	/^  SUBROUTINE qeh5_wplan_complex /;"	s	module:qeh5_base_module
qeh5_wplan_integer	qeh5_module.f90	/^  SUBROUTINE qeh5_wplan_integer /;"	s	module:qeh5_base_module
qeh5_wplan_real	qeh5_module.f90	/^  SUBROUTINE qeh5_wplan_real(/;"	s	module:qeh5_base_module
qeh5_write_complex	qeh5_module.f90	/^  SUBROUTINE qeh5_write_complex(/;"	s	module:qeh5_base_module
qeh5_write_complex_2	qeh5_module.f90	/^  SUBROUTINE qeh5_write_complex_2(/;"	s	module:qeh5_base_module
qeh5_write_complex_3	qeh5_module.f90	/^  SUBROUTINE qeh5_write_complex_3(/;"	s	module:qeh5_base_module
qeh5_write_integer	qeh5_module.f90	/^  SUBROUTINE qeh5_write_integer(/;"	s	module:qeh5_base_module
qeh5_write_integer_2	qeh5_module.f90	/^  SUBROUTINE qeh5_write_integer_2(/;"	s	module:qeh5_base_module
qeh5_write_integer_3	qeh5_module.f90	/^  SUBROUTINE qeh5_write_integer_3(/;"	s	module:qeh5_base_module
qeh5_write_real	qeh5_module.f90	/^  SUBROUTINE qeh5_write_real(/;"	s	module:qeh5_base_module
qeh5_write_real_2	qeh5_module.f90	/^  SUBROUTINE qeh5_write_real_2(/;"	s	module:qeh5_base_module
qeh5_write_real_3	qeh5_module.f90	/^  SUBROUTINE qeh5_write_real_3(/;"	s	module:qeh5_base_module
qes_bcast_BerryPhaseOutput	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_BerryPhaseOutput(/;"	s	module:qes_bcast_module
qes_bcast_HubbardCommon	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_HubbardCommon(/;"	s	module:qes_bcast_module
qes_bcast_HubbardJ	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_HubbardJ(/;"	s	module:qes_bcast_module
qes_bcast_Hubbard_ns	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_Hubbard_ns(/;"	s	module:qes_bcast_module
qes_bcast_algorithmic_info	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_algorithmic_info(/;"	s	module:qes_bcast_module
qes_bcast_atom	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_atom(/;"	s	module:qes_bcast_module
qes_bcast_atomic_constraint	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_atomic_constraint(/;"	s	module:qes_bcast_module
qes_bcast_atomic_constraints	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_atomic_constraints(/;"	s	module:qes_bcast_module
qes_bcast_atomic_positions	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_atomic_positions(/;"	s	module:qes_bcast_module
qes_bcast_atomic_species	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_atomic_species(/;"	s	module:qes_bcast_module
qes_bcast_atomic_structure	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_atomic_structure(/;"	s	module:qes_bcast_module
qes_bcast_band_structure	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_band_structure(/;"	s	module:qes_bcast_module
qes_bcast_bands	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_bands(/;"	s	module:qes_bcast_module
qes_bcast_basis	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_basis(/;"	s	module:qes_bcast_module
qes_bcast_basisSetItem	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_basisSetItem(/;"	s	module:qes_bcast_module
qes_bcast_basis_set	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_basis_set(/;"	s	module:qes_bcast_module
qes_bcast_bfgs	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_bfgs(/;"	s	module:qes_bcast_module
qes_bcast_boundary_conditions	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_boundary_conditions(/;"	s	module:qes_bcast_module
qes_bcast_cell	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_cell(/;"	s	module:qes_bcast_module
qes_bcast_cell_control	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_cell_control(/;"	s	module:qes_bcast_module
qes_bcast_clock	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_clock(/;"	s	module:qes_bcast_module
qes_bcast_closed	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_closed(/;"	s	module:qes_bcast_module
qes_bcast_control_variables	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_control_variables(/;"	s	module:qes_bcast_module
qes_bcast_convergence_info	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_convergence_info(/;"	s	module:qes_bcast_module
qes_bcast_created	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_created(/;"	s	module:qes_bcast_module
qes_bcast_creator	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_creator(/;"	s	module:qes_bcast_module
qes_bcast_dft	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_dft(/;"	s	module:qes_bcast_module
qes_bcast_dftU	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_dftU(/;"	s	module:qes_bcast_module
qes_bcast_dipoleOutput	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_dipoleOutput(/;"	s	module:qes_bcast_module
qes_bcast_ekin_functional	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_ekin_functional(/;"	s	module:qes_bcast_module
qes_bcast_electric_field	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_electric_field(/;"	s	module:qes_bcast_module
qes_bcast_electron_control	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_electron_control(/;"	s	module:qes_bcast_module
qes_bcast_electronicPolarization	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_electronicPolarization(/;"	s	module:qes_bcast_module
qes_bcast_equivalent_atoms	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_equivalent_atoms(/;"	s	module:qes_bcast_module
qes_bcast_esm	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_esm(/;"	s	module:qes_bcast_module
qes_bcast_espresso	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_espresso(/;"	s	module:qes_bcast_module
qes_bcast_finiteFieldOut	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_finiteFieldOut(/;"	s	module:qes_bcast_module
qes_bcast_gateInfo	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_gateInfo(/;"	s	module:qes_bcast_module
qes_bcast_gate_settings	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_gate_settings(/;"	s	module:qes_bcast_module
qes_bcast_general_info	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_general_info(/;"	s	module:qes_bcast_module
qes_bcast_hybrid	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_hybrid(/;"	s	module:qes_bcast_module
qes_bcast_info	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_info(/;"	s	module:qes_bcast_module
qes_bcast_input	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_input(/;"	s	module:qes_bcast_module
qes_bcast_inputOccupations	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_inputOccupations(/;"	s	module:qes_bcast_module
qes_bcast_integerMatrix	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_integerMatrix(/;"	s	module:qes_bcast_module
qes_bcast_integerVector	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_integerVector(/;"	s	module:qes_bcast_module
qes_bcast_ion_control	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_ion_control(/;"	s	module:qes_bcast_module
qes_bcast_ionicPolarization	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_ionicPolarization(/;"	s	module:qes_bcast_module
qes_bcast_k_point	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_k_point(/;"	s	module:qes_bcast_module
qes_bcast_k_points_IBZ	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_k_points_IBZ(/;"	s	module:qes_bcast_module
qes_bcast_ks_energies	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_ks_energies(/;"	s	module:qes_bcast_module
qes_bcast_magnetization	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_magnetization(/;"	s	module:qes_bcast_module
qes_bcast_matrix	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_matrix(/;"	s	module:qes_bcast_module
qes_bcast_md	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_md(/;"	s	module:qes_bcast_module
qes_bcast_module	qes_bcast_module.f90	/^MODULE qes_bcast_module$/;"	m
qes_bcast_monkhorst_pack	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_monkhorst_pack(/;"	s	module:qes_bcast_module
qes_bcast_occupations	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_occupations(/;"	s	module:qes_bcast_module
qes_bcast_opt_conv	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_opt_conv(/;"	s	module:qes_bcast_module
qes_bcast_output	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_output(/;"	s	module:qes_bcast_module
qes_bcast_outputElectricField	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_outputElectricField(/;"	s	module:qes_bcast_module
qes_bcast_outputPBC	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_outputPBC(/;"	s	module:qes_bcast_module
qes_bcast_parallel_info	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_parallel_info(/;"	s	module:qes_bcast_module
qes_bcast_phase	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_phase(/;"	s	module:qes_bcast_module
qes_bcast_polarization	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_polarization(/;"	s	module:qes_bcast_module
qes_bcast_qpoint_grid	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_qpoint_grid(/;"	s	module:qes_bcast_module
qes_bcast_reciprocal_lattice	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_reciprocal_lattice(/;"	s	module:qes_bcast_module
qes_bcast_scalarQuantity	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_scalarQuantity(/;"	s	module:qes_bcast_module
qes_bcast_scf_conv	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_scf_conv(/;"	s	module:qes_bcast_module
qes_bcast_smearing	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_smearing(/;"	s	module:qes_bcast_module
qes_bcast_species	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_species(/;"	s	module:qes_bcast_module
qes_bcast_spin	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_spin(/;"	s	module:qes_bcast_module
qes_bcast_spin_constraints	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_spin_constraints(/;"	s	module:qes_bcast_module
qes_bcast_starting_ns	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_starting_ns(/;"	s	module:qes_bcast_module
qes_bcast_step	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_step(/;"	s	module:qes_bcast_module
qes_bcast_symmetries	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_symmetries(/;"	s	module:qes_bcast_module
qes_bcast_symmetry	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_symmetry(/;"	s	module:qes_bcast_module
qes_bcast_symmetry_flags	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_symmetry_flags(/;"	s	module:qes_bcast_module
qes_bcast_timing	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_timing(/;"	s	module:qes_bcast_module
qes_bcast_total_energy	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_total_energy(/;"	s	module:qes_bcast_module
qes_bcast_vdW	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_vdW(/;"	s	module:qes_bcast_module
qes_bcast_vector	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_vector(/;"	s	module:qes_bcast_module
qes_bcast_wyckoff_positions	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_wyckoff_positions(/;"	s	module:qes_bcast_module
qes_bcast_xml_format	qes_bcast_module.f90	/^  SUBROUTINE qes_bcast_xml_format(/;"	s	module:qes_bcast_module
qes_init_BerryPhaseOutput	qes_init_module.f90	/^  SUBROUTINE qes_init_BerryPhaseOutput(/;"	s	module:qes_init_module
qes_init_HubbardCommon	qes_init_module.f90	/^  SUBROUTINE qes_init_HubbardCommon(/;"	s	module:qes_init_module
qes_init_HubbardJ	qes_init_module.f90	/^  SUBROUTINE qes_init_HubbardJ(/;"	s	module:qes_init_module
qes_init_Hubbard_ns	qes_init_module.f90	/^  SUBROUTINE qes_init_Hubbard_ns(/;"	s	module:qes_init_module
qes_init_algorithmic_info	qes_init_module.f90	/^  SUBROUTINE qes_init_algorithmic_info(/;"	s	module:qes_init_module
qes_init_atom	qes_init_module.f90	/^  SUBROUTINE qes_init_atom(/;"	s	module:qes_init_module
qes_init_atomic_constraint	qes_init_module.f90	/^  SUBROUTINE qes_init_atomic_constraint(/;"	s	module:qes_init_module
qes_init_atomic_constraints	qes_init_module.f90	/^  SUBROUTINE qes_init_atomic_constraints(/;"	s	module:qes_init_module
qes_init_atomic_positions	qes_init_module.f90	/^  SUBROUTINE qes_init_atomic_positions(/;"	s	module:qes_init_module
qes_init_atomic_species	qes_init_module.f90	/^  SUBROUTINE qes_init_atomic_species(/;"	s	module:qes_init_module
qes_init_atomic_structure	qes_init_module.f90	/^  SUBROUTINE qes_init_atomic_structure(/;"	s	module:qes_init_module
qes_init_band_structure	qes_init_module.f90	/^  SUBROUTINE qes_init_band_structure(/;"	s	module:qes_init_module
qes_init_bands	qes_init_module.f90	/^  SUBROUTINE qes_init_bands(/;"	s	module:qes_init_module
qes_init_basis	qes_init_module.f90	/^  SUBROUTINE qes_init_basis(/;"	s	module:qes_init_module
qes_init_basisSetItem	qes_init_module.f90	/^  SUBROUTINE qes_init_basisSetItem(/;"	s	module:qes_init_module
qes_init_basis_set	qes_init_module.f90	/^  SUBROUTINE qes_init_basis_set(/;"	s	module:qes_init_module
qes_init_bfgs	qes_init_module.f90	/^  SUBROUTINE qes_init_bfgs(/;"	s	module:qes_init_module
qes_init_boundary_conditions	qes_init_module.f90	/^  SUBROUTINE qes_init_boundary_conditions(/;"	s	module:qes_init_module
qes_init_cell	qes_init_module.f90	/^  SUBROUTINE qes_init_cell(/;"	s	module:qes_init_module
qes_init_cell_control	qes_init_module.f90	/^  SUBROUTINE qes_init_cell_control(/;"	s	module:qes_init_module
qes_init_clock	qes_init_module.f90	/^  SUBROUTINE qes_init_clock(/;"	s	module:qes_init_module
qes_init_closed	qes_init_module.f90	/^  SUBROUTINE qes_init_closed(/;"	s	module:qes_init_module
qes_init_control_variables	qes_init_module.f90	/^  SUBROUTINE qes_init_control_variables(/;"	s	module:qes_init_module
qes_init_convergence_info	qes_init_module.f90	/^  SUBROUTINE qes_init_convergence_info(/;"	s	module:qes_init_module
qes_init_created	qes_init_module.f90	/^  SUBROUTINE qes_init_created(/;"	s	module:qes_init_module
qes_init_creator	qes_init_module.f90	/^  SUBROUTINE qes_init_creator(/;"	s	module:qes_init_module
qes_init_dft	qes_init_module.f90	/^  SUBROUTINE qes_init_dft(/;"	s	module:qes_init_module
qes_init_dftU	qes_init_module.f90	/^  SUBROUTINE qes_init_dftU(/;"	s	module:qes_init_module
qes_init_dipoleOutput	qes_init_module.f90	/^  SUBROUTINE qes_init_dipoleOutput(/;"	s	module:qes_init_module
qes_init_ekin_functional	qes_init_module.f90	/^  SUBROUTINE qes_init_ekin_functional(/;"	s	module:qes_init_module
qes_init_electric_field	qes_init_module.f90	/^  SUBROUTINE qes_init_electric_field(/;"	s	module:qes_init_module
qes_init_electron_control	qes_init_module.f90	/^  SUBROUTINE qes_init_electron_control(/;"	s	module:qes_init_module
qes_init_electronicPolarization	qes_init_module.f90	/^  SUBROUTINE qes_init_electronicPolarization(/;"	s	module:qes_init_module
qes_init_equivalent_atoms	qes_init_module.f90	/^  SUBROUTINE qes_init_equivalent_atoms(/;"	s	module:qes_init_module
qes_init_esm	qes_init_module.f90	/^  SUBROUTINE qes_init_esm(/;"	s	module:qes_init_module
qes_init_espresso	qes_init_module.f90	/^  SUBROUTINE qes_init_espresso(/;"	s	module:qes_init_module
qes_init_finiteFieldOut	qes_init_module.f90	/^  SUBROUTINE qes_init_finiteFieldOut(/;"	s	module:qes_init_module
qes_init_gateInfo	qes_init_module.f90	/^  SUBROUTINE qes_init_gateInfo(/;"	s	module:qes_init_module
qes_init_gate_settings	qes_init_module.f90	/^  SUBROUTINE qes_init_gate_settings(/;"	s	module:qes_init_module
qes_init_general_info	qes_init_module.f90	/^  SUBROUTINE qes_init_general_info(/;"	s	module:qes_init_module
qes_init_hybrid	qes_init_module.f90	/^  SUBROUTINE qes_init_hybrid(/;"	s	module:qes_init_module
qes_init_info	qes_init_module.f90	/^  SUBROUTINE qes_init_info(/;"	s	module:qes_init_module
qes_init_input	qes_init_module.f90	/^  SUBROUTINE qes_init_input(/;"	s	module:qes_init_module
qes_init_inputOccupations	qes_init_module.f90	/^  SUBROUTINE qes_init_inputOccupations(/;"	s	module:qes_init_module
qes_init_integerMatrix_1	qes_init_module.f90	/^  SUBROUTINE qes_init_integerMatrix_1(/;"	s	module:qes_init_module
qes_init_integerMatrix_2	qes_init_module.f90	/^  SUBROUTINE qes_init_integerMatrix_2(/;"	s	module:qes_init_module
qes_init_integerMatrix_3	qes_init_module.f90	/^  SUBROUTINE qes_init_integerMatrix_3(/;"	s	module:qes_init_module
qes_init_integerVector	qes_init_module.f90	/^  SUBROUTINE qes_init_integerVector(/;"	s	module:qes_init_module
qes_init_ion_control	qes_init_module.f90	/^  SUBROUTINE qes_init_ion_control(/;"	s	module:qes_init_module
qes_init_ionicPolarization	qes_init_module.f90	/^  SUBROUTINE qes_init_ionicPolarization(/;"	s	module:qes_init_module
qes_init_k_point	qes_init_module.f90	/^  SUBROUTINE qes_init_k_point(/;"	s	module:qes_init_module
qes_init_k_points_IBZ	qes_init_module.f90	/^  SUBROUTINE qes_init_k_points_IBZ(/;"	s	module:qes_init_module
qes_init_ks_energies	qes_init_module.f90	/^  SUBROUTINE qes_init_ks_energies(/;"	s	module:qes_init_module
qes_init_magnetization	qes_init_module.f90	/^  SUBROUTINE qes_init_magnetization(/;"	s	module:qes_init_module
qes_init_matrix_1	qes_init_module.f90	/^  SUBROUTINE qes_init_matrix_1(/;"	s	module:qes_init_module
qes_init_matrix_2	qes_init_module.f90	/^  SUBROUTINE qes_init_matrix_2(/;"	s	module:qes_init_module
qes_init_matrix_3	qes_init_module.f90	/^  SUBROUTINE qes_init_matrix_3(/;"	s	module:qes_init_module
qes_init_md	qes_init_module.f90	/^  SUBROUTINE qes_init_md(/;"	s	module:qes_init_module
qes_init_module	qes_init_module.f90	/^MODULE qes_init_module$/;"	m
qes_init_monkhorst_pack	qes_init_module.f90	/^  SUBROUTINE qes_init_monkhorst_pack(/;"	s	module:qes_init_module
qes_init_occupations	qes_init_module.f90	/^  SUBROUTINE qes_init_occupations(/;"	s	module:qes_init_module
qes_init_opt_conv	qes_init_module.f90	/^  SUBROUTINE qes_init_opt_conv(/;"	s	module:qes_init_module
qes_init_output	qes_init_module.f90	/^  SUBROUTINE qes_init_output(/;"	s	module:qes_init_module
qes_init_outputElectricField	qes_init_module.f90	/^  SUBROUTINE qes_init_outputElectricField(/;"	s	module:qes_init_module
qes_init_outputPBC	qes_init_module.f90	/^  SUBROUTINE qes_init_outputPBC(/;"	s	module:qes_init_module
qes_init_parallel_info	qes_init_module.f90	/^  SUBROUTINE qes_init_parallel_info(/;"	s	module:qes_init_module
qes_init_phase	qes_init_module.f90	/^  SUBROUTINE qes_init_phase(/;"	s	module:qes_init_module
qes_init_polarization	qes_init_module.f90	/^  SUBROUTINE qes_init_polarization(/;"	s	module:qes_init_module
qes_init_qpoint_grid	qes_init_module.f90	/^  SUBROUTINE qes_init_qpoint_grid(/;"	s	module:qes_init_module
qes_init_reciprocal_lattice	qes_init_module.f90	/^  SUBROUTINE qes_init_reciprocal_lattice(/;"	s	module:qes_init_module
qes_init_scalarQuantity	qes_init_module.f90	/^  SUBROUTINE qes_init_scalarQuantity(/;"	s	module:qes_init_module
qes_init_scf_conv	qes_init_module.f90	/^  SUBROUTINE qes_init_scf_conv(/;"	s	module:qes_init_module
qes_init_smearing	qes_init_module.f90	/^  SUBROUTINE qes_init_smearing(/;"	s	module:qes_init_module
qes_init_species	qes_init_module.f90	/^  SUBROUTINE qes_init_species(/;"	s	module:qes_init_module
qes_init_spin	qes_init_module.f90	/^  SUBROUTINE qes_init_spin(/;"	s	module:qes_init_module
qes_init_spin_constraints	qes_init_module.f90	/^  SUBROUTINE qes_init_spin_constraints(/;"	s	module:qes_init_module
qes_init_starting_ns	qes_init_module.f90	/^  SUBROUTINE qes_init_starting_ns(/;"	s	module:qes_init_module
qes_init_step	qes_init_module.f90	/^  SUBROUTINE qes_init_step(/;"	s	module:qes_init_module
qes_init_symmetries	qes_init_module.f90	/^  SUBROUTINE qes_init_symmetries(/;"	s	module:qes_init_module
qes_init_symmetry	qes_init_module.f90	/^  SUBROUTINE qes_init_symmetry(/;"	s	module:qes_init_module
qes_init_symmetry_flags	qes_init_module.f90	/^  SUBROUTINE qes_init_symmetry_flags(/;"	s	module:qes_init_module
qes_init_timing	qes_init_module.f90	/^  SUBROUTINE qes_init_timing(/;"	s	module:qes_init_module
qes_init_total_energy	qes_init_module.f90	/^  SUBROUTINE qes_init_total_energy(/;"	s	module:qes_init_module
qes_init_vdW	qes_init_module.f90	/^  SUBROUTINE qes_init_vdW(/;"	s	module:qes_init_module
qes_init_vector	qes_init_module.f90	/^  SUBROUTINE qes_init_vector(/;"	s	module:qes_init_module
qes_init_wyckoff_positions	qes_init_module.f90	/^  SUBROUTINE qes_init_wyckoff_positions(/;"	s	module:qes_init_module
qes_init_xml_format	qes_init_module.f90	/^  SUBROUTINE qes_init_xml_format(/;"	s	module:qes_init_module
qes_libs_module	qes_libs_module.f90	/^MODULE qes_libs_module$/;"	m
qes_read_BerryPhaseOutput	qes_read_module.f90	/^  SUBROUTINE qes_read_BerryPhaseOutput(/;"	s	module:qes_read_module
qes_read_HubbardCommon	qes_read_module.f90	/^  SUBROUTINE qes_read_HubbardCommon(/;"	s	module:qes_read_module
qes_read_HubbardJ	qes_read_module.f90	/^  SUBROUTINE qes_read_HubbardJ(/;"	s	module:qes_read_module
qes_read_Hubbard_ns	qes_read_module.f90	/^  SUBROUTINE qes_read_Hubbard_ns(/;"	s	module:qes_read_module
qes_read_algorithmic_info	qes_read_module.f90	/^  SUBROUTINE qes_read_algorithmic_info(/;"	s	module:qes_read_module
qes_read_atom	qes_read_module.f90	/^  SUBROUTINE qes_read_atom(/;"	s	module:qes_read_module
qes_read_atomic_constraint	qes_read_module.f90	/^  SUBROUTINE qes_read_atomic_constraint(/;"	s	module:qes_read_module
qes_read_atomic_constraints	qes_read_module.f90	/^  SUBROUTINE qes_read_atomic_constraints(/;"	s	module:qes_read_module
qes_read_atomic_positions	qes_read_module.f90	/^  SUBROUTINE qes_read_atomic_positions(/;"	s	module:qes_read_module
qes_read_atomic_species	qes_read_module.f90	/^  SUBROUTINE qes_read_atomic_species(/;"	s	module:qes_read_module
qes_read_atomic_structure	qes_read_module.f90	/^  SUBROUTINE qes_read_atomic_structure(/;"	s	module:qes_read_module
qes_read_band_structure	qes_read_module.f90	/^  SUBROUTINE qes_read_band_structure(/;"	s	module:qes_read_module
qes_read_bands	qes_read_module.f90	/^  SUBROUTINE qes_read_bands(/;"	s	module:qes_read_module
qes_read_basis	qes_read_module.f90	/^  SUBROUTINE qes_read_basis(/;"	s	module:qes_read_module
qes_read_basisSetItem	qes_read_module.f90	/^  SUBROUTINE qes_read_basisSetItem(/;"	s	module:qes_read_module
qes_read_basis_set	qes_read_module.f90	/^  SUBROUTINE qes_read_basis_set(/;"	s	module:qes_read_module
qes_read_bfgs	qes_read_module.f90	/^  SUBROUTINE qes_read_bfgs(/;"	s	module:qes_read_module
qes_read_boundary_conditions	qes_read_module.f90	/^  SUBROUTINE qes_read_boundary_conditions(/;"	s	module:qes_read_module
qes_read_cell	qes_read_module.f90	/^  SUBROUTINE qes_read_cell(/;"	s	module:qes_read_module
qes_read_cell_control	qes_read_module.f90	/^  SUBROUTINE qes_read_cell_control(/;"	s	module:qes_read_module
qes_read_clock	qes_read_module.f90	/^  SUBROUTINE qes_read_clock(/;"	s	module:qes_read_module
qes_read_closed	qes_read_module.f90	/^  SUBROUTINE qes_read_closed(/;"	s	module:qes_read_module
qes_read_control_variables	qes_read_module.f90	/^  SUBROUTINE qes_read_control_variables(/;"	s	module:qes_read_module
qes_read_convergence_info	qes_read_module.f90	/^  SUBROUTINE qes_read_convergence_info(/;"	s	module:qes_read_module
qes_read_created	qes_read_module.f90	/^  SUBROUTINE qes_read_created(/;"	s	module:qes_read_module
qes_read_creator	qes_read_module.f90	/^  SUBROUTINE qes_read_creator(/;"	s	module:qes_read_module
qes_read_dft	qes_read_module.f90	/^  SUBROUTINE qes_read_dft(/;"	s	module:qes_read_module
qes_read_dftU	qes_read_module.f90	/^  SUBROUTINE qes_read_dftU(/;"	s	module:qes_read_module
qes_read_dipoleOutput	qes_read_module.f90	/^  SUBROUTINE qes_read_dipoleOutput(/;"	s	module:qes_read_module
qes_read_ekin_functional	qes_read_module.f90	/^  SUBROUTINE qes_read_ekin_functional(/;"	s	module:qes_read_module
qes_read_electric_field	qes_read_module.f90	/^  SUBROUTINE qes_read_electric_field(/;"	s	module:qes_read_module
qes_read_electron_control	qes_read_module.f90	/^  SUBROUTINE qes_read_electron_control(/;"	s	module:qes_read_module
qes_read_electronicPolarization	qes_read_module.f90	/^  SUBROUTINE qes_read_electronicPolarization(/;"	s	module:qes_read_module
qes_read_equivalent_atoms	qes_read_module.f90	/^  SUBROUTINE qes_read_equivalent_atoms(/;"	s	module:qes_read_module
qes_read_esm	qes_read_module.f90	/^  SUBROUTINE qes_read_esm(/;"	s	module:qes_read_module
qes_read_espresso	qes_read_module.f90	/^  SUBROUTINE qes_read_espresso(/;"	s	module:qes_read_module
qes_read_finiteFieldOut	qes_read_module.f90	/^  SUBROUTINE qes_read_finiteFieldOut(/;"	s	module:qes_read_module
qes_read_gateInfo	qes_read_module.f90	/^  SUBROUTINE qes_read_gateInfo(/;"	s	module:qes_read_module
qes_read_gate_settings	qes_read_module.f90	/^  SUBROUTINE qes_read_gate_settings(/;"	s	module:qes_read_module
qes_read_general_info	qes_read_module.f90	/^  SUBROUTINE qes_read_general_info(/;"	s	module:qes_read_module
qes_read_hybrid	qes_read_module.f90	/^  SUBROUTINE qes_read_hybrid(/;"	s	module:qes_read_module
qes_read_info	qes_read_module.f90	/^  SUBROUTINE qes_read_info(/;"	s	module:qes_read_module
qes_read_input	qes_read_module.f90	/^  SUBROUTINE qes_read_input(/;"	s	module:qes_read_module
qes_read_inputOccupations	qes_read_module.f90	/^  SUBROUTINE qes_read_inputOccupations(/;"	s	module:qes_read_module
qes_read_integerMatrix	qes_read_module.f90	/^  SUBROUTINE qes_read_integerMatrix(/;"	s	module:qes_read_module
qes_read_integerVector	qes_read_module.f90	/^  SUBROUTINE qes_read_integerVector(/;"	s	module:qes_read_module
qes_read_ion_control	qes_read_module.f90	/^  SUBROUTINE qes_read_ion_control(/;"	s	module:qes_read_module
qes_read_ionicPolarization	qes_read_module.f90	/^  SUBROUTINE qes_read_ionicPolarization(/;"	s	module:qes_read_module
qes_read_k_point	qes_read_module.f90	/^  SUBROUTINE qes_read_k_point(/;"	s	module:qes_read_module
qes_read_k_points_IBZ	qes_read_module.f90	/^  SUBROUTINE qes_read_k_points_IBZ(/;"	s	module:qes_read_module
qes_read_ks_energies	qes_read_module.f90	/^  SUBROUTINE qes_read_ks_energies(/;"	s	module:qes_read_module
qes_read_magnetization	qes_read_module.f90	/^  SUBROUTINE qes_read_magnetization(/;"	s	module:qes_read_module
qes_read_matrix	qes_read_module.f90	/^  SUBROUTINE qes_read_matrix(/;"	s	module:qes_read_module
qes_read_md	qes_read_module.f90	/^  SUBROUTINE qes_read_md(/;"	s	module:qes_read_module
qes_read_module	qes_read_module.f90	/^MODULE qes_read_module$/;"	m
qes_read_monkhorst_pack	qes_read_module.f90	/^  SUBROUTINE qes_read_monkhorst_pack(/;"	s	module:qes_read_module
qes_read_occupations	qes_read_module.f90	/^  SUBROUTINE qes_read_occupations(/;"	s	module:qes_read_module
qes_read_opt_conv	qes_read_module.f90	/^  SUBROUTINE qes_read_opt_conv(/;"	s	module:qes_read_module
qes_read_output	qes_read_module.f90	/^  SUBROUTINE qes_read_output(/;"	s	module:qes_read_module
qes_read_outputElectricField	qes_read_module.f90	/^  SUBROUTINE qes_read_outputElectricField(/;"	s	module:qes_read_module
qes_read_outputPBC	qes_read_module.f90	/^  SUBROUTINE qes_read_outputPBC(/;"	s	module:qes_read_module
qes_read_parallel_info	qes_read_module.f90	/^  SUBROUTINE qes_read_parallel_info(/;"	s	module:qes_read_module
qes_read_phase	qes_read_module.f90	/^  SUBROUTINE qes_read_phase(/;"	s	module:qes_read_module
qes_read_polarization	qes_read_module.f90	/^  SUBROUTINE qes_read_polarization(/;"	s	module:qes_read_module
qes_read_qpoint_grid	qes_read_module.f90	/^  SUBROUTINE qes_read_qpoint_grid(/;"	s	module:qes_read_module
qes_read_reciprocal_lattice	qes_read_module.f90	/^  SUBROUTINE qes_read_reciprocal_lattice(/;"	s	module:qes_read_module
qes_read_scalarQuantity	qes_read_module.f90	/^  SUBROUTINE qes_read_scalarQuantity(/;"	s	module:qes_read_module
qes_read_scf_conv	qes_read_module.f90	/^  SUBROUTINE qes_read_scf_conv(/;"	s	module:qes_read_module
qes_read_smearing	qes_read_module.f90	/^  SUBROUTINE qes_read_smearing(/;"	s	module:qes_read_module
qes_read_species	qes_read_module.f90	/^  SUBROUTINE qes_read_species(/;"	s	module:qes_read_module
qes_read_spin	qes_read_module.f90	/^  SUBROUTINE qes_read_spin(/;"	s	module:qes_read_module
qes_read_spin_constraints	qes_read_module.f90	/^  SUBROUTINE qes_read_spin_constraints(/;"	s	module:qes_read_module
qes_read_starting_ns	qes_read_module.f90	/^  SUBROUTINE qes_read_starting_ns(/;"	s	module:qes_read_module
qes_read_step	qes_read_module.f90	/^  SUBROUTINE qes_read_step(/;"	s	module:qes_read_module
qes_read_symmetries	qes_read_module.f90	/^  SUBROUTINE qes_read_symmetries(/;"	s	module:qes_read_module
qes_read_symmetry	qes_read_module.f90	/^  SUBROUTINE qes_read_symmetry(/;"	s	module:qes_read_module
qes_read_symmetry_flags	qes_read_module.f90	/^  SUBROUTINE qes_read_symmetry_flags(/;"	s	module:qes_read_module
qes_read_timing	qes_read_module.f90	/^  SUBROUTINE qes_read_timing(/;"	s	module:qes_read_module
qes_read_total_energy	qes_read_module.f90	/^  SUBROUTINE qes_read_total_energy(/;"	s	module:qes_read_module
qes_read_vdW	qes_read_module.f90	/^  SUBROUTINE qes_read_vdW(/;"	s	module:qes_read_module
qes_read_vector	qes_read_module.f90	/^  SUBROUTINE qes_read_vector(/;"	s	module:qes_read_module
qes_read_wyckoff_positions	qes_read_module.f90	/^  SUBROUTINE qes_read_wyckoff_positions(/;"	s	module:qes_read_module
qes_read_xml_format	qes_read_module.f90	/^  SUBROUTINE qes_read_xml_format(/;"	s	module:qes_read_module
qes_reset_BerryPhaseOutput	qes_reset_module.f90	/^  SUBROUTINE qes_reset_BerryPhaseOutput(/;"	s	module:qes_reset_module
qes_reset_HubbardCommon	qes_reset_module.f90	/^  SUBROUTINE qes_reset_HubbardCommon(/;"	s	module:qes_reset_module
qes_reset_HubbardJ	qes_reset_module.f90	/^  SUBROUTINE qes_reset_HubbardJ(/;"	s	module:qes_reset_module
qes_reset_Hubbard_ns	qes_reset_module.f90	/^  SUBROUTINE qes_reset_Hubbard_ns(/;"	s	module:qes_reset_module
qes_reset_algorithmic_info	qes_reset_module.f90	/^  SUBROUTINE qes_reset_algorithmic_info(/;"	s	module:qes_reset_module
qes_reset_atom	qes_reset_module.f90	/^  SUBROUTINE qes_reset_atom(/;"	s	module:qes_reset_module
qes_reset_atomic_constraint	qes_reset_module.f90	/^  SUBROUTINE qes_reset_atomic_constraint(/;"	s	module:qes_reset_module
qes_reset_atomic_constraints	qes_reset_module.f90	/^  SUBROUTINE qes_reset_atomic_constraints(/;"	s	module:qes_reset_module
qes_reset_atomic_positions	qes_reset_module.f90	/^  SUBROUTINE qes_reset_atomic_positions(/;"	s	module:qes_reset_module
qes_reset_atomic_species	qes_reset_module.f90	/^  SUBROUTINE qes_reset_atomic_species(/;"	s	module:qes_reset_module
qes_reset_atomic_structure	qes_reset_module.f90	/^  SUBROUTINE qes_reset_atomic_structure(/;"	s	module:qes_reset_module
qes_reset_band_structure	qes_reset_module.f90	/^  SUBROUTINE qes_reset_band_structure(/;"	s	module:qes_reset_module
qes_reset_bands	qes_reset_module.f90	/^  SUBROUTINE qes_reset_bands(/;"	s	module:qes_reset_module
qes_reset_basis	qes_reset_module.f90	/^  SUBROUTINE qes_reset_basis(/;"	s	module:qes_reset_module
qes_reset_basisSetItem	qes_reset_module.f90	/^  SUBROUTINE qes_reset_basisSetItem(/;"	s	module:qes_reset_module
qes_reset_basis_set	qes_reset_module.f90	/^  SUBROUTINE qes_reset_basis_set(/;"	s	module:qes_reset_module
qes_reset_bfgs	qes_reset_module.f90	/^  SUBROUTINE qes_reset_bfgs(/;"	s	module:qes_reset_module
qes_reset_boundary_conditions	qes_reset_module.f90	/^  SUBROUTINE qes_reset_boundary_conditions(/;"	s	module:qes_reset_module
qes_reset_cell	qes_reset_module.f90	/^  SUBROUTINE qes_reset_cell(/;"	s	module:qes_reset_module
qes_reset_cell_control	qes_reset_module.f90	/^  SUBROUTINE qes_reset_cell_control(/;"	s	module:qes_reset_module
qes_reset_clock	qes_reset_module.f90	/^  SUBROUTINE qes_reset_clock(/;"	s	module:qes_reset_module
qes_reset_closed	qes_reset_module.f90	/^  SUBROUTINE qes_reset_closed(/;"	s	module:qes_reset_module
qes_reset_control_variables	qes_reset_module.f90	/^  SUBROUTINE qes_reset_control_variables(/;"	s	module:qes_reset_module
qes_reset_convergence_info	qes_reset_module.f90	/^  SUBROUTINE qes_reset_convergence_info(/;"	s	module:qes_reset_module
qes_reset_created	qes_reset_module.f90	/^  SUBROUTINE qes_reset_created(/;"	s	module:qes_reset_module
qes_reset_creator	qes_reset_module.f90	/^  SUBROUTINE qes_reset_creator(/;"	s	module:qes_reset_module
qes_reset_dft	qes_reset_module.f90	/^  SUBROUTINE qes_reset_dft(/;"	s	module:qes_reset_module
qes_reset_dftU	qes_reset_module.f90	/^  SUBROUTINE qes_reset_dftU(/;"	s	module:qes_reset_module
qes_reset_dipoleOutput	qes_reset_module.f90	/^  SUBROUTINE qes_reset_dipoleOutput(/;"	s	module:qes_reset_module
qes_reset_ekin_functional	qes_reset_module.f90	/^  SUBROUTINE qes_reset_ekin_functional(/;"	s	module:qes_reset_module
qes_reset_electric_field	qes_reset_module.f90	/^  SUBROUTINE qes_reset_electric_field(/;"	s	module:qes_reset_module
qes_reset_electron_control	qes_reset_module.f90	/^  SUBROUTINE qes_reset_electron_control(/;"	s	module:qes_reset_module
qes_reset_electronicPolarization	qes_reset_module.f90	/^  SUBROUTINE qes_reset_electronicPolarization(/;"	s	module:qes_reset_module
qes_reset_equivalent_atoms	qes_reset_module.f90	/^  SUBROUTINE qes_reset_equivalent_atoms(/;"	s	module:qes_reset_module
qes_reset_esm	qes_reset_module.f90	/^  SUBROUTINE qes_reset_esm(/;"	s	module:qes_reset_module
qes_reset_espresso	qes_reset_module.f90	/^  SUBROUTINE qes_reset_espresso(/;"	s	module:qes_reset_module
qes_reset_finiteFieldOut	qes_reset_module.f90	/^  SUBROUTINE qes_reset_finiteFieldOut(/;"	s	module:qes_reset_module
qes_reset_gateInfo	qes_reset_module.f90	/^  SUBROUTINE qes_reset_gateInfo(/;"	s	module:qes_reset_module
qes_reset_gate_settings	qes_reset_module.f90	/^  SUBROUTINE qes_reset_gate_settings(/;"	s	module:qes_reset_module
qes_reset_general_info	qes_reset_module.f90	/^  SUBROUTINE qes_reset_general_info(/;"	s	module:qes_reset_module
qes_reset_hybrid	qes_reset_module.f90	/^  SUBROUTINE qes_reset_hybrid(/;"	s	module:qes_reset_module
qes_reset_info	qes_reset_module.f90	/^  SUBROUTINE qes_reset_info(/;"	s	module:qes_reset_module
qes_reset_input	qes_reset_module.f90	/^  SUBROUTINE qes_reset_input(/;"	s	module:qes_reset_module
qes_reset_inputOccupations	qes_reset_module.f90	/^  SUBROUTINE qes_reset_inputOccupations(/;"	s	module:qes_reset_module
qes_reset_integerMatrix	qes_reset_module.f90	/^  SUBROUTINE qes_reset_integerMatrix(/;"	s	module:qes_reset_module
qes_reset_integerVector	qes_reset_module.f90	/^  SUBROUTINE qes_reset_integerVector(/;"	s	module:qes_reset_module
qes_reset_ion_control	qes_reset_module.f90	/^  SUBROUTINE qes_reset_ion_control(/;"	s	module:qes_reset_module
qes_reset_ionicPolarization	qes_reset_module.f90	/^  SUBROUTINE qes_reset_ionicPolarization(/;"	s	module:qes_reset_module
qes_reset_k_point	qes_reset_module.f90	/^  SUBROUTINE qes_reset_k_point(/;"	s	module:qes_reset_module
qes_reset_k_points_IBZ	qes_reset_module.f90	/^  SUBROUTINE qes_reset_k_points_IBZ(/;"	s	module:qes_reset_module
qes_reset_ks_energies	qes_reset_module.f90	/^  SUBROUTINE qes_reset_ks_energies(/;"	s	module:qes_reset_module
qes_reset_magnetization	qes_reset_module.f90	/^  SUBROUTINE qes_reset_magnetization(/;"	s	module:qes_reset_module
qes_reset_matrix	qes_reset_module.f90	/^  SUBROUTINE qes_reset_matrix(/;"	s	module:qes_reset_module
qes_reset_md	qes_reset_module.f90	/^  SUBROUTINE qes_reset_md(/;"	s	module:qes_reset_module
qes_reset_module	qes_reset_module.f90	/^MODULE qes_reset_module$/;"	m
qes_reset_monkhorst_pack	qes_reset_module.f90	/^  SUBROUTINE qes_reset_monkhorst_pack(/;"	s	module:qes_reset_module
qes_reset_occupations	qes_reset_module.f90	/^  SUBROUTINE qes_reset_occupations(/;"	s	module:qes_reset_module
qes_reset_opt_conv	qes_reset_module.f90	/^  SUBROUTINE qes_reset_opt_conv(/;"	s	module:qes_reset_module
qes_reset_output	qes_reset_module.f90	/^  SUBROUTINE qes_reset_output(/;"	s	module:qes_reset_module
qes_reset_outputElectricField	qes_reset_module.f90	/^  SUBROUTINE qes_reset_outputElectricField(/;"	s	module:qes_reset_module
qes_reset_outputPBC	qes_reset_module.f90	/^  SUBROUTINE qes_reset_outputPBC(/;"	s	module:qes_reset_module
qes_reset_parallel_info	qes_reset_module.f90	/^  SUBROUTINE qes_reset_parallel_info(/;"	s	module:qes_reset_module
qes_reset_phase	qes_reset_module.f90	/^  SUBROUTINE qes_reset_phase(/;"	s	module:qes_reset_module
qes_reset_polarization	qes_reset_module.f90	/^  SUBROUTINE qes_reset_polarization(/;"	s	module:qes_reset_module
qes_reset_qpoint_grid	qes_reset_module.f90	/^  SUBROUTINE qes_reset_qpoint_grid(/;"	s	module:qes_reset_module
qes_reset_reciprocal_lattice	qes_reset_module.f90	/^  SUBROUTINE qes_reset_reciprocal_lattice(/;"	s	module:qes_reset_module
qes_reset_scalarQuantity	qes_reset_module.f90	/^  SUBROUTINE qes_reset_scalarQuantity(/;"	s	module:qes_reset_module
qes_reset_scf_conv	qes_reset_module.f90	/^  SUBROUTINE qes_reset_scf_conv(/;"	s	module:qes_reset_module
qes_reset_smearing	qes_reset_module.f90	/^  SUBROUTINE qes_reset_smearing(/;"	s	module:qes_reset_module
qes_reset_species	qes_reset_module.f90	/^  SUBROUTINE qes_reset_species(/;"	s	module:qes_reset_module
qes_reset_spin	qes_reset_module.f90	/^  SUBROUTINE qes_reset_spin(/;"	s	module:qes_reset_module
qes_reset_spin_constraints	qes_reset_module.f90	/^  SUBROUTINE qes_reset_spin_constraints(/;"	s	module:qes_reset_module
qes_reset_starting_ns	qes_reset_module.f90	/^  SUBROUTINE qes_reset_starting_ns(/;"	s	module:qes_reset_module
qes_reset_step	qes_reset_module.f90	/^  SUBROUTINE qes_reset_step(/;"	s	module:qes_reset_module
qes_reset_symmetries	qes_reset_module.f90	/^  SUBROUTINE qes_reset_symmetries(/;"	s	module:qes_reset_module
qes_reset_symmetry	qes_reset_module.f90	/^  SUBROUTINE qes_reset_symmetry(/;"	s	module:qes_reset_module
qes_reset_symmetry_flags	qes_reset_module.f90	/^  SUBROUTINE qes_reset_symmetry_flags(/;"	s	module:qes_reset_module
qes_reset_timing	qes_reset_module.f90	/^  SUBROUTINE qes_reset_timing(/;"	s	module:qes_reset_module
qes_reset_total_energy	qes_reset_module.f90	/^  SUBROUTINE qes_reset_total_energy(/;"	s	module:qes_reset_module
qes_reset_vdW	qes_reset_module.f90	/^  SUBROUTINE qes_reset_vdW(/;"	s	module:qes_reset_module
qes_reset_vector	qes_reset_module.f90	/^  SUBROUTINE qes_reset_vector(/;"	s	module:qes_reset_module
qes_reset_wyckoff_positions	qes_reset_module.f90	/^  SUBROUTINE qes_reset_wyckoff_positions(/;"	s	module:qes_reset_module
qes_reset_xml_format	qes_reset_module.f90	/^  SUBROUTINE qes_reset_xml_format(/;"	s	module:qes_reset_module
qes_types_module	qes_types_module.f90	/^MODULE qes_types_module$/;"	m
qes_write_BerryPhaseOutput	qes_write_module.f90	/^   SUBROUTINE qes_write_BerryPhaseOutput(/;"	s	module:qes_write_module
qes_write_HubbardCommon	qes_write_module.f90	/^   SUBROUTINE qes_write_HubbardCommon(/;"	s	module:qes_write_module
qes_write_HubbardJ	qes_write_module.f90	/^   SUBROUTINE qes_write_HubbardJ(/;"	s	module:qes_write_module
qes_write_Hubbard_ns	qes_write_module.f90	/^   SUBROUTINE qes_write_Hubbard_ns(/;"	s	module:qes_write_module
qes_write_algorithmic_info	qes_write_module.f90	/^   SUBROUTINE qes_write_algorithmic_info(/;"	s	module:qes_write_module
qes_write_atom	qes_write_module.f90	/^   SUBROUTINE qes_write_atom(/;"	s	module:qes_write_module
qes_write_atomic_constraint	qes_write_module.f90	/^   SUBROUTINE qes_write_atomic_constraint(/;"	s	module:qes_write_module
qes_write_atomic_constraints	qes_write_module.f90	/^   SUBROUTINE qes_write_atomic_constraints(/;"	s	module:qes_write_module
qes_write_atomic_positions	qes_write_module.f90	/^   SUBROUTINE qes_write_atomic_positions(/;"	s	module:qes_write_module
qes_write_atomic_species	qes_write_module.f90	/^   SUBROUTINE qes_write_atomic_species(/;"	s	module:qes_write_module
qes_write_atomic_structure	qes_write_module.f90	/^   SUBROUTINE qes_write_atomic_structure(/;"	s	module:qes_write_module
qes_write_band_structure	qes_write_module.f90	/^   SUBROUTINE qes_write_band_structure(/;"	s	module:qes_write_module
qes_write_bands	qes_write_module.f90	/^   SUBROUTINE qes_write_bands(/;"	s	module:qes_write_module
qes_write_basis	qes_write_module.f90	/^   SUBROUTINE qes_write_basis(/;"	s	module:qes_write_module
qes_write_basisSetItem	qes_write_module.f90	/^   SUBROUTINE qes_write_basisSetItem(/;"	s	module:qes_write_module
qes_write_basis_set	qes_write_module.f90	/^   SUBROUTINE qes_write_basis_set(/;"	s	module:qes_write_module
qes_write_bfgs	qes_write_module.f90	/^   SUBROUTINE qes_write_bfgs(/;"	s	module:qes_write_module
qes_write_boundary_conditions	qes_write_module.f90	/^   SUBROUTINE qes_write_boundary_conditions(/;"	s	module:qes_write_module
qes_write_cell	qes_write_module.f90	/^   SUBROUTINE qes_write_cell(/;"	s	module:qes_write_module
qes_write_cell_control	qes_write_module.f90	/^   SUBROUTINE qes_write_cell_control(/;"	s	module:qes_write_module
qes_write_clock	qes_write_module.f90	/^   SUBROUTINE qes_write_clock(/;"	s	module:qes_write_module
qes_write_closed	qes_write_module.f90	/^   SUBROUTINE qes_write_closed(/;"	s	module:qes_write_module
qes_write_control_variables	qes_write_module.f90	/^   SUBROUTINE qes_write_control_variables(/;"	s	module:qes_write_module
qes_write_convergence_info	qes_write_module.f90	/^   SUBROUTINE qes_write_convergence_info(/;"	s	module:qes_write_module
qes_write_created	qes_write_module.f90	/^   SUBROUTINE qes_write_created(/;"	s	module:qes_write_module
qes_write_creator	qes_write_module.f90	/^   SUBROUTINE qes_write_creator(/;"	s	module:qes_write_module
qes_write_dft	qes_write_module.f90	/^   SUBROUTINE qes_write_dft(/;"	s	module:qes_write_module
qes_write_dftU	qes_write_module.f90	/^   SUBROUTINE qes_write_dftU(/;"	s	module:qes_write_module
qes_write_dipoleOutput	qes_write_module.f90	/^   SUBROUTINE qes_write_dipoleOutput(/;"	s	module:qes_write_module
qes_write_ekin_functional	qes_write_module.f90	/^   SUBROUTINE qes_write_ekin_functional(/;"	s	module:qes_write_module
qes_write_electric_field	qes_write_module.f90	/^   SUBROUTINE qes_write_electric_field(/;"	s	module:qes_write_module
qes_write_electron_control	qes_write_module.f90	/^   SUBROUTINE qes_write_electron_control(/;"	s	module:qes_write_module
qes_write_electronicPolarization	qes_write_module.f90	/^   SUBROUTINE qes_write_electronicPolarization(/;"	s	module:qes_write_module
qes_write_equivalent_atoms	qes_write_module.f90	/^   SUBROUTINE qes_write_equivalent_atoms(/;"	s	module:qes_write_module
qes_write_esm	qes_write_module.f90	/^   SUBROUTINE qes_write_esm(/;"	s	module:qes_write_module
qes_write_espresso	qes_write_module.f90	/^   SUBROUTINE qes_write_espresso(/;"	s	module:qes_write_module
qes_write_finiteFieldOut	qes_write_module.f90	/^   SUBROUTINE qes_write_finiteFieldOut(/;"	s	module:qes_write_module
qes_write_gateInfo	qes_write_module.f90	/^   SUBROUTINE qes_write_gateInfo(/;"	s	module:qes_write_module
qes_write_gate_settings	qes_write_module.f90	/^   SUBROUTINE qes_write_gate_settings(/;"	s	module:qes_write_module
qes_write_general_info	qes_write_module.f90	/^   SUBROUTINE qes_write_general_info(/;"	s	module:qes_write_module
qes_write_hybrid	qes_write_module.f90	/^   SUBROUTINE qes_write_hybrid(/;"	s	module:qes_write_module
qes_write_info	qes_write_module.f90	/^   SUBROUTINE qes_write_info(/;"	s	module:qes_write_module
qes_write_input	qes_write_module.f90	/^   SUBROUTINE qes_write_input(/;"	s	module:qes_write_module
qes_write_inputOccupations	qes_write_module.f90	/^   SUBROUTINE qes_write_inputOccupations(/;"	s	module:qes_write_module
qes_write_integerMatrix	qes_write_module.f90	/^   SUBROUTINE qes_write_integerMatrix(/;"	s	module:qes_write_module
qes_write_integerVector	qes_write_module.f90	/^   SUBROUTINE qes_write_integerVector(/;"	s	module:qes_write_module
qes_write_ion_control	qes_write_module.f90	/^   SUBROUTINE qes_write_ion_control(/;"	s	module:qes_write_module
qes_write_ionicPolarization	qes_write_module.f90	/^   SUBROUTINE qes_write_ionicPolarization(/;"	s	module:qes_write_module
qes_write_k_point	qes_write_module.f90	/^   SUBROUTINE qes_write_k_point(/;"	s	module:qes_write_module
qes_write_k_points_IBZ	qes_write_module.f90	/^   SUBROUTINE qes_write_k_points_IBZ(/;"	s	module:qes_write_module
qes_write_ks_energies	qes_write_module.f90	/^   SUBROUTINE qes_write_ks_energies(/;"	s	module:qes_write_module
qes_write_magnetization	qes_write_module.f90	/^   SUBROUTINE qes_write_magnetization(/;"	s	module:qes_write_module
qes_write_matrix	qes_write_module.f90	/^   SUBROUTINE qes_write_matrix(/;"	s	module:qes_write_module
qes_write_md	qes_write_module.f90	/^   SUBROUTINE qes_write_md(/;"	s	module:qes_write_module
qes_write_module	qes_write_module.f90	/^MODULE qes_write_module$/;"	m
qes_write_monkhorst_pack	qes_write_module.f90	/^   SUBROUTINE qes_write_monkhorst_pack(/;"	s	module:qes_write_module
qes_write_occupations	qes_write_module.f90	/^   SUBROUTINE qes_write_occupations(/;"	s	module:qes_write_module
qes_write_opt_conv	qes_write_module.f90	/^   SUBROUTINE qes_write_opt_conv(/;"	s	module:qes_write_module
qes_write_output	qes_write_module.f90	/^   SUBROUTINE qes_write_output(/;"	s	module:qes_write_module
qes_write_outputElectricField	qes_write_module.f90	/^   SUBROUTINE qes_write_outputElectricField(/;"	s	module:qes_write_module
qes_write_outputPBC	qes_write_module.f90	/^   SUBROUTINE qes_write_outputPBC(/;"	s	module:qes_write_module
qes_write_parallel_info	qes_write_module.f90	/^   SUBROUTINE qes_write_parallel_info(/;"	s	module:qes_write_module
qes_write_phase	qes_write_module.f90	/^   SUBROUTINE qes_write_phase(/;"	s	module:qes_write_module
qes_write_polarization	qes_write_module.f90	/^   SUBROUTINE qes_write_polarization(/;"	s	module:qes_write_module
qes_write_qpoint_grid	qes_write_module.f90	/^   SUBROUTINE qes_write_qpoint_grid(/;"	s	module:qes_write_module
qes_write_reciprocal_lattice	qes_write_module.f90	/^   SUBROUTINE qes_write_reciprocal_lattice(/;"	s	module:qes_write_module
qes_write_scalarQuantity	qes_write_module.f90	/^   SUBROUTINE qes_write_scalarQuantity(/;"	s	module:qes_write_module
qes_write_scf_conv	qes_write_module.f90	/^   SUBROUTINE qes_write_scf_conv(/;"	s	module:qes_write_module
qes_write_smearing	qes_write_module.f90	/^   SUBROUTINE qes_write_smearing(/;"	s	module:qes_write_module
qes_write_species	qes_write_module.f90	/^   SUBROUTINE qes_write_species(/;"	s	module:qes_write_module
qes_write_spin	qes_write_module.f90	/^   SUBROUTINE qes_write_spin(/;"	s	module:qes_write_module
qes_write_spin_constraints	qes_write_module.f90	/^   SUBROUTINE qes_write_spin_constraints(/;"	s	module:qes_write_module
qes_write_starting_ns	qes_write_module.f90	/^   SUBROUTINE qes_write_starting_ns(/;"	s	module:qes_write_module
qes_write_step	qes_write_module.f90	/^   SUBROUTINE qes_write_step(/;"	s	module:qes_write_module
qes_write_symmetries	qes_write_module.f90	/^   SUBROUTINE qes_write_symmetries(/;"	s	module:qes_write_module
qes_write_symmetry	qes_write_module.f90	/^   SUBROUTINE qes_write_symmetry(/;"	s	module:qes_write_module
qes_write_symmetry_flags	qes_write_module.f90	/^   SUBROUTINE qes_write_symmetry_flags(/;"	s	module:qes_write_module
qes_write_timing	qes_write_module.f90	/^   SUBROUTINE qes_write_timing(/;"	s	module:qes_write_module
qes_write_total_energy	qes_write_module.f90	/^   SUBROUTINE qes_write_total_energy(/;"	s	module:qes_write_module
qes_write_vdW	qes_write_module.f90	/^   SUBROUTINE qes_write_vdW(/;"	s	module:qes_write_module
qes_write_vector	qes_write_module.f90	/^   SUBROUTINE qes_write_vector(/;"	s	module:qes_write_module
qes_write_wyckoff_positions	qes_write_module.f90	/^   SUBROUTINE qes_write_wyckoff_positions(/;"	s	module:qes_write_module
qes_write_xml_format	qes_write_module.f90	/^   SUBROUTINE qes_write_xml_format(/;"	s	module:qes_write_module
qestdin	io_global.f90	/^  INTEGER :: qestdin=/;"	v	module:io_global
qexsd_bp_obj	qexsd.f90	/^  TYPE (berryPhaseOutput_type),TARGET          :: qexsd_bp_obj$/;"	v	module:qexsd_module
qexsd_closed_element	qexsd.f90	/^  TYPE ( closed_type )                         :: qexsd_closed_element$/;"	v	module:qexsd_module
qexsd_closeschema	qexsd.f90	/^    SUBROUTINE qexsd_closeschema(/;"	s	module:qexsd_module
qexsd_cp_line_by_line	qexsd.f90	/^    SUBROUTINE qexsd_cp_line_by_line(/;"	s	module:qexsd_module
qexsd_current_version	qexsd.f90	/^  CHARACTER(10)    :: qexsd_current_version /;"	v	module:qexsd_module
qexsd_current_version_init	qexsd.f90	/^  LOGICAL          :: qexsd_current_version_init /;"	v	module:qexsd_module
qexsd_default_version	qexsd.f90	/^  CHARACTER(10)    :: qexsd_default_version /;"	v	module:qexsd_module
qexsd_fmt	io_files.f90	/^  CHARACTER(LEN=256) :: qexsd_fmt /;"	v	module:io_files
qexsd_init	io_files.f90	/^  LOGICAL            :: qexsd_init /;"	v	module:io_files
qexsd_init_algorithmic_info	qexsd.f90	/^    SUBROUTINE qexsd_init_algorithmic_info(/;"	s	module:qexsd_module
qexsd_init_atomic_constraints	qexsd_input.f90	/^   SUBROUTINE  qexsd_init_atomic_constraints(/;"	s	module:qexsd_input
qexsd_init_atomic_species	qexsd.f90	/^    SUBROUTINE qexsd_init_atomic_species(/;"	s	module:qexsd_module
qexsd_init_atomic_structure	qexsd.f90	/^    SUBROUTINE qexsd_init_atomic_structure(/;"	s	module:qexsd_module
qexsd_init_band_structure	qexsd.f90	/^    SUBROUTINE qexsd_init_band_structure(/;"	s	module:qexsd_module
qexsd_init_bands	qexsd_input.f90	/^  SUBROUTINE qexsd_init_bands(/;"	s	module:qexsd_input
qexsd_init_basis	qexsd_input.f90	/^  SUBROUTINE qexsd_init_basis(/;"	s	module:qexsd_input
qexsd_init_basis_set	qexsd.f90	/^    SUBROUTINE qexsd_init_basis_set(/;"	s	module:qexsd_module
qexsd_init_berryPhaseOutput	qexsd.f90	/^    SUBROUTINE qexsd_init_berryPhaseOutput(/;"	s	module:qexsd_module
qexsd_init_boundary_conditions	qexsd_input.f90	/^   SUBROUTINE qexsd_init_boundary_conditions(/;"	s	module:qexsd_input
qexsd_init_cell_control	qexsd_input.f90	/^   SUBROUTINE qexsd_init_cell_control(/;"	s	module:qexsd_input
qexsd_init_clocks	qexsd.f90	/^SUBROUTINE qexsd_init_clocks /;"	s	module:qexsd_module
qexsd_init_control_variables	qexsd_input.f90	/^  SUBROUTINE  qexsd_init_control_variables(/;"	s	module:qexsd_input
qexsd_init_convergence_info	qexsd.f90	/^    SUBROUTINE qexsd_init_convergence_info(/;"	s	module:qexsd_module
qexsd_init_dft	qexsd.f90	/^    SUBROUTINE  qexsd_init_dft /;"	s	module:qexsd_module
qexsd_init_dftU	qexsd.f90	/^      SUBROUTINE qexsd_init_dftU /;"	s	module:qexsd_module
qexsd_init_dipole_info	qexsd.f90	/^    SUBROUTINE qexsd_init_dipole_info /;"	s	module:qexsd_module
qexsd_init_ekin_functional	qexsd_input.f90	/^   SUBROUTINE qexsd_init_ekin_functional(/;"	s	module:qexsd_input
qexsd_init_electric_field_input	qexsd_input.f90	/^   SUBROUTINE qexsd_init_electric_field_input /;"	s	module:qexsd_input
qexsd_init_electron_control	qexsd_input.f90	/^  SUBROUTINE qexsd_init_electron_control(/;"	s	module:qexsd_input
qexsd_init_external_atomic_forces	qexsd_input.f90	/^   SUBROUTINE qexsd_init_external_atomic_forces(/;"	s	module:qexsd_input
qexsd_init_forces	qexsd.f90	/^    SUBROUTINE qexsd_init_forces(/;"	s	module:qexsd_module
qexsd_init_free_positions	qexsd_input.f90	/^   SUBROUTINE qexsd_init_free_positions(/;"	s	module:qexsd_input
qexsd_init_gate_info	qexsd.f90	/^SUBROUTINE qexsd_init_gate_info(/;"	s	module:qexsd_module
qexsd_init_general_info	qexsd.f90	/^    SUBROUTINE qexsd_init_general_info(/;"	s	module:qexsd_module
qexsd_init_hybrid	qexsd.f90	/^    SUBROUTINE qexsd_init_hybrid /;"	s	module:qexsd_module
qexsd_init_ion_control	qexsd_input.f90	/^   SUBROUTINE qexsd_init_ion_control(/;"	s	module:qexsd_input
qexsd_init_k_points_ibz	qexsd_input.f90	/^   SUBROUTINE qexsd_init_k_points_ibz(/;"	s	module:qexsd_input
qexsd_init_magnetization	qexsd.f90	/^    SUBROUTINE qexsd_init_magnetization(/;"	s	module:qexsd_module
qexsd_init_occupations	qexsd_input.f90	/^   SUBROUTINE qexsd_init_occupations(/;"	s	module:qexsd_input
qexsd_init_outputElectricField	qexsd.f90	/^    SUBROUTINE  qexsd_init_outputElectricField(/;"	s	module:qexsd_module
qexsd_init_outputPBC	qexsd.f90	/^    SUBROUTINE qexsd_init_outputPBC(/;"	s	module:qexsd_module
qexsd_init_parallel_info	qexsd.f90	/^    SUBROUTINE   qexsd_init_parallel_info(/;"	s	module:qexsd_module
qexsd_init_schema	qexsd.f90	/^    SUBROUTINE qexsd_init_schema(/;"	s	module:qexsd_module
qexsd_init_smearing	qexsd_input.f90	/^   SUBROUTINE qexsd_init_smearing(/;"	s	module:qexsd_input
qexsd_init_spin	qexsd_input.f90	/^  SUBROUTINE qexsd_init_spin(/;"	s	module:qexsd_input
qexsd_init_spin_constraints	qexsd_input.f90	/^   SUBROUTINE  qexsd_init_spin_constraints(/;"	s	module:qexsd_input
qexsd_init_starting_atomic_velocities	qexsd_input.f90	/^   SUBROUTINE qexsd_init_starting_atomic_velocities(/;"	s	module:qexsd_input
qexsd_init_stress	qexsd.f90	/^    SUBROUTINE qexsd_init_stress(/;"	s	module:qexsd_module
qexsd_init_symmetries	qexsd.f90	/^    SUBROUTINE qexsd_init_symmetries(/;"	s	module:qexsd_module
qexsd_init_symmetry_flags	qexsd_input.f90	/^   SUBROUTINE qexsd_init_symmetry_flags(/;"	s	module:qexsd_input
qexsd_init_total_energy	qexsd.f90	/^    SUBROUTINE qexsd_init_total_energy(/;"	s	module:qexsd_module
qexsd_init_vdw	qexsd.f90	/^         SUBROUTINE qexsd_init_vdw(/;"	s	module:qexsd_module
qexsd_input	qexsd_input.f90	/^MODULE qexsd_input$/;"	m
qexsd_input_obj	qexsd.f90	/^  TYPE (input_type)                            :: qexsd_input_obj$/;"	v	module:qexsd_module
qexsd_module	qexsd.f90	/^MODULE qexsd_module$/;"	m
qexsd_occ_obj	qexsd.f90	/^  TYPE (occupations_type)                      :: qexsd_occ_obj$/;"	v	module:qexsd_module
qexsd_openschema	qexsd.f90	/^    SUBROUTINE qexsd_openschema(/;"	s	module:qexsd_module
qexsd_reset_steps	qexsd.f90	/^    SUBROUTINE qexsd_reset_steps(/;"	s	module:qexsd_module
qexsd_set_closed	qexsd.f90	/^    SUBROUTINE qexsd_set_closed(/;"	s	module:qexsd_module
qexsd_set_status	qexsd.f90	/^    SUBROUTINE qexsd_set_status(/;"	s	module:qexsd_module
qexsd_smear_obj	qexsd.f90	/^  TYPE (smearing_type)                         :: qexsd_smear_obj$/;"	v	module:qexsd_module
qexsd_start_k_obj	qexsd.f90	/^  TYPE (k_points_IBZ_type)                     :: qexsd_start_k_obj /;"	v	module:qexsd_module
qexsd_step_addstep	qexsd.f90	/^    SUBROUTINE qexsd_step_addstep(/;"	s	module:qexsd_module
qexsd_use_large_indent	qexsd.f90	/^  LOGICAL          :: qexsd_use_large_indent /;"	v	module:qexsd_module
qexsd_version	io_files.f90	/^  CHARACTER(LEN=256) :: qexsd_fmt = ' ', qexsd_version /;"	v	module:io_files
qexsd_xf	qexsd.f90	/^  TYPE(xmlf_t)     :: qexsd_xf$/;"	v	module:qexsd_module
qfcoef	pseudo_types.f90	/^     REAL(DP), POINTER :: qfcoef(/;"	k	type:pseudo_upf
qfunc	pseudo_types.f90	/^     REAL(DP), POINTER :: qfunc(/;"	k	type:pseudo_upf
qfuncl	pseudo_types.f90	/^     REAL(DP), POINTER :: qfuncl(/;"	k	type:pseudo_upf
qmmm	qmmm.f90	/^MODULE qmmm$/;"	m
qmmm_add_esf	qmmm.f90	/^  SUBROUTINE qmmm_add_esf(/;"	s	module:qmmm
qmmm_center_molecule	qmmm.f90	/^  SUBROUTINE qmmm_center_molecule$/;"	s	module:qmmm
qmmm_comm	qmmm.f90	/^  INTEGER :: qmmm_comm /;"	v	module:qmmm
qmmm_config	qmmm.f90	/^  SUBROUTINE qmmm_config(/;"	s	module:qmmm
qmmm_force_esf	qmmm.f90	/^  SUBROUTINE qmmm_force_esf(/;"	s	module:qmmm
qmmm_initialization	qmmm.f90	/^  SUBROUTINE qmmm_initialization$/;"	s	module:qmmm
qmmm_minimum_image	qmmm.f90	/^SUBROUTINE qmmm_minimum_image(/;"	s	module:qmmm
qmmm_mode	qmmm.f90	/^  INTEGER :: qmmm_mode /;"	v	module:qmmm
qmmm_shutdown	qmmm.f90	/^  SUBROUTINE qmmm_shutdown$/;"	s	module:qmmm
qmmm_step	qmmm.f90	/^  INTEGER :: qmmm_step /;"	v	module:qmmm
qmmm_update_forces	qmmm.f90	/^  SUBROUTINE qmmm_update_forces(/;"	s	module:qmmm
qmmm_update_positions	qmmm.f90	/^  SUBROUTINE qmmm_update_positions$/;"	s	module:qmmm
qmmm_verb	qmmm.f90	/^  INTEGER :: qmmm_verb /;"	v	module:qmmm
qpoint_grid	qes_types_module.f90	/^    CHARACTER(len=256) :: qpoint_grid$/;"	k	type:qpoint_grid_type
qpoint_grid	qes_types_module.f90	/^    TYPE(qpoint_grid_/;"	k	type:hybrid_type
qpoint_grid_ispresent	qes_types_module.f90	/^    LOGICAL  :: qpoint_grid_ispresent /;"	k	type:hybrid_type
qpoint_grid_type	qes_types_module.f90	/^  TYPE :: qpoint_grid_type$/;"	t	module:qes_types_module
qq_at	uspp.f90	/^       qq_nt(:,:,:),          &! the integral of q functions in the solid (ONE PER NTYP) used to be the qq array$/;"	v	module:uspp
qq_nt	uspp.f90	/^       deeq(:,:,:,:),         &! the integral of V_eff and Q_{nm} $/;"	v	module:uspp
qq_so	uspp.f90	/^  COMPLEX(DP), ALLOCATABLE :: & ! variables for spin-orbit\/noncolinear case:$/;"	v	module:uspp
qqq	pseudo_types.f90	/^     REAL(DP), POINTER :: qqq(/;"	k	type:pseudo_upf
qqq_eps	pseudo_types.f90	/^     REAL(DP):: qqq_eps /;"	k	type:pseudo_upf
r	becmod.f90	/^     REAL(DP),   ALLOCATABLE :: r(/;"	k	type:bec_type
r	mm_dispersion.f90	/^                               R_sum ( : , : ) , &$/;"	v	module:london_module
r	pseudo_types.f90	/^     REAL(DP), POINTER :: r(/;"	k	type:pseudo_upf
r	radial_grids.f90	/^  REAL(DP),POINTER :: &$/;"	k	type:radial_grid_type
r0	qmmm.f90	/^  REAL(DP), DIMENSION(3) :: r0 /;"	v	module:qmmm
r2	radial_grids.f90	/^       r(:),    & ! the radial mesh$/;"	k	type:radial_grid_type
rPW86	functionals.f90	/^subroutine rPW86 /;"	s
rVV10	xc_rVV10.f90	/^MODULE rVV10 /;"	m
r_cut	mm_dispersion.f90	/^  REAL ( DP ) :: r_cut /;"	v	module:london_module
r_loc	noncol.f90	/^      factlist(:),         &! weight factors for local integrations$/;"	v	module:noncollin_module
r_m	noncol.f90	/^      vtcon,               &!  contribution of the constraining fields to$/;"	v	module:noncollin_module
r_max	kernel_table.f90	/^  real(dp) :: r_max,/;"	v	module:kernel_table
r_to_s1	cell_base.f90	/^        SUBROUTINE r_to_s1 /;"	s	module:cell_base
r_to_s1b	cell_base.f90	/^        SUBROUTINE r_to_s1b /;"	s	module:cell_base
r_to_s3	cell_base.f90	/^        SUBROUTINE r_to_s3 /;"	s	module:cell_base
rab	pseudo_types.f90	/^     REAL(DP), POINTER :: rab(/;"	k	type:pseudo_upf
rab	radial_grids.f90	/^       r2(:),   & ! the square of the radial mesh$/;"	k	type:radial_grid_type
rad	paw_variables.f90	/^    TYPE(paw_radi/;"	v	module:paw_variables
radial_grad_style	paw_variables.f90	/^    INTEGER,PARAMETER    :: radial_grad_style /;"	v	module:paw_variables
radial_gradient	radial_gradients.f90	/^subroutine radial_gradient(/;"	s
radial_grid_COPY	radial_grids.f90	/^      subroutine radial_grid_COPY(/;"	s	module:radial_grids
radial_grid_type	radial_grids.f90	/^TYPE radial_grid_type$/;"	t	module:radial_grids
radial_grids	radial_grids.f90	/^MODULE radial_grids$/;"	m
rande_base	wave_base.f90	/^      SUBROUTINE rande_base(/;"	s	module:wave_base
rande_base_s	wave_base.f90	/^      SUBROUTINE rande_base_s(/;"	s	module:wave_base
random_numbers	random_numbers.f90	/^MODULE random_numbers$/;"	m
randpos	ions_base.f90	/^      SUBROUTINE randpos(/;"	s	module:ions_base
randvel	ions_base.f90	/^  subroutine randvel(/;"	s	module:ions_base
randy	random_numbers.f90	/^    FUNCTION randy /;"	f	module:random_numbers
rank	hdf5_qe.f90	/^   INTEGER          :: rank$/;"	k	type:HDF5_type
rank	qeh5_module.f90	/^     INTEGER               ::  rank /;"	k	type:qeh5_datatype
rank	qeh5_module.f90	/^     INTEGER              ::  rank /;"	k	type:qeh5_dataspace
rank	qes_types_module.f90	/^    INTEGER :: rank$/;"	k	type:Hubbard_ns_type
rank	qes_types_module.f90	/^    INTEGER :: rank$/;"	k	type:integerMatrix_type
rank	qes_types_module.f90	/^    INTEGER :: rank$/;"	k	type:matrix_type
raug	pseudo_types.f90	/^     REAL(DP)         :: raug /;"	k	type:paw_in_upf
rc_mm	qmmm.f90	/^  REAL(DP), ALLOCATABLE :: rc_mm(/;"	v	module:qmmm
rcloc	pseudo_types.f90	/^     REAL(DP) :: rcloc /;"	k	type:pseudo_upf
rcmax	ions_base.f90	/^      REAL(DP) :: rcmax(/;"	v	module:ions_base
rcut	pseudo_types.f90	/^     REAL(DP), POINTER :: rcut(/;"	k	type:pseudo_upf
rcut	pseudo_types.f90	/^     REAL(DP),POINTER         :: rcut(/;"	k	type:pseudo_config
rcut_chi	pseudo_types.f90	/^     REAL(DP), POINTER :: rcut_chi(/;"	k	type:pseudo_upf
rcutus	pseudo_types.f90	/^     REAL(DP), POINTER :: rcutus(/;"	k	type:pseudo_upf
rcutus	pseudo_types.f90	/^     REAL(DP),POINTER         :: rcutus(/;"	k	type:pseudo_config
rcutus_chi	pseudo_types.f90	/^     REAL(DP), POINTER :: rcutus_chi(/;"	k	type:pseudo_upf
rd_for	input_parameters.f90	/^        REAL(DP), ALLOCATABLE :: rd_for(/;"	v	module:input_parameters
rd_ht	input_parameters.f90	/^       REAL(DP) :: rd_ht(/;"	v	module:input_parameters
rd_if_pos	input_parameters.f90	/^        INTEGER,  ALLOCATABLE :: rd_if_pos(/;"	v	module:input_parameters
rd_pos	input_parameters.f90	/^        REAL(DP), ALLOCATABLE :: rd_pos(/;"	v	module:input_parameters
rd_ref_ht	input_parameters.f90	/^       REAL(DP) :: rd_ref_ht(/;"	v	module:input_parameters
rd_vel	input_parameters.f90	/^        REAL(DP), ALLOCATABLE :: rd_vel(/;"	v	module:input_parameters
rdispls	tsvdw.f90	/^INTEGER, DIMENSION(:), ALLOCATABLE, PRIVATE :: rdispls /;"	v	module:tsvdw_module
read_attributes_hdf5_boolean	hdf5_qe.f90	/^  SUBROUTINE read_attributes_hdf5_boolean(/;"	s	module:hdf5_qe
read_attributes_hdf5_c	hdf5_qe.f90	/^  SUBROUTINE read_attributes_hdf5_c(/;"	s	module:hdf5_qe
read_attributes_hdf5_i	hdf5_qe.f90	/^  SUBROUTINE read_attributes_hdf5_i(/;"	s	module:hdf5_qe
read_attributes_hdf5_r	hdf5_qe.f90	/^  SUBROUTINE read_attributes_hdf5_r(/;"	s	module:hdf5_qe
read_bfgs_file	bfgs_module.f90	/^   SUBROUTINE read_bfgs_file(/;"	s	module:bfgs_module
read_cards	read_cards.f90	/^   SUBROUTINE read_cards /;"	s	module:read_cards_module
read_cards_module	read_cards.f90	/^MODULE read_cards_module$/;"	m
read_data_hdf5	hdf5_qe.f90	/^  subroutine  read_data_hdf5(/;"	s	module:hdf5_qe
read_eig	hdf5_qe.f90	/^  subroutine read_eig(/;"	s	module:hdf5_qe
read_evc	hdf5_qe.f90	/^  subroutine read_evc(/;"	s	module:hdf5_qe
read_grid_from_file	radial_grids.f90	/^subroutine read_grid_from_file(/;"	s	module:radial_grids
read_input	read_input.f90	/^MODULE read_input$/;"	m
read_input_file	read_input.f90	/^   SUBROUTINE read_input_file /;"	s	module:read_input
read_integer_array_attribute	qeh5_module.f90	/^  SUBROUTINE read_integer_array_attribute /;"	s	module:qeh5_base_module
read_integer_attribute	qeh5_module.f90	/^  SUBROUTINE read_integer_attribute /;"	s	module:qeh5_base_module
read_io_header	plot_io.f90	/^subroutine read_io_header(/;"	s
read_line	parser.f90	/^  SUBROUTINE read_line(/;"	s	module:parser
read_namelists	read_namelists.f90	/^     SUBROUTINE read_namelists(/;"	s	module:read_namelists_module
read_namelists_module	read_namelists.f90	/^MODULE read_namelists_module$/;"	m
read_ncpp	read_ncpp.f90	/^subroutine read_ncpp /;"	s
read_pseudo_addinfo	read_upf_v1.f90	/^subroutine read_pseudo_addinfo /;"	s	module:read_upf_v1_module
read_pseudo_gipaw	read_upf_v1.f90	/^SUBROUTINE read_pseudo_gipaw /;"	s	module:read_upf_v1_module
read_pseudo_gipaw_core_orbitals	read_upf_v1.f90	/^SUBROUTINE read_pseudo_gipaw_core_orbitals /;"	s	module:read_upf_v1_module
read_pseudo_gipaw_local	read_upf_v1.f90	/^SUBROUTINE read_pseudo_gipaw_local /;"	s	module:read_upf_v1_module
read_pseudo_gipaw_orbitals	read_upf_v1.f90	/^SUBROUTINE read_pseudo_gipaw_orbitals /;"	s	module:read_upf_v1_module
read_pseudo_header	read_upf_v1.f90	/^subroutine read_pseudo_header /;"	s	module:read_upf_v1_module
read_pseudo_local	read_upf_v1.f90	/^subroutine read_pseudo_local /;"	s	module:read_upf_v1_module
read_pseudo_mesh	read_upf_v1.f90	/^subroutine read_pseudo_mesh /;"	s	module:read_upf_v1_module
read_pseudo_mod	read_pseudo.f90	/^MODULE read_pseudo_mod$/;"	m
read_pseudo_nl	read_upf_v1.f90	/^subroutine read_pseudo_nl /;"	s	module:read_upf_v1_module
read_pseudo_nlcc	read_upf_v1.f90	/^subroutine read_pseudo_nlcc /;"	s	module:read_upf_v1_module
read_pseudo_ppinfo	read_upf_v1.f90	/^subroutine read_pseudo_ppinfo /;"	s	module:read_upf_v1_module
read_pseudo_pswfc	read_upf_v1.f90	/^subroutine read_pseudo_pswfc /;"	s	module:read_upf_v1_module
read_pseudo_rhoatom	read_upf_v1.f90	/^subroutine read_pseudo_rhoatom /;"	s	module:read_upf_v1_module
read_real_array_attribute	qeh5_module.f90	/^  SUBROUTINE read_real_array_attribute /;"	s	module:qeh5_base_module
read_real_attribute	qeh5_module.f90	/^  SUBROUTINE read_real_attribute /;"	s	module:qeh5_base_module
read_rho_hdf5	hdf5_qe.f90	/^  subroutine read_rho_hdf5(/;"	s	module:hdf5_qe
read_rhog	io_base.f90	/^    SUBROUTINE read_rhog /;"	s	module:io_base
read_string_attribute	qeh5_module.f90	/^  SUBROUTINE read_string_attribute(/;"	s	module:qeh5_base_module
read_upf	upf.f90	/^SUBROUTINE read_upf(/;"	s	module:upf_module
read_upf_full_wfc	read_upf_schema.f90	/^SUBROUTINE read_upf_full_wfc(/;"	s	module:read_upf_schema_module
read_upf_full_wfc	read_upf_v2.f90	/^   SUBROUTINE read_upf_full_wfc(/;"	s	module:read_upf_v2_module
read_upf_gipaw	read_upf_schema.f90	/^SUBROUTINE read_upf_gipaw(/;"	s	module:read_upf_schema_module
read_upf_gipaw	read_upf_v2.f90	/^   SUBROUTINE read_upf_gipaw(/;"	s	module:read_upf_v2_module
read_upf_header	read_upf_schema.f90	/^SUBROUTINE read_upf_header(/;"	s	module:read_upf_schema_module
read_upf_header	read_upf_v2.f90	/^SUBROUTINE read_upf_header(/;"	s	module:read_upf_v2_module
read_upf_mesh	read_upf_schema.f90	/^SUBROUTINE read_upf_mesh(/;"	s	module:read_upf_schema_module
read_upf_mesh	read_upf_v2.f90	/^   SUBROUTINE read_upf_mesh(/;"	s	module:read_upf_v2_module
read_upf_nonlocal	read_upf_schema.f90	/^SUBROUTINE read_upf_nonlocal(/;"	s	module:read_upf_schema_module
read_upf_nonlocal	read_upf_v2.f90	/^   SUBROUTINE read_upf_nonlocal(/;"	s	module:read_upf_v2_module
read_upf_paw	read_upf_schema.f90	/^SUBROUTINE read_upf_paw(/;"	s	module:read_upf_schema_module
read_upf_paw	read_upf_v2.f90	/^   SUBROUTINE read_upf_paw(/;"	s	module:read_upf_v2_module
read_upf_pswfc	read_upf_schema.f90	/^SUBROUTINE read_upf_pswfc(/;"	s	module:read_upf_schema_module
read_upf_pswfc	read_upf_v2.f90	/^   SUBROUTINE read_upf_pswfc(/;"	s	module:read_upf_v2_module
read_upf_schema	read_upf_schema.f90	/^SUBROUTINE read_upf_schema(/;"	s	module:read_upf_schema_module
read_upf_schema_module	read_upf_schema.f90	/^MODULE read_upf_schema_module$/;"	m
read_upf_spin_orb	read_upf_schema.f90	/^SUBROUTINE read_upf_spin_orb(/;"	s	module:read_upf_schema_module
read_upf_spin_orb	read_upf_v2.f90	/^   SUBROUTINE read_upf_spin_orb(/;"	s	module:read_upf_v2_module
read_upf_v1	read_upf_v1.f90	/^SUBROUTINE read_upf_v1 /;"	s	module:read_upf_v1_module
read_upf_v1_module	read_upf_v1.f90	/^      MODULE read_upf_v1_module$/;"	m
read_upf_v2	read_upf_v2.f90	/^   SUBROUTINE read_upf_v2(/;"	s	module:read_upf_v2_module
read_upf_v2_module	read_upf_v2.f90	/^MODULE read_upf_v2_module$/;"	m
read_uspp_module	read_uspp.f90	/^MODULE read_uspp_module$/;"	m
read_wfc	io_base.f90	/^    SUBROUTINE read_wfc(/;"	s	module:io_base
readbuffer_d	fsockets.f90	/^  SUBROUTINE readbuffer_d /;"	s	module:F90SOCKETS
readbuffer_dv	fsockets.f90	/^  SUBROUTINE readbuffer_dv(/;"	s	module:F90SOCKETS
readbuffer_i	fsockets.f90	/^  SUBROUTINE readbuffer_i /;"	s	module:F90SOCKETS
readbuffer_s	fsockets.f90	/^  SUBROUTINE readbuffer_s /;"	s	module:F90SOCKETS
readgth	gth.f90	/^subroutine readgth /;"	s	module:m_gth
readpp	read_pseudo.f90	/^SUBROUTINE readpp /;"	s	module:read_pseudo_mod
readrrkj	read_uspp.f90	/^  subroutine readrrkj(/;"	s	module:read_uspp_module
readvan	read_uspp.f90	/^  subroutine readvan(/;"	s	module:read_uspp_module
real_matrix_pointer	wannier_gw.f90	/^  TYPE real_matrix_pointer$/;"	t	module:wannier_gw
real_space	input_parameters.f90	/^          LOGICAL :: real_space /;"	v	module:input_parameters
real_space_beta	qes_types_module.f90	/^    LOGICAL :: real_space_beta$/;"	k	type:algorithmic_info_type
real_space_beta	qes_types_module.f90	/^    LOGICAL :: real_space_beta$/;"	k	type:electron_control_type
real_space_beta_ispresent	qes_types_module.f90	/^    LOGICAL  :: real_space_beta_ispresent /;"	k	type:algorithmic_info_type
real_space_beta_ispresent	qes_types_module.f90	/^    LOGICAL  :: real_space_beta_ispresent /;"	k	type:electron_control_type
real_space_q	qes_types_module.f90	/^    LOGICAL :: real_space_q$/;"	k	type:algorithmic_info_type
real_space_q	qes_types_module.f90	/^    LOGICAL :: real_space_q$/;"	k	type:electron_control_type
real_space_q_ispresent	qes_types_module.f90	/^    LOGICAL  :: real_space_q_ispresent /;"	k	type:electron_control_type
reciprocal_lattice	qes_types_module.f90	/^    TYPE(reciprocal_lattice_/;"	k	type:basis_set_type
reciprocal_lattice_type	qes_types_module.f90	/^  TYPE :: reciprocal_lattice_type$/;"	t	module:qes_types_module
recips	recips.f90	/^subroutine recips /;"	s
recvcount	tsvdw.f90	/^INTEGER, DIMENSION(:), ALLOCATABLE, PRIVATE :: recvcount /;"	v	module:tsvdw_module
recvec_subs	recvec_subs.f90	/^MODULE recvec_subs$/;"	m
redistwf	mp_wave.f90	/^SUBROUTINE redistwf(/;"	s	module:mp_wave
redistwfr	mp_wave.f90	/^SUBROUTINE redistwfr(/;"	s	module:mp_wave
ref_alat	input_parameters.f90	/^        REAL(DP) :: ref_alat /;"	v	module:input_parameters
ref_at	cell_base.f90	/^    REAL(DP) :: ref_at(/;"	v	module:cell_base
ref_bg	cell_base.f90	/^    REAL(DP) :: ref_bg(/;"	v	module:cell_base
ref_cell	input_parameters.f90	/^       LOGICAL   :: ref_cell /;"	v	module:input_parameters
ref_cell_base_init	cell_base.f90	/^  SUBROUTINE ref_cell_base_init(/;"	s	module:cell_base
ref_cell_units	input_parameters.f90	/^       CHARACTER(len=80) :: ref_cell_units /;"	v	module:input_parameters
ref_tpiba2	cell_base.f90	/^    REAL(DP) :: ref_tpiba2 /;"	v	module:cell_base
refg	input_parameters.f90	/^        REAL(DP) :: refg /;"	v	module:input_parameters
refold_pos	input_parameters.f90	/^        LOGICAL :: refold_pos$/;"	v	module:input_parameters
refold_pos	qes_types_module.f90	/^    LOGICAL :: refold_pos$/;"	k	type:ion_control_type
refold_pos_ispresent	qes_types_module.f90	/^    LOGICAL  :: refold_pos_ispresent /;"	k	type:ion_control_type
rel	pseudo_types.f90	/^     CHARACTER(len=6) :: rel=/;"	k	type:pseudo_upf
relaxz	input_parameters.f90	/^        LOGICAL  :: relaxz /;"	v	module:input_parameters
relaxz	qes_types_module.f90	/^    LOGICAL :: relaxz$/;"	k	type:gate_settings_type
relaxz_ispresent	qes_types_module.f90	/^    LOGICAL  :: relaxz_ispresent /;"	k	type:gate_settings_type
remainder	wannier_gw.f90	/^  INTEGER :: remainder!/;"	v	module:wannier_gw
remake_cell	latgen.f90	/^SUBROUTINE remake_cell(/;"	s
remove_comments_from_string	matches.f90	/^SUBROUTINE remove_comments_from_string(/;"	s
remove_constr_force	constraints_module.f90	/^   SUBROUTINE remove_constr_force(/;"	s	module:constraints_module
remove_constr_vec	constraints_module.f90	/^   SUBROUTINE remove_constr_vec(/;"	s	module:constraints_module
remove_rigid_rot	control_flags.f90	/^  LOGICAL, PUBLIC :: &$/;"	v	module:control_flags
remove_rigid_rot	input_parameters.f90	/^        LOGICAL :: remove_rigid_rot /;"	v	module:input_parameters
remove_rigid_rot	qes_types_module.f90	/^    LOGICAL :: remove_rigid_rot$/;"	k	type:ion_control_type
remove_rigid_rot_ispresent	qes_types_module.f90	/^    LOGICAL  :: remove_rigid_rot_ispresent /;"	k	type:ion_control_type
remove_tot_torque	remove_tot_torque.f90	/^SUBROUTINE remove_tot_torque(/;"	s
report	input_parameters.f90	/^        INTEGER  :: report /;"	v	module:input_parameters
report	noncol.f90	/^      npol,               & !  number of coordinates of wfc$/;"	v	module:noncollin_module
reset_Hubbard_ns	qexsd.f90	/^         SUBROUTINE reset_Hubbard_ns(/;"	s	subroutine:qexsd_init_dftU
reset_bfgs	bfgs_module.f90	/^   SUBROUTINE reset_bfgs(/;"	s	module:bfgs_module
reset_hubbard_J	qexsd.f90	/^         SUBROUTINE reset_hubbard_J(/;"	s	subroutine:qexsd_init_dftU
reset_hubbard_commons	qexsd.f90	/^         SUBROUTINE reset_hubbard_commons(/;"	s	subroutine:qexsd_init_dftU
reset_input_checks	input_parameters.f90	/^SUBROUTINE reset_input_checks(/;"	s	module:input_parameters
reset_mdiis	mdiis.f90	/^  SUBROUTINE reset_mdiis(/;"	s	module:mdiis
reset_starting_ns	qexsd.f90	/^         SUBROUTINE reset_starting_ns(/;"	s	subroutine:qexsd_init_dftU
restart	control_flags.f90	/^    lxdm    =.FALSE., & ! if .TRUE. compute XDM dispersion corrections$/;"	v	module:control_flags
restart_dir	io_files.f90	/^  FUNCTION restart_dir(/;"	f	module:io_files
restart_gww	wannier_gw.f90	/^  INTEGER :: restart_gww!/;"	v	module:wannier_gw
restart_mode	input_parameters.f90	/^        CHARACTER(len=80) :: restart_mode /;"	v	module:input_parameters
restart_mode	qes_types_module.f90	/^    CHARACTER(len=256) :: restart_mode$/;"	k	type:control_variables_type
restart_mode_allowed	input_parameters.f90	/^        CHARACTER(len=80) :: restart_mode_allowed(/;"	v	module:input_parameters
restart_p	autopilot.f90	/^  LOGICAL   :: restart_p /;"	v	module:autopilot
rgen	rgen.f90	/^SUBROUTINE rgen /;"	s
rgrid	atom.f90	/^  type(radial_grid_type), allocatable, target :: rgrid(/;"	v	module:atom
rho_at	pseudo_types.f90	/^     REAL(DP), POINTER :: rho_at(/;"	k	type:pseudo_upf
rho_atc	pseudo_types.f90	/^     REAL(DP), POINTER :: rho_atc(/;"	k	type:pseudo_upf
rho_g2r_1	fft_rho.f90	/^  SUBROUTINE rho_g2r_1 /;"	s	module:fft_rho
rho_g2r_2	fft_rho.f90	/^  SUBROUTINE rho_g2r_2 /;"	s	module:fft_rho
rho_g2r_sum_components	fft_rho.f90	/^  SUBROUTINE rho_g2r_sum_components /;"	s	module:fft_rho
rho_hdf5_write	hdf5_qe.f90	/^  TYPE(HDF5_type), save :: rho_hdf5_write,/;"	v	module:hdf5_qe
rho_r2g	fft_rho.f90	/^  SUBROUTINE rho_r2g /;"	s	module:fft_rho
rho_thr	input_parameters.f90	/^      REAL(DP) :: rho_thr /;"	v	module:input_parameters
rhombohedral	input_parameters.f90	/^        LOGICAL :: rhombohedral /;"	v	module:input_parameters
rhosad	tsvdw.f90	/^REAL(DP), DIMENSION(:), ALLOCATABLE, PRIVATE :: rhosad /;"	v	module:tsvdw_module
rhotot	tsvdw.f90	/^REAL(DP), DIMENSION(:), ALLOCATABLE, PRIVATE :: rhotot /;"	v	module:tsvdw_module
rinner	pseudo_types.f90	/^     REAL(DP), POINTER :: rinner(/;"	k	type:pseudo_upf
rkmesh	wannier_new.f90	/^     use_wannier,              &! if .TRUE. wannier functions are constructed$/;"	v	module:wannier_new
rloc	gth.f90	/^     real(dp) :: rloc,/;"	k	type:gth_parameters
rm1	radial_grids.f90	/^       sqr(:),  & ! the square root of the radial mesh$/;"	k	type:radial_grid_type
rm2	radial_grids.f90	/^       rm1(:),  & ! 1 \/ r$/;"	k	type:radial_grid_type
rm3	radial_grids.f90	/^       rm2(:),  & ! 1 \/ r**2$/;"	k	type:radial_grid_type
rmat	mdiis.f90	/^    REAL(DP), POINTER :: rmat(/;"	k	type:mdiis_type
rmax	pseudo_types.f90	/^     REAL(DP) :: rmax /;"	k	type:pseudo_upf
rmax	radial_grids.f90	/^       xmin,       & ! the minimum x$/;"	k	type:radial_grid_type
root	mp_world.f90	/^  INTEGER :: root /;"	v	module:mp_world
root_bgrp	mp_bands.f90	/^  INTEGER :: root_bgrp /;"	v	module:mp_bands
root_bgrp_id	mp_bands.f90	/^  INTEGER :: root_bgrp_id /;"	v	module:mp_bands
root_egrp	mp_exx.f90	/^  INTEGER :: root_egrp /;"	v	module:mp_exx
root_image	mp_images.f90	/^  INTEGER :: root_image=/;"	v	module:mp_images
root_orthopool	mp_pools.f90	/^  INTEGER :: root_orthopool /;"	v	module:mp_orthopools
root_pool	mp_pools.f90	/^  INTEGER :: root_pool /;"	v	module:mp_pools
rotate_a_b_c	bz_form.f90	/^               switch_b_c = .FALSE., &  !  and the coordinates are switched$/;"	k	type:bz
rotation	qes_types_module.f90	/^    TYPE(matrix_type) :: rotation$/;"	k	type:symmetry_type
rotation_damping	input_parameters.f90	/^        REAL(DP) :: rotation_damping /;"	v	module:input_parameters
rotation_dynamics	input_parameters.f90	/^        CHARACTER(len=80) :: rotation_dynamics /;"	v	module:input_parameters
rotmass	input_parameters.f90	/^        REAL(DP) :: rotmass /;"	v	module:input_parameters
routine	bspline.f90	/^  character(80)  :: routine$/;"	v	module:bspline
rrl	gth.f90	/^     real(dp), pointer :: rrl(/;"	k	type:gth_parameters
rule_dt	autopilot.f90	/^  REAL(DP) :: rule_dt(/;"	v	module:autopilot
rule_electron_damping	autopilot.f90	/^  REAL(DP)         :: rule_electron_damping(/;"	v	module:autopilot
rule_electron_dynamics	autopilot.f90	/^  CHARACTER(LEN=80) :: rule_electron_dynamics(/;"	v	module:autopilot
rule_electron_orthogonalization	autopilot.f90	/^  CHARACTER(LEN=80) :: rule_electron_orthogonalization(/;"	v	module:autopilot
rule_emass	autopilot.f90	/^  REAL(DP)         :: rule_emass(/;"	v	module:autopilot
rule_ion_damping	autopilot.f90	/^  REAL(DP)         :: rule_ion_damping(/;"	v	module:autopilot
rule_ion_dynamics	autopilot.f90	/^  CHARACTER(LEN=80) :: rule_ion_dynamics(/;"	v	module:autopilot
rule_ion_temperature	autopilot.f90	/^  CHARACTER(LEN=80) :: rule_ion_temperature(/;"	v	module:autopilot
rule_iprint	autopilot.f90	/^  INTEGER   :: rule_iprint(/;"	v	module:autopilot
rule_isave	autopilot.f90	/^  INTEGER   :: rule_isave(/;"	v	module:autopilot
rule_tempw	autopilot.f90	/^  REAL(DP) :: rule_tempw(/;"	v	module:autopilot
rule_tprint	autopilot.f90	/^  LOGICAL   :: rule_tprint(/;"	v	module:autopilot
run_dist	dist.f90	/^SUBROUTINE run_dist /;"	s
run_info	run_info.f90	/^MODULE run_info$/;"	m
ry_to_kelvin	constants.f90	/^  REAL(DP), PARAMETER :: ry_to_kelvin /;"	v	module:constants
sR	tsvdw.f90	/^REAL(DP), PRIVATE :: sR /;"	v	module:tsvdw_module
s_bse	wannier_gw.f90	/^  REAL(kind=DP) :: s_bse!/;"	v	module:wannier_gw
s_first_state	wannier_gw.f90	/^  INTEGER :: s_first_state!/;"	v	module:wannier_gw
s_g_lanczos	wannier_gw.f90	/^  REAL(kind=DP) :: s_g_lanczos!/;"	v	module:wannier_gw
s_last_state	wannier_gw.f90	/^  INTEGER :: s_last_state!/;"	v	module:wannier_gw
s_pmat	wannier_gw.f90	/^  REAL(kind=DP) :: s_pmat!/;"	v	module:wannier_gw
s_pola_lanczos	wannier_gw.f90	/^  REAL(kind=DP) :: s_pola_lanczos!/;"	v	module:wannier_gw
s_self_lanczos	wannier_gw.f90	/^  REAL(kind=DP) :: s_self_lanczos!/;"	v	module:wannier_gw
s_to_r1	cell_base.f90	/^        SUBROUTINE s_to_r1 /;"	s	module:cell_base
s_to_r1b	cell_base.f90	/^        SUBROUTINE s_to_r1b /;"	s	module:cell_base
s_to_r3	cell_base.f90	/^        SUBROUTINE s_to_r3 /;"	s	module:cell_base
saturate_q	xc_vdW_DF.f90	/^  SUBROUTINE saturate_q /;"	s	module:vdW_DF
save_vbox1_vres1	mdiis.f90	/^    SUBROUTINE save_vbox1_vres1(/;"	s	subroutine:update_by_mdiis
saverho	input_parameters.f90	/^        LOGICAL :: saverho /;"	v	module:input_parameters
scal6	mm_dispersion.f90	/^  REAL ( DP ) , PUBLIC :: scal6=/;"	v	module:london_module
scalarQuantity	qes_types_module.f90	/^    REAL(DP) :: scalarQuantity$/;"	k	type:scalarQuantity_type
scalarQuantity_type	qes_types_module.f90	/^  TYPE :: scalarQuantity_type$/;"	t	module:qes_types_module
scale_at	input_parameters.f90	/^      LOGICAL  :: scale_at=/;"	v	module:input_parameters
scalw	wave_base.f90	/^       REAL(DP) FUNCTION scalw(/;"	f	module:wave_base
scan_begin	read_upf_v1.f90	/^subroutine scan_begin /;"	s	module:read_upf_v1_module
scan_end	read_upf_v1.f90	/^subroutine scan_end /;"	s	module:read_upf_v1_module
scancxc_array	metagga.f90	/^subroutine scancxc_array(/;"	s
scancxc_array_spin	metagga.f90	/^subroutine scancxc_array_spin(/;"	s
scanxc_spin	metagga.f90	/^subroutine scanxc_spin(/;"	s
scdm	input_parameters.f90	/^        LOGICAL  :: scdm=/;"	v	module:input_parameters
scdmden	input_parameters.f90	/^        REAL(DP) :: localization_thr = 0.0_dp, scdmden=/;"	v	module:input_parameters
scdmgrd	input_parameters.f90	/^        REAL(DP) :: localization_thr = 0.0_dp, scdmden=1.0d0, scdmgrd=/;"	v	module:input_parameters
scf_conv	qes_types_module.f90	/^    TYPE(scf_conv_/;"	k	type:convergence_info_type
scf_conv	qes_types_module.f90	/^    TYPE(scf_conv_/;"	k	type:step_type
scf_conv_type	qes_types_module.f90	/^  TYPE :: scf_conv_type$/;"	t	module:qes_types_module
scf_error	control_flags.f90	/^    tr2,              &! the convergence threshold for potential$/;"	v	module:control_flags
scf_error	qes_types_module.f90	/^    REAL(DP) :: scf_error$/;"	k	type:scf_conv_type
scf_iter	bfgs_module.f90	/^   INTEGER :: &$/;"	v	module:bfgs_module
scf_must_converge	control_flags.f90	/^  LOGICAL, PUBLIC :: scf_must_converge$/;"	v	module:control_flags
scf_must_converge	input_parameters.f90	/^        LOGICAL :: scf_must_converge /;"	v	module:input_parameters
scissor	wannier_gw.f90	/^  REAL(kind=DP) :: scissor(/;"	v	module:wannier_gw
scnorm	bfgs_module.f90	/^   REAL(DP) FUNCTION scnorm(/;"	f	module:bfgs_module
scnorm1	bfgs_module.f90	/^   REAL(DP) FUNCTION scnorm1(/;"	f	module:bfgs_module
screening_parameter	funct.f90	/^  real(DP):: screening_parameter /;"	v	module:funct
screening_parameter	input_parameters.f90	/^        REAL(DP) :: screening_parameter /;"	v	module:input_parameters
screening_parameter	qes_types_module.f90	/^    REAL(DP) :: screening_parameter$/;"	k	type:hybrid_type
screening_parameter_ispresent	qes_types_module.f90	/^    LOGICAL  :: screening_parameter_ispresent /;"	k	type:hybrid_type
sdispls	tsvdw.f90	/^INTEGER, DIMENSION(:), ALLOCATABLE, PRIVATE :: sdispls /;"	v	module:tsvdw_module
searchBooleanData	read_upf_schema.f90	/^SUBROUTINE searchBooleanData(/;"	s	module:read_upf_schema_module
searchIntegerData	read_upf_schema.f90	/^SUBROUTINE searchIntegerData(/;"	s	module:read_upf_schema_module
searchRealData	read_upf_schema.f90	/^SUBROUTINE searchRealData(/;"	s	module:read_upf_schema_module
searchStringData	read_upf_schema.f90	/^SUBROUTINE searchStringData /;"	s	module:read_upf_schema_module
second_grid_i	wannier_gw.f90	/^  INTEGER :: second_grid_i!/;"	v	module:wannier_gw
second_grid_n	wannier_gw.f90	/^  INTEGER :: second_grid_n!/;"	v	module:wannier_gw
semifact	sph_bes.f90	/^integer function semifact(/;"	f
sendcount	tsvdw.f90	/^INTEGER, DIMENSION(:), ALLOCATABLE, PRIVATE :: sendcount /;"	v	module:tsvdw_module
seqopn	io_files.f90	/^subroutine seqopn /;"	s	module:io_files
serial_info	environment.f90	/^  SUBROUTINE serial_info /;"	s	module:environment
series	radial_grids.f90	/^subroutine series(/;"	s	module:radial_grids
set_TERMINATE_GRACEFULLY	set_signal.f90	/^SUBROUTINE set_TERMINATE_GRACEFULLY(/;"	s	module:set_signal
set_atom_coord	constraints_module.f90	/^      SUBROUTINE set_atom_coord(/;"	s	subroutine:init_constraint
set_auxiliary_flags	funct.f90	/^  subroutine set_auxiliary_flags$/;"	s	module:funct
set_bennett_proj	constraints_module.f90	/^      SUBROUTINE set_bennett_proj(/;"	s	subroutine:init_constraint
set_command_line	command_line_options.f90	/^  SUBROUTINE set_command_line /;"	s	module:command_line_options
set_coulomb_nonlocal	read_upf_v1.f90	/^  SUBROUTINE set_coulomb_nonlocal(/;"	s	module:read_upf_v1_module
set_dataset_name	qeh5_module.f90	/^  SUBROUTINE set_dataset_name(/;"	s	module:qeh5_base_module
set_dft_from_indices	funct.f90	/^  subroutine set_dft_from_indices(/;"	s	module:funct
set_dft_from_name	funct.f90	/^  subroutine set_dft_from_name(/;"	s	module:funct
set_dft_values	funct.f90	/^  logical function set_dft_values /;"	f	module:funct
set_distance	constraints_module.f90	/^      SUBROUTINE set_distance(/;"	s	subroutine:init_constraint
set_exx_fraction	funct.f90	/^  subroutine set_exx_fraction /;"	s	module:funct
set_finite_size_volume	funct.f90	/^  subroutine set_finite_size_volume(/;"	s	module:funct
set_gau_parameter	funct.f90	/^  subroutine set_gau_parameter /;"	s	module:funct
set_h_ainv	cell_base.f90	/^  SUBROUTINE set_h_ainv(/;"	s	module:cell_base
set_hubbard_l	set_hubbard_l.f90	/^FUNCTION set_hubbard_l(/;"	f
set_hubbard_n	set_hubbard_n.f90	/^FUNCTION set_hubbard_n(/;"	f
set_hyperslab	qeh5_module.f90	/^  SUBROUTINE set_hyperslab /;"	s	module:qeh5_base_module
set_index_hdf5	hdf5_qe.f90	/^  SUBROUTINE set_index_hdf5(/;"	s	module:hdf5_qe
set_label_type	bz_form.f90	/^SUBROUTINE set_label_type(/;"	s	module:bz_form
set_labels	qexsd.f90	/^         SUBROUTINE set_labels(/;"	s	subroutine:qexsd_init_dftU
set_nelup_neldw	electrons_base.f90	/^    subroutine set_nelup_neldw /;"	s	module:electrons_base
set_planar_angle	constraints_module.f90	/^      SUBROUTINE set_planar_angle(/;"	s	subroutine:init_constraint
set_random_seed	random_numbers.f90	/^    SUBROUTINE set_random_seed /;"	s	module:random_numbers
set_screening_parameter	funct.f90	/^  subroutine set_screening_parameter /;"	s	module:funct
set_signal	set_signal.f90	/^MODULE set_signal$/;"	m
set_signal_USR1	set_signal.f90	/^SUBROUTINE set_signal_USR1(/;"	s	module:set_signal
set_signal_action	set_signal.f90	/^SUBROUTINE set_signal_action(/;"	s	module:set_signal
set_sph_structure_factor	constraints_module.f90	/^      SUBROUTINE set_sph_structure_factor(/;"	s	subroutine:init_constraint
set_structure_factor	constraints_module.f90	/^      SUBROUTINE set_structure_factor(/;"	s	subroutine:init_constraint
set_time_step	timestep.f90	/^        SUBROUTINE set_time_step(/;"	s	module:time_step
set_torsional_angle	constraints_module.f90	/^      SUBROUTINE set_torsional_angle(/;"	s	subroutine:init_constraint
set_type_coord	constraints_module.f90	/^      SUBROUTINE set_type_coord(/;"	s	subroutine:init_constraint
set_upf_q	upf_to_internal.f90	/^SUBROUTINE set_upf_q /;"	s	module:upf_to_internal
setdqf	setqf.f90	/^SUBROUTINE setdqf(/;"	s
setlocq_gth	gth.f90	/^subroutine setlocq_gth(/;"	s	module:m_gth
setqfnew	setqf.f90	/^SUBROUTINE setqfnew(/;"	s
setup_file_property_hdf5	hdf5_qe.f90	/^  subroutine setup_file_property_hdf5(/;"	s	module:hdf5_qe
sgl	kind.f90	/^      INTEGER, PARAMETER :: sgl /;"	v	module:kinds
sic	input_parameters.f90	/^        CHARACTER(len=80) :: sic /;"	v	module:input_parameters
sic_alpha	input_parameters.f90	/^        REAL(DP) :: sic_alpha /;"	v	module:input_parameters
sic_epsilon	input_parameters.f90	/^        REAL(DP) :: sic_epsilon /;"	v	module:input_parameters
sigma_pen	input_parameters.f90	/^        REAL(DP) :: sigma_pen(/;"	v	module:input_parameters
signal_detected	set_signal.f90	/^FUNCTION signal_detected(/;"	f	module:set_signal
signal_trap_init	set_signal.f90	/^SUBROUTINE signal_trap_init$/;"	s	module:set_signal
simpson	simpsn.f90	/^SUBROUTINE simpson(/;"	s
simpson_cp90	simpsn.f90	/^SUBROUTINE simpson_cp90(/;"	s
sin_phi	paw_variables.f90	/^        REAL(DP),POINTER :: sin_phi(/;"	k	type:paw_radial_integrator
sin_th	paw_variables.f90	/^        REAL(DP),POINTER :: sin_th(/;"	k	type:paw_radial_integrator
size	hdf5_qe.f90	/^   INTEGER(HSIZE_T), DIMENSION(1:2) :: size$/;"	k	type:HDF5_type
size	qes_types_module.f90	/^    INTEGER :: size$/;"	k	type:equivalent_atoms_type
size	qes_types_module.f90	/^    INTEGER :: size$/;"	k	type:inputOccupations_type
size	qes_types_module.f90	/^    INTEGER :: size$/;"	k	type:integerVector_type
size	qes_types_module.f90	/^    INTEGER :: size$/;"	k	type:starting_ns_type
size	qes_types_module.f90	/^    INTEGER :: size$/;"	k	type:vector_type
slater	functionals.f90	/^subroutine slater /;"	s
slater1	functionals.f90	/^subroutine slater1(/;"	s
slater1_spin	lsda_functionals.f90	/^subroutine slater1_spin /;"	s
slaterKZK	functionals.f90	/^  subroutine slaterKZK /;"	s
slater_rxc	functionals.f90	/^subroutine slater_rxc /;"	s
slater_rxc_spin	lsda_functionals.f90	/^SUBROUTINE slater_rxc_spin /;"	s
slater_spin	lsda_functionals.f90	/^subroutine slater_spin /;"	s
slater_spin_vec	lsda_functionals.f90	/^subroutine slater_spin_vec(/;"	s
sm_not_set	read_namelists.f90	/^  REAL(DP), PARAMETER :: sm_not_set /;"	v	module:read_namelists_module
smallmem	control_flags.f90	/^  LOGICAL :: smallmem /;"	v	module:control_flags
smap	fft_base.f90	/^        TYPE (sticks_map) :: smap$/;"	v	module:fft_base
smearing	input_parameters.f90	/^        CHARACTER(len=80) :: smearing /;"	v	module:input_parameters
smearing	qes_types_module.f90	/^    CHARACTER(len=256) :: smearing$/;"	k	type:smearing_type
smearing	qes_types_module.f90	/^    TYPE(smearing_/;"	k	type:band_structure_type
smearing	qes_types_module.f90	/^    TYPE(smearing_/;"	k	type:bands_type
smearing_ispresent	qes_types_module.f90	/^    LOGICAL  :: smearing_ispresent /;"	k	type:band_structure_type
smearing_ispresent	qes_types_module.f90	/^    LOGICAL  :: smearing_ispresent /;"	k	type:bands_type
smearing_type	qes_types_module.f90	/^  TYPE :: smearing_type$/;"	t	module:qes_types_module
sogga	functionals.f90	/^subroutine sogga /;"	s
solve_mdiis	mdiis.f90	/^    SUBROUTINE solve_mdiis(/;"	s	subroutine:update_by_mdiis
somegaA	tsvdw.f90	/^INTEGER, DIMENSION(:,:,:), ALLOCATABLE, PRIVATE :: somegaA /;"	v	module:tsvdw_module
somegaAr	tsvdw.f90	/^INTEGER, DIMENSION(:,:,:), ALLOCATABLE, PRIVATE :: somegaAr /;"	v	module:tsvdw_module
sort_tau	ions_base.f90	/^    SUBROUTINE sort_tau(/;"	s	module:ions_base
sp_pos	input_parameters.f90	/^        INTEGER,  ALLOCATABLE :: sp_pos(/;"	v	module:input_parameters
sp_vel	input_parameters.f90	/^        INTEGER,  ALLOCATABLE :: sp_vel(/;"	v	module:input_parameters
space_group	input_parameters.f90	/^        INTEGER :: space_group /;"	v	module:input_parameters
space_group	qes_types_module.f90	/^    INTEGER :: space_group$/;"	k	type:symmetries_type
space_group	qes_types_module.f90	/^    INTEGER :: space_group$/;"	k	type:wyckoff_positions_type
space_group	space_group.f90	/^MODULE space_group$/;"	m
spcutAmax	tsvdw.f90	/^REAL(DP), PRIVATE :: spcutAmax /;"	v	module:tsvdw_module
spdata	tsvdw.f90	/^REAL(DP), DIMENSION(:,:), ALLOCATABLE, PRIVATE :: spdata /;"	v	module:tsvdw_module
spdrho	tsvdw.f90	/^REAL(DP), DIMENSION(:,:), ALLOCATABLE, PRIVATE :: spdrho /;"	v	module:tsvdw_module
specie	qes_types_module.f90	/^    CHARACTER(len=256) :: specie$/;"	k	type:HubbardCommon_type
specie	qes_types_module.f90	/^    CHARACTER(len=256) :: specie$/;"	k	type:HubbardJ_type
specie	qes_types_module.f90	/^    CHARACTER(len=256) :: specie$/;"	k	type:Hubbard_ns_type
specie	qes_types_module.f90	/^    CHARACTER(len=256) :: specie$/;"	k	type:starting_ns_type
species	qes_types_module.f90	/^    TYPE(species_/;"	k	type:atomic_species_type
species_type	qes_types_module.f90	/^  TYPE :: species_type$/;"	t	module:qes_types_module
spgrd	tsvdw.f90	/^REAL(DP), DIMENSION(:,:), ALLOCATABLE, PRIVATE :: spgrd /;"	v	module:tsvdw_module
sph_bes	sph_bes.f90	/^subroutine sph_bes /;"	s
sph_dbes	sph_dbes.f90	/^SUBROUTINE sph_dbes(/;"	s
sph_dbes1	sph_dbes.f90	/^SUBROUTINE sph_dbes1 /;"	s
spin	qes_types_module.f90	/^    INTEGER :: spin$/;"	k	type:Hubbard_ns_type
spin	qes_types_module.f90	/^    INTEGER :: spin$/;"	k	type:electronicPolarization_type
spin	qes_types_module.f90	/^    INTEGER :: spin$/;"	k	type:occupations_type
spin	qes_types_module.f90	/^    INTEGER :: spin$/;"	k	type:starting_ns_type
spin	qes_types_module.f90	/^    TYPE(spin_/;"	k	type:input_type
spin_constraints	qes_types_module.f90	/^    CHARACTER(len=256) :: spin_constraints$/;"	k	type:spin_constraints_type
spin_constraints	qes_types_module.f90	/^    TYPE(spin_constraints_/;"	k	type:input_type
spin_constraints_ispresent	qes_types_module.f90	/^    LOGICAL  :: spin_constraints_ispresent /;"	k	type:input_type
spin_constraints_type	qes_types_module.f90	/^  TYPE :: spin_constraints_type$/;"	t	module:qes_types_module
spin_factor	qes_types_module.f90	/^    REAL(DP) :: spin_factor$/;"	k	type:inputOccupations_type
spin_ispresent	qes_types_module.f90	/^    LOGICAL  :: spin_ispresent /;"	k	type:electronicPolarization_type
spin_ispresent	qes_types_module.f90	/^    LOGICAL :: spin_ispresent /;"	k	type:occupations_type
spin_phi	qes_types_module.f90	/^    REAL(DP) :: spin_phi$/;"	k	type:species_type
spin_phi_ispresent	qes_types_module.f90	/^    LOGICAL  :: spin_phi_ispresent /;"	k	type:species_type
spin_teta	qes_types_module.f90	/^    REAL(DP) :: spin_teta$/;"	k	type:species_type
spin_teta_ispresent	qes_types_module.f90	/^    LOGICAL  :: spin_teta_ispresent /;"	k	type:species_type
spin_type	qes_types_module.f90	/^  TYPE :: spin_type$/;"	t	module:qes_types_module
spinorbit	qes_types_module.f90	/^    LOGICAL :: spinorbit$/;"	k	type:band_structure_type
spinorbit	qes_types_module.f90	/^    LOGICAL :: spinorbit$/;"	k	type:magnetization_type
spinorbit	qes_types_module.f90	/^    LOGICAL :: spinorbit$/;"	k	type:spin_type
spli2d	bspline.f90	/^  subroutine spli2d(/;"	s	module:bspline
spli3d	bspline.f90	/^  subroutine spli3d(/;"	s	module:bspline
spline	splinelib.f90	/^    SUBROUTINE spline(/;"	s	module:splinelib
spline_interpolation	xc_rVV10.f90	/^SUBROUTINE spline_interpolation /;"	s	module:rVV10
spline_interpolation	xc_vdW_DF.f90	/^  SUBROUTINE spline_interpolation /;"	s	module:vdW_DF
spline_ps	input_parameters.f90	/^        LOGICAL :: spline_ps /;"	v	module:input_parameters
splinelib	splinelib.f90	/^MODULE splinelib$/;"	m
splint	splinelib.f90	/^    FUNCTION splint(/;"	f	module:splinelib
splint_deriv	splinelib.f90	/^    FUNCTION splint_deriv(/;"	f	module:splinelib
splitig	mp_wave.f90	/^      SUBROUTINE splitig(/;"	s	module:mp_wave
splitkg	mp_wave.f90	/^      SUBROUTINE splitkg /;"	s	module:mp_wave
splitwf	mp_wave.f90	/^      SUBROUTINE splitwf /;"	s	module:mp_wave
sprho	tsvdw.f90	/^REAL(DP), DIMENSION(:,:), ALLOCATABLE, PRIVATE :: sprho /;"	v	module:tsvdw_module
sqr	radial_grids.f90	/^       rab(:),  & ! d r(x) \/ d x where x is the linear grid$/;"	k	type:radial_grid_type
sqrt2	constants.f90	/^  REAL(DP), PARAMETER :: sqrt2 /;"	v	module:constants
sqrtpi	constants.f90	/^  REAL(DP), PARAMETER :: sqrtpi /;"	v	module:constants
sqrtpm1	constants.f90	/^  REAL(DP), PARAMETER :: sqrtpm1=/;"	v	module:constants
start_exx	funct.f90	/^  subroutine start_exx$/;"	s	module:funct
starting_atomic_velocities	qes_types_module.f90	/^    TYPE(matrix_type) :: starting_atomic_velocities$/;"	k	type:input_type
starting_atomic_velocities_ispresent	qes_types_module.f90	/^    LOGICAL  :: starting_atomic_velocities_ispresent /;"	k	type:input_type
starting_charge	input_parameters.f90	/^        REAL(DP) :: starting_charge(/;"	v	module:input_parameters
starting_k_points	qes_types_module.f90	/^    TYPE(k_points_IBZ_type) :: starting_k_points$/;"	k	type:band_structure_type
starting_magnetization	input_parameters.f90	/^        REAL(DP) :: starting_magnetization(/;"	v	module:input_parameters
starting_magnetization	qes_types_module.f90	/^    REAL(DP) :: starting_magnetization$/;"	k	type:species_type
starting_magnetization_ispresent	qes_types_module.f90	/^    LOGICAL  :: starting_magnetization_ispresent /;"	k	type:species_type
starting_ns	qes_types_module.f90	/^    REAL(DP), DIMENSION(:), ALLOCATABLE :: starting_ns$/;"	k	type:starting_ns_type
starting_ns	qes_types_module.f90	/^    TYPE(starting_ns_/;"	k	type:dftU_type
starting_ns_eigenvalue	input_parameters.f90	/^        REAL(DP) :: starting_ns_eigenvalue(/;"	v	module:input_parameters
starting_ns_ispresent	qes_types_module.f90	/^    LOGICAL  :: starting_ns_ispresent /;"	k	type:dftU_type
starting_ns_type	qes_types_module.f90	/^  TYPE :: starting_ns_type$/;"	t	module:qes_types_module
starting_spin_angle	input_parameters.f90	/^        LOGICAL  :: starting_spin_angle=/;"	v	module:input_parameters
startingpot	input_parameters.f90	/^        CHARACTER(len=80) :: startingpot /;"	v	module:input_parameters
startingwfc	input_parameters.f90	/^        CHARACTER(len=80) :: startingwfc /;"	v	module:input_parameters
status	qes_types_module.f90	/^    INTEGER :: status$/;"	k	type:espresso_type
status_ispresent	qes_types_module.f90	/^    LOGICAL  :: status_ispresent /;"	k	type:espresso_type
stdin	io_global.f90	/^  INTEGER, PARAMETER :: stdin /;"	v	module:io_global
stdout	io_global.f90	/^  INTEGER :: stdout /;"	v	module:io_global
step	bfgs_module.f90	/^      hinv_block(:,:),   &$/;"	v	module:bfgs_module
step	qes_types_module.f90	/^    TYPE(step_/;"	k	type:espresso_type
step_counter	qexsd.f90	/^  INTEGER                                      :: step_counter$/;"	v	module:qexsd_module
step_ispresent	qes_types_module.f90	/^    LOGICAL  :: step_ispresent /;"	k	type:espresso_type
step_old	bfgs_module.f90	/^      step(:),           &! the (new) search direction (normalized NR step)$/;"	v	module:bfgs_module
step_pen	input_parameters.f90	/^        LOGICAL :: step_pen=/;"	v	module:input_parameters
step_rad	input_parameters.f90	/^      REAL(DP) :: step_rad(/;"	v	module:input_parameters
step_type	qes_types_module.f90	/^  TYPE :: step_type$/;"	t	module:qes_types_module
steps	qexsd.f90	/^  TYPE ( step_type),ALLOCATABLE                :: steps(/;"	v	module:qexsd_module
stop_exx	funct.f90	/^  subroutine stop_exx$/;"	s	module:funct
stopped_by_user	check_stop.f90	/^  LOGICAL :: stopped_by_user /;"	v	module:check_stop
stres_london	mm_dispersion.f90	/^   FUNCTION stres_london /;"	f	module:london_module
stress	qes_types_module.f90	/^    LOGICAL :: stress$/;"	k	type:control_variables_type
stress	qes_types_module.f90	/^    TYPE(matrix_type) :: stress$/;"	k	type:output_type
stress	qes_types_module.f90	/^    TYPE(matrix_type) :: stress$/;"	k	type:step_type
stress_ispresent	qes_types_module.f90	/^    LOGICAL  :: stress_ispresent /;"	k	type:output_type
stress_ispresent	qes_types_module.f90	/^    LOGICAL  :: stress_ispresent /;"	k	type:step_type
stress_rVV10	xc_rVV10.f90	/^  SUBROUTINE stress_rVV10(/;"	s	module:rVV10
stress_rVV10_gradient	xc_rVV10.f90	/^   SUBROUTINE stress_rVV10_gradient /;"	s	module:rVV10
stress_rVV10_kernel	xc_rVV10.f90	/^   SUBROUTINE stress_rVV10_kernel /;"	s	module:rVV10
stress_vdW_DF	xc_vdW_DF.f90	/^  SUBROUTINE stress_vdW_DF /;"	s	module:vdW_DF
stress_vdW_DF_gradient	xc_vdW_DF.f90	/^  SUBROUTINE stress_vdW_DF_gradient /;"	s	module:vdW_DF
stress_vdW_DF_kernel	xc_vdW_DF.f90	/^  SUBROUTINE stress_vdW_DF_kernel /;"	s	module:vdW_DF
stride	qeh5_module.f90	/^     INTEGER(HSIZE_T),ALLOCATABLE  ::  offset(:), count(:), stride(/;"	k	type:qeh5_dataspace
sup_spacegroup	wyckoff.f90	/^   SUBROUTINE sup_spacegroup(/;"	s	module:wyckoff
svn_revision	version.f90	/^  CHARACTER (LEN=12) :: svn_revision /;"	v	module:global_version
sw_len	input_parameters.f90	/^          INTEGER :: sw_len$/;"	v	module:input_parameters
switch_a_b	bz_form.f90	/^    LOGICAL :: switch_a_b /;"	k	type:bz
switch_b_c	bz_form.f90	/^    LOGICAL :: switch_a_b = .FALSE., &  !  If true the axis are rotated$/;"	k	type:bz
sym_brav	space_group.f90	/^   SUBROUTINE sym_brav(/;"	s	module:space_group
symmetries	qes_types_module.f90	/^    TYPE(symmetries_/;"	k	type:output_type
symmetries_ispresent	qes_types_module.f90	/^    LOGICAL  :: symmetries_ispresent /;"	k	type:output_type
symmetries_type	qes_types_module.f90	/^  TYPE :: symmetries_type$/;"	t	module:qes_types_module
symmetry	qes_types_module.f90	/^    TYPE(symmetry_/;"	k	type:symmetries_type
symmetry_flags	qes_types_module.f90	/^    TYPE(symmetry_flags_/;"	k	type:input_type
symmetry_flags_ispresent	qes_types_module.f90	/^    LOGICAL  :: symmetry_flags_ispresent /;"	k	type:input_type
symmetry_flags_type	qes_types_module.f90	/^  TYPE :: symmetry_flags_type$/;"	t	module:qes_types_module
symmetry_type	qes_types_module.f90	/^  TYPE :: symmetry_type$/;"	t	module:qes_types_module
system	input_parameters.f90	/^        NAMELIST \/ system /;"	n	module:input_parameters
system_bcast	read_namelists.f90	/^     SUBROUTINE system_bcast(/;"	s	module:read_namelists_module
system_checkin	read_namelists.f90	/^     SUBROUTINE system_checkin(/;"	s	module:read_namelists_module
system_defaults	read_namelists.f90	/^     SUBROUTINE system_defaults(/;"	s	module:read_namelists_module
t	paw_variables.f90	/^        INTEGER :: t /;"	k	type:paw_info
t_gauss	input_parameters.f90	/^      LOGICAL  :: t_gauss /;"	v	module:input_parameters
tabps	input_parameters.f90	/^        LOGICAL :: tabps /;"	v	module:input_parameters
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:BerryPhaseOutput_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:HubbardCommon_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:HubbardJ_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:Hubbard_ns_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:algorithmic_info_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:atom_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:atomic_constraint_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:atomic_constraints_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:atomic_positions_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:atomic_species_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:atomic_structure_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:band_structure_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:bands_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:basisSetItem_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:basis_set_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:basis_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:bfgs_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:boundary_conditions_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:cell_control_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:cell_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:clock_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:closed_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:control_variables_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:convergence_info_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:created_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:creator_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:dftU_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:dft_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:dipoleOutput_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:ekin_functional_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:electric_field_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:electron_control_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:electronicPolarization_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:equivalent_atoms_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:esm_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:espresso_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:finiteFieldOut_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:gateInfo_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:gate_settings_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:general_info_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:hybrid_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:info_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:inputOccupations_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:input_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:integerMatrix_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:integerVector_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:ion_control_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:ionicPolarization_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:k_point_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:k_points_IBZ_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:ks_energies_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:magnetization_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:matrix_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:md_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:monkhorst_pack_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:occupations_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:opt_conv_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:outputElectricField_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:outputPBC_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:output_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:parallel_info_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:phase_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:polarization_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:qpoint_grid_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:reciprocal_lattice_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:scalarQuantity_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:scf_conv_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:smearing_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:species_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:spin_constraints_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:spin_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:starting_ns_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:step_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:symmetries_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:symmetry_flags_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:symmetry_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:timing_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:total_energy_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:vdW_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:vector_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:wyckoff_positions_type
tagname	qes_types_module.f90	/^    CHARACTER(len=100) :: tagname$/;"	k	type:xml_format_type
tapos	input_parameters.f90	/^        LOGICAL  :: tapos /;"	v	module:input_parameters
target_magnetization	qes_types_module.f90	/^    REAL(DP), DIMENSION(3) :: target_magnetization$/;"	k	type:spin_constraints_type
target_magnetization_ispresent	qes_types_module.f90	/^    LOGICAL  :: target_magnetization_ispresent /;"	k	type:spin_constraints_type
taspc	input_parameters.f90	/^        LOGICAL   :: taspc /;"	v	module:input_parameters
tau	ions_base.f90	/^      REAL(DP), ALLOCATABLE :: tau(/;"	v	module:ions_base
tau_format	ions_base.f90	/^      CHARACTER(LEN=80)     :: tau_format /;"	v	module:ions_base
tau_mask	qmmm.f90	/^  INTEGER, ALLOCATABLE :: tau_mask(/;"	v	module:qmmm
tau_mm	qmmm.f90	/^  REAL(DP), ALLOCATABLE :: tau_mm(/;"	v	module:qmmm
tau_srt	ions_base.f90	/^      REAL(DP), ALLOCATABLE :: tau_srt(/;"	v	module:ions_base
tau_xc	funct.f90	/^subroutine tau_xc /;"	s	module:funct
tau_xc_array	funct.f90	/^subroutine tau_xc_array /;"	s	module:funct
tau_xc_array_spin	funct.f90	/^subroutine tau_xc_array_spin /;"	s	module:funct
tau_xc_spin	funct.f90	/^subroutine tau_xc_spin /;"	s	module:funct
taui	ions_base.f90	/^      REAL(DP), ALLOCATABLE :: taui(/;"	v	module:ions_base
taurdr	control_flags.f90	/^  LOGICAL :: taurdr /;"	v	module:control_flags
tautot	wyckoff.f90	/^REAL(DP), ALLOCATABLE :: tautot(/;"	v	module:wyckoff
tavel	input_parameters.f90	/^        LOGICAL  :: tavel /;"	v	module:input_parameters
tb09cxc	metagga.f90	/^subroutine tb09cxc(/;"	s
tbeg	control_flags.f90	/^  LOGICAL :: tbeg /;"	v	module:control_flags
tbeta_smoothing	control_flags.f90	/^  LOGICAL,          PUBLIC :: tbeta_smoothing=/;"	v	module:control_flags
tbeta_smoothing	input_parameters.f90	/^        LOGICAL :: tbeta_smoothing /;"	v	module:input_parameters
tbeta_smoothing	qes_types_module.f90	/^    LOGICAL :: tbeta_smoothing$/;"	k	type:electron_control_type
tcap	control_flags.f90	/^  LOGICAL  :: tcap /;"	v	module:control_flags
tcell	input_parameters.f90	/^        LOGICAL   :: tcell /;"	v	module:input_parameters
tcell_base_init	cell_base.f90	/^        LOGICAL :: tcell_base_init /;"	v	module:cell_base
tcg	input_parameters.f90	/^        LOGICAL :: tcg /;"	v	module:input_parameters
tconstr	input_parameters.f90	/^        LOGICAL   :: tconstr /;"	v	module:input_parameters
tconvthrs	control_flags.f90	/^  TYPE (convergence_criteria) :: tconvthrs$/;"	v	module:control_flags
tcoulombp	pseudo_types.f90	/^     LOGICAL :: tcoulombp /;"	k	type:pseudo_upf
tcp	control_flags.f90	/^  LOGICAL  :: tcp /;"	v	module:control_flags
tcpbo	input_parameters.f90	/^        LOGICAL :: tcpbo /;"	v	module:input_parameters
tddfpt	control_flags.f90	/^  LOGICAL :: tddfpt /;"	v	module:control_flags
tdebug	ions_base.f90	/^      LOGICAL, PRIVATE :: tdebug /;"	v	module:ions_base
tefield	input_parameters.f90	/^        LOGICAL :: tefield /;"	v	module:input_parameters
tefield2	input_parameters.f90	/^          LOGICAL :: tefield2 /;"	v	module:input_parameters
telectrons_base_initval	electrons_base.f90	/^      LOGICAL :: telectrons_base_initval /;"	v	module:electrons_base
temph	input_parameters.f90	/^        REAL(DP) :: temph /;"	v	module:input_parameters
tempw	input_parameters.f90	/^        REAL(DP) :: tempw /;"	v	module:input_parameters
tempw	qes_types_module.f90	/^    REAL(DP) :: tempw$/;"	k	type:md_type
terminate_bfgs	bfgs_module.f90	/^   SUBROUTINE terminate_bfgs(/;"	s	module:bfgs_module
test_input_xml	test_input_file.f90	/^LOGICAL FUNCTION test_input_xml /;"	f
textfor	control_flags.f90	/^  LOGICAL,          PUBLIC :: textfor /;"	v	module:control_flags
tf_inp	input_parameters.f90	/^        LOGICAL   :: tf_inp /;"	v	module:input_parameters
tfirst	control_flags.f90	/^  LOGICAL :: tfirst /;"	v	module:control_flags
tfor	control_flags.f90	/^  LOGICAL :: tfor /;"	v	module:control_flags
tforces	input_parameters.f90	/^        LOGICAL   :: tforces /;"	v	module:input_parameters
tgrand	input_parameters.f90	/^        LOGICAL :: tgrand /;"	v	module:input_parameters
thdyn	control_flags.f90	/^  LOGICAL :: thdyn /;"	v	module:control_flags
thetas_to_uk	xc_rVV10.f90	/^subroutine thetas_to_uk(/;"	s	module:rVV10
thetas_to_uk	xc_vdW_DF.f90	/^  SUBROUTINE thetas_to_uk /;"	s	module:vdW_DF
thres	wannier_gw.f90	/^     REAL(kind=DP) :: thres!/;"	k	type:optimal_options
time_reversal	qes_types_module.f90	/^    LOGICAL :: time_reversal$/;"	k	type:info_type
time_reversal_ispresent	qes_types_module.f90	/^    LOGICAL :: time_reversal_ispresent /;"	k	type:info_type
time_step	timestep.f90	/^      MODULE time_step$/;"	m
timestep	qes_types_module.f90	/^    REAL(DP) :: timestep$/;"	k	type:md_type
timing	control_flags.f90	/^  LOGICAL :: timing /;"	v	module:control_flags
timing_info	qes_types_module.f90	/^    TYPE(timing_type) :: timing_info$/;"	k	type:espresso_type
timing_info_ispresent	qes_types_module.f90	/^    LOGICAL  :: timing_info_ispresent /;"	k	type:espresso_type
timing_type	qes_types_module.f90	/^  TYPE :: timing_type$/;"	t	module:qes_types_module
tinit	check_stop.f90	/^  LOGICAL :: tinit /;"	v	module:check_stop
tions_base_init	ions_base.f90	/^      LOGICAL :: tions_base_init /;"	v	module:ions_base
tionstep	control_flags.f90	/^  LOGICAL :: tionstep /;"	v	module:control_flags
tionvel	input_parameters.f90	/^        LOGICAL   :: tionvel /;"	v	module:input_parameters
title	environment.f90	/^  CHARACTER(LEN=75) :: title$/;"	v	module:environment
title	input_parameters.f90	/^        CHARACTER(len=80) :: title /;"	v	module:input_parameters
title	qes_types_module.f90	/^    CHARACTER(len=256) :: title$/;"	k	type:control_variables_type
title	run_info.f90	/^  CHARACTER(LEN=75) :: title=/;"	v	module:run_info
tk_inp	input_parameters.f90	/^        LOGICAL :: tk_inp /;"	v	module:input_parameters
tkpoints	input_parameters.f90	/^        LOGICAL   :: tkpoints /;"	v	module:input_parameters
tksout	input_parameters.f90	/^        LOGICAL   :: tksout /;"	v	module:input_parameters
tksw	control_flags.f90	/^  LOGICAL :: tksw /;"	v	module:control_flags
tlast	control_flags.f90	/^  LOGICAL :: tlast /;"	v	module:control_flags
tmp_buf	qmmm.f90	/^  REAL(DP), ALLOCATABLE  :: tmp_buf(/;"	v	module:qmmm
tmp_dir	io_files.f90	/^  CHARACTER(len=256) :: tmp_dir /;"	v	module:io_files
tnosee	control_flags.f90	/^  LOGICAL :: tnosee /;"	v	module:control_flags
tnoseh	control_flags.f90	/^  LOGICAL :: tnoseh /;"	v	module:control_flags
tnosep	control_flags.f90	/^  LOGICAL  :: tnosep /;"	v	module:control_flags
tocc	input_parameters.f90	/^        LOGICAL   :: tocc /;"	v	module:input_parameters
tolerance	qes_types_module.f90	/^    REAL(DP) :: tolerance$/;"	k	type:atomic_constraints_type
tolp	control_flags.f90	/^  REAL(DP) :: tolp /;"	v	module:control_flags
tolp	input_parameters.f90	/^        REAL(DP) :: tolp /;"	v	module:input_parameters
tolp	qes_types_module.f90	/^    REAL(DP) :: tolp$/;"	k	type:md_type
tolw	input_parameters.f90	/^          REAL(DP) :: tolw$/;"	v	module:input_parameters
tortho	control_flags.f90	/^  LOGICAL :: tortho /;"	v	module:control_flags
tot_charge	input_parameters.f90	/^        REAL(DP):: tot_charge /;"	v	module:input_parameters
tot_charge	qes_types_module.f90	/^    REAL(DP) :: tot_charge$/;"	k	type:bands_type
tot_charge_ispresent	qes_types_module.f90	/^    LOGICAL  :: tot_charge_ispresent /;"	k	type:bands_type
tot_magnetization	input_parameters.f90	/^        REAL(DP) :: tot_magnetization /;"	v	module:input_parameters
tot_magnetization	qes_types_module.f90	/^    REAL(DP) :: tot_magnetization$/;"	k	type:bands_type
tot_magnetization_ispresent	qes_types_module.f90	/^    LOGICAL  :: tot_magnetization_ispresent /;"	k	type:bands_type
total	qes_types_module.f90	/^    REAL(DP) :: total$/;"	k	type:magnetization_type
total	qes_types_module.f90	/^    TYPE(clock_type) :: total$/;"	k	type:timing_type
totalLength	qes_types_module.f90	/^    TYPE(scalarQuantity_type) :: totalLength$/;"	k	type:dipoleOutput_type
totalPhase	qes_types_module.f90	/^    TYPE(phase_type) :: totalPhase$/;"	k	type:BerryPhaseOutput_type
totalPolarization	qes_types_module.f90	/^    TYPE(polarization_type) :: totalPolarization$/;"	k	type:BerryPhaseOutput_type
total_core_energy	paw_variables.f90	/^    REAL(DP) :: total_core_energy /;"	v	module:paw_variables
total_energy	qes_types_module.f90	/^    TYPE(total_energy_/;"	k	type:output_type
total_energy	qes_types_module.f90	/^    TYPE(total_energy_/;"	k	type:step_type
total_energy_term	qes_types_module.f90	/^    REAL(DP) :: total_energy_term$/;"	k	type:vdW_type
total_energy_term_ispresent	qes_types_module.f90	/^    LOGICAL  :: total_energy_term_ispresent /;"	k	type:vdW_type
total_energy_type	qes_types_module.f90	/^  TYPE :: total_energy_type$/;"	t	module:qes_types_module
tpawp	pseudo_types.f90	/^     LOGICAL  :: tpawp /;"	k	type:pseudo_upf
tpi	constants.f90	/^  REAL(DP), PARAMETER :: tpi /;"	v	module:constants
tpiba	cell_base.f90	/^    REAL(DP) :: tpiba /;"	v	module:cell_base
tpiba2	cell_base.f90	/^    REAL(DP) :: tpiba  = 0.0_DP, tpiba2 /;"	v	module:cell_base
tpre	control_flags.f90	/^  LOGICAL :: tpre /;"	v	module:control_flags
tprint	control_flags.f90	/^  LOGICAL :: tprint /;"	v	module:control_flags
tprnfor	control_flags.f90	/^  LOGICAL :: tprnfor /;"	v	module:control_flags
tprnfor	input_parameters.f90	/^        LOGICAL :: tprnfor /;"	v	module:input_parameters
tps	timestep.f90	/^        REAL(DP)  :: tps /;"	v	module:time_step
tpsscc_spin	metagga.f90	/^subroutine tpsscc_spin(/;"	s
tpsscx_spin	metagga.f90	/^subroutine tpsscx_spin(/;"	s
tpsscxc	metagga.f90	/^subroutine tpsscxc(/;"	s
tq_smoothing	control_flags.f90	/^  LOGICAL,          PUBLIC :: tq_smoothing=/;"	v	module:control_flags
tq_smoothing	input_parameters.f90	/^        LOGICAL :: tq_smoothing /;"	v	module:input_parameters
tq_smoothing	qes_types_module.f90	/^    LOGICAL :: tq_smoothing$/;"	k	type:electron_control_type
tqmmm	input_parameters.f90	/^        LOGICAL :: tqmmm /;"	v	module:input_parameters
tqr	control_flags.f90	/^  LOGICAL,          PUBLIC :: tqr=/;"	v	module:control_flags
tqr	input_parameters.f90	/^        LOGICAL :: tqr /;"	v	module:input_parameters
tr2	control_flags.f90	/^    mixing_beta,      &! the mixing parameter$/;"	v	module:control_flags
tr2_init	control_flags.f90	/^  REAL(DP), PUBLIC  :: &$/;"	v	module:control_flags
tr2_multi	control_flags.f90	/^    tr2_init,         &! initial value of tr2 for adaptive thresholds$/;"	v	module:control_flags
tr_min_hit	bfgs_module.f90	/^      gdiis_iter,        &! number of gdiis iterations$/;"	v	module:bfgs_module
trane	control_flags.f90	/^  LOGICAL  :: trane /;"	v	module:control_flags
tranp	control_flags.f90	/^  LOGICAL  :: tranp(/;"	v	module:control_flags
tranp	input_parameters.f90	/^        LOGICAL   :: tranp(/;"	v	module:input_parameters
transform_label_coord	bz_form.f90	/^SUBROUTINE transform_label_coord(/;"	s	module:bz_form
trd_ht	input_parameters.f90	/^       LOGICAL   :: trd_ht /;"	v	module:input_parameters
treinit_gvecs	control_flags.f90	/^  LOGICAL,          PUBLIC :: treinit_gvecs /;"	v	module:control_flags
treinit_gvecs	input_parameters.f90	/^        LOGICAL :: treinit_gvecs /;"	v	module:input_parameters
trescalee	control_flags.f90	/^  LOGICAL :: trescalee /;"	v	module:control_flags
trhor	control_flags.f90	/^  LOGICAL :: trhor /;"	v	module:control_flags
trhow	control_flags.f90	/^  LOGICAL :: trhow /;"	v	module:control_flags
trimcheck	trimcheck.f90	/^  FUNCTION trimcheck /;"	f
truncation_radius	wannier_gw.f90	/^  REAL(kind=DP) :: truncation_radius!/;"	v	module:wannier_gw
trust_radius	bfgs_module.f90	/^      nr_step_length_old,&! length of previous Newton-Raphson step$/;"	v	module:bfgs_module
trust_radius_ini	bfgs_module.f90	/^   REAL(DP)  :: &$/;"	v	module:bfgs_module
trust_radius_ini	input_parameters.f90	/^        REAL(DP)  :: trust_radius_ini /;"	v	module:input_parameters
trust_radius_init	qes_types_module.f90	/^    REAL(DP) :: trust_radius_init$/;"	k	type:bfgs_type
trust_radius_max	bfgs_module.f90	/^      trust_radius_min,  &! minimum allowed displacement$/;"	v	module:bfgs_module
trust_radius_max	input_parameters.f90	/^        REAL(DP)  :: trust_radius_max /;"	v	module:input_parameters
trust_radius_max	qes_types_module.f90	/^    REAL(DP) :: trust_radius_max$/;"	k	type:bfgs_type
trust_radius_min	bfgs_module.f90	/^      trust_radius_ini,  &! suggested initial displacement$/;"	v	module:bfgs_module
trust_radius_min	input_parameters.f90	/^        REAL(DP)  :: trust_radius_min /;"	v	module:input_parameters
trust_radius_min	qes_types_module.f90	/^    REAL(DP) :: trust_radius_min$/;"	k	type:bfgs_type
trust_radius_old	bfgs_module.f90	/^      trust_radius,      &! new displacement along the search direction$/;"	v	module:bfgs_module
ts_vdw	control_flags.f90	/^    ldftd3 =.FALSE., & ! if .TRUE. compute Grimme D3 dispersion corrections$/;"	v	module:control_flags
ts_vdw	input_parameters.f90	/^        LOGICAL   :: ts_vdw /;"	v	module:input_parameters
ts_vdw_econv_thr	input_parameters.f90	/^        REAL(DP) :: ts_vdw_econv_thr /;"	v	module:input_parameters
ts_vdw_econv_thr	qes_types_module.f90	/^    REAL(DP) :: ts_vdw_econv_thr$/;"	k	type:vdW_type
ts_vdw_econv_thr_ispresent	qes_types_module.f90	/^    LOGICAL  :: ts_vdw_econv_thr_ispresent /;"	k	type:vdW_type
ts_vdw_isolated	input_parameters.f90	/^        LOGICAL :: ts_vdw_isolated /;"	v	module:input_parameters
ts_vdw_isolated	qes_types_module.f90	/^    LOGICAL :: ts_vdw_isolated$/;"	k	type:vdW_type
ts_vdw_isolated_ispresent	qes_types_module.f90	/^    LOGICAL  :: ts_vdw_isolated_ispresent /;"	k	type:vdW_type
tscreen	control_flags.f90	/^  LOGICAL :: tscreen /;"	v	module:control_flags
tsdc	control_flags.f90	/^  LOGICAL :: tsdc /;"	v	module:control_flags
tsde	control_flags.f90	/^  LOGICAL :: tsde /;"	v	module:control_flags
tsdp	control_flags.f90	/^  LOGICAL :: tsdp /;"	v	module:control_flags
tstress	control_flags.f90	/^  LOGICAL :: tstress /;"	v	module:control_flags
tstress	input_parameters.f90	/^        LOGICAL :: tstress /;"	v	module:input_parameters
tsvdw_calculate	tsvdw.f90	/^  SUBROUTINE tsvdw_calculate(/;"	s	module:tsvdw_module
tsvdw_cleanup	tsvdw.f90	/^  SUBROUTINE tsvdw_cleanup(/;"	s	module:tsvdw_module
tsvdw_dveff	tsvdw.f90	/^  SUBROUTINE tsvdw_dveff(/;"	s	module:tsvdw_module
tsvdw_effqnts	tsvdw.f90	/^  SUBROUTINE tsvdw_effqnts(/;"	s	module:tsvdw_module
tsvdw_energy	tsvdw.f90	/^  SUBROUTINE tsvdw_energy(/;"	s	module:tsvdw_module
tsvdw_finalize	tsvdw.f90	/^  SUBROUTINE tsvdw_finalize(/;"	s	module:tsvdw_module
tsvdw_initialize	tsvdw.f90	/^  SUBROUTINE tsvdw_initialize(/;"	s	module:tsvdw_module
tsvdw_module	tsvdw.f90	/^MODULE tsvdw_module$/;"	m
tsvdw_para_init	tsvdw.f90	/^  SUBROUTINE tsvdw_para_init(/;"	s	module:tsvdw_module
tsvdw_pbc	tsvdw.f90	/^  SUBROUTINE tsvdw_pbc(/;"	s	module:tsvdw_module
tsvdw_rhotot	tsvdw.f90	/^  SUBROUTINE tsvdw_rhotot(/;"	s	module:tsvdw_module
tsvdw_screen	tsvdw.f90	/^  SUBROUTINE tsvdw_screen(/;"	s	module:tsvdw_module
tsvdw_unique_pair	tsvdw.f90	/^  SUBROUTINE tsvdw_unique_pair(/;"	s	module:tsvdw_module
tsvdw_veff	tsvdw.f90	/^  SUBROUTINE tsvdw_veff(/;"	s	module:tsvdw_module
tsvdw_wfforce	tsvdw.f90	/^  SUBROUTINE tsvdw_wfforce(/;"	s	module:tsvdw_module
ttemplate	input_parameters.f90	/^        LOGICAL   :: ttemplate /;"	v	module:input_parameters
tv0rd	control_flags.f90	/^  LOGICAL :: tv0rd /;"	v	module:control_flags
tvanp	pseudo_types.f90	/^     LOGICAL :: tvanp /;"	k	type:pseudo_upf
twannier	input_parameters.f90	/^        LOGICAL   :: twannier /;"	v	module:input_parameters
two_fermi_energies	qes_types_module.f90	/^    REAL(DP), DIMENSION(2) :: two_fermi_energies$/;"	k	type:band_structure_type
two_fermi_energies_ispresent	qes_types_module.f90	/^    LOGICAL  :: two_fermi_energies_ispresent /;"	k	type:band_structure_type
twodelt	timestep.f90	/^        REAL(DP)  :: delthal, twodelt,/;"	v	module:time_step
typ	pseudo_types.f90	/^     CHARACTER(LEN=20):: typ=/;"	k	type:pseudo_upf
types	qmmm.f90	/^  INTEGER, ALLOCATABLE :: types(/;"	v	module:qmmm
tzeroc	control_flags.f90	/^  LOGICAL :: tzeroc /;"	v	module:control_flags
tzeroe	control_flags.f90	/^  LOGICAL :: tzeroe /;"	v	module:control_flags
tzerop	control_flags.f90	/^  LOGICAL :: tzerop /;"	v	module:control_flags
u_trans	wannier_gw.f90	/^  COMPLEX(kind=DP), ALLOCATABLE :: u_trans(/;"	v	module:wannier_gw
uniqueb	input_parameters.f90	/^        LOGICAL :: uniqueb=/;"	v	module:input_parameters
unsest	space_group.f90	/^  REAL(DP), PARAMETER :: unsest=/;"	v	module:space_group
unsort_tau	ions_base.f90	/^    SUBROUTINE unsort_tau(/;"	s	module:ions_base
unterz	space_group.f90	/^  REAL(DP), PARAMETER :: unterz=/;"	v	module:space_group
update_by_mdiis	mdiis.f90	/^  SUBROUTINE update_by_mdiis(/;"	s	module:mdiis
update_inverse_hessian	bfgs_module.f90	/^   SUBROUTINE update_inverse_hessian(/;"	s	module:bfgs_module
update_startjg	io_base.f90	/^         function  update_startjg(/;"	f	subroutine:charge_k_to_g
update_vbox1_extpol	mdiis.f90	/^    SUBROUTINE update_vbox1_extpol(/;"	s	subroutine:update_by_mdiis
update_vbox1_mdiis	mdiis.f90	/^    SUBROUTINE update_vbox1_mdiis(/;"	s	subroutine:update_by_mdiis
upf	uspp.f90	/^  TYPE (pseudo_upf)/;"	v	module:uspp_param
upf_module	upf.f90	/^      MODULE upf_module$/;"	m
upf_to_internal	upf_to_internal.f90	/^  MODULE upf_to_internal$/;"	m
upscale	control_flags.f90	/^  REAL(DP), PUBLIC  :: &$/;"	v	module:control_flags
upscale	input_parameters.f90	/^        REAL(DP) :: upscale /;"	v	module:input_parameters
upscale	qes_types_module.f90	/^    REAL(DP) :: upscale$/;"	k	type:ion_control_type
upscale_ispresent	qes_types_module.f90	/^    LOGICAL  :: upscale_ispresent /;"	k	type:ion_control_type
use_all_frac	input_parameters.f90	/^        LOGICAL :: use_all_frac /;"	v	module:input_parameters
use_all_frac	qes_types_module.f90	/^    LOGICAL :: use_all_frac$/;"	k	type:symmetry_flags_type
use_bgrp_in_hpsi	mp_bands.f90	/^  LOGICAL :: use_bgrp_in_hpsi /;"	v	module:mp_bands
use_energy_int	input_parameters.f90	/^               plot_wannier = .false.,&$/;"	v	module:input_parameters
use_energy_int	wannier_new.f90	/^     plot_wannier,             &! if .TRUE. wannier number plot_wan_num is plotted$/;"	v	module:wannier_new
use_environ	plugin_flags.f90	/^  LOGICAL, PUBLIC :: use_environ /;"	v	module:plugin_flags
use_gate	qes_types_module.f90	/^    LOGICAL :: use_gate$/;"	k	type:gate_settings_type
use_old_exx	mp_exx.f90	/^  LOGICAL :: use_old_exx /;"	v	module:mp_exx
use_para_diag	control_flags.f90	/^  LOGICAL, PUBLIC :: &$/;"	v	module:control_flags
use_plumed	plugin_flags.f90	/^  LOGICAL, PUBLIC :: use_plumed$/;"	v	module:plugin_flags
use_pw2casino	plugin_flags.f90	/^  LOGICAL, PUBLIC :: use_pw2casino$/;"	v	module:plugin_flags
use_wannier	input_parameters.f90	/^        LOGICAL :: use_wannier /;"	v	module:input_parameters
use_wannier	wannier_new.f90	/^  LOGICAL :: &$/;"	v	module:wannier_new
uspp	qes_types_module.f90	/^    LOGICAL :: uspp$/;"	k	type:algorithmic_info_type
uspp	uspp.f90	/^MODULE uspp$/;"	m
uspp_param	uspp.f90	/^MODULE uspp_param$/;"	m
ux	noncol.f90	/^  REAL(DP) ::     &$/;"	v	module:noncollin_module
v_cutoff	wannier_gw.f90	/^  REAL(kind=DP) :: v_cutoff!/;"	v	module:wannier_gw
vbox	mdiis.f90	/^    REAL(DP), POINTER :: vbox(/;"	k	type:mdiis_type
vcut_destroy	coulomb_vcut.f90	/^  SUBROUTINE vcut_destroy(/;"	s	module:coulomb_vcut_module
vcut_formula	coulomb_vcut.f90	/^  FUNCTION vcut_formula(/;"	f	module:coulomb_vcut_module
vcut_formula_longrange	coulomb_vcut.f90	/^  FUNCTION vcut_formula_longrange(/;"	f	module:coulomb_vcut_module
vcut_formula_shortrange	coulomb_vcut.f90	/^FUNCTION vcut_formula_shortrange(/;"	f	module:coulomb_vcut_module
vcut_get	coulomb_vcut.f90	/^  FUNCTION vcut_get(/;"	f	module:coulomb_vcut_module
vcut_info	coulomb_vcut.f90	/^  SUBROUTINE vcut_info(/;"	s	module:coulomb_vcut_module
vcut_init	coulomb_vcut.f90	/^  SUBROUTINE vcut_init(/;"	s	module:coulomb_vcut_module
vcut_minimal_image	coulomb_vcut.f90	/^FUNCTION vcut_minimal_image(/;"	f	module:coulomb_vcut_module
vcut_spheric_get	coulomb_vcut.f90	/^  FUNCTION vcut_spheric_get(/;"	f	module:coulomb_vcut_module
vcut_type	coulomb_vcut.f90	/^  TYPE vcut_type$/;"	t	module:coulomb_vcut_module
vdW	qes_types_module.f90	/^    TYPE(vdW_/;"	k	type:dft_type
vdW_DF	xc_vdW_DF.f90	/^MODULE vdW_DF$/;"	m
vdW_energy	xc_rVV10.f90	/^subroutine vdW_energy(/;"	s	module:rVV10
vdW_energy	xc_vdW_DF.f90	/^  SUBROUTINE vdW_energy /;"	s	module:vdW_DF
vdW_info	xc_vdW_DF.f90	/^  SUBROUTINE vdW_info$/;"	s	module:vdW_DF
vdW_ispresent	qes_types_module.f90	/^    LOGICAL  :: vdW_ispresent /;"	k	type:dft_type
vdW_term	qes_types_module.f90	/^    REAL(DP) :: vdW_term$/;"	k	type:total_energy_type
vdW_term_ispresent	qes_types_module.f90	/^    LOGICAL  :: vdW_term_ispresent /;"	k	type:total_energy_type
vdW_type	qes_types_module.f90	/^  TYPE :: vdW_type$/;"	t	module:qes_types_module
vdw_corr	input_parameters.f90	/^        CHARACTER(len=80) :: vdw_corr /;"	v	module:input_parameters
vdw_corr	qes_types_module.f90	/^    CHARACTER(len=256) :: vdw_corr$/;"	k	type:vdW_type
vdw_corr_ispresent	qes_types_module.f90	/^    LOGICAL  :: vdw_corr_ispresent /;"	k	type:vdW_type
vdw_econv_thr	tsvdw.f90	/^REAL(DP), PUBLIC:: vdw_econv_thr /;"	v	module:tsvdw_module
vdw_isolated	tsvdw.f90	/^LOGICAL, PUBLIC :: vdw_isolated /;"	v	module:tsvdw_module
vdw_kernel_md5_cksum	kernel_table.f90	/^  character(len=32)   :: vdw_kernel_md5_cksum /;"	v	module:kernel_table
vdw_table_name	input_parameters.f90	/^        CHARACTER(len=256) :: vdw_table_name /;"	v	module:input_parameters
vdw_table_name	kernel_table.f90	/^  character(len=256)  :: vdw_table_name /;"	v	module:kernel_table
vdw_type	xc_vdW_DF.f90	/^integer :: vdw_type /;"	v	module:vdW_DF
vector	qes_types_module.f90	/^    REAL(DP), DIMENSION(:), ALLOCATABLE :: vector$/;"	k	type:vector_type
vector_times_matrix	basic_algebra_routines.f90	/^     FUNCTION vector_times_matrix(/;"	f	module:basic_algebra_routines
vector_type	qes_types_module.f90	/^  TYPE :: vector_type$/;"	t	module:qes_types_module
veff	tsvdw.f90	/^REAL(DP), DIMENSION(:), ALLOCATABLE, PRIVATE :: veff /;"	v	module:tsvdw_module
vel	ions_base.f90	/^      REAL(DP), ALLOCATABLE :: vel(/;"	v	module:ions_base
vel_srt	ions_base.f90	/^      REAL(DP), ALLOCATABLE :: vel_srt(/;"	v	module:ions_base
velh	cell_base.f90	/^        REAL(DP) :: velh(/;"	v	module:cell_base
verbosity	input_parameters.f90	/^        CHARACTER(len=80) :: verbosity /;"	v	module:input_parameters
verbosity	qes_types_module.f90	/^    CHARACTER(len=256) :: verbosity$/;"	k	type:control_variables_type
verbosity_allowed	input_parameters.f90	/^        CHARACTER(len=80) :: verbosity_allowed(/;"	v	module:input_parameters
version_compare	parser.f90	/^  FUNCTION version_compare(/;"	f	module:parser
version_number	version.f90	/^  CHARACTER (LEN=6) :: version_number /;"	v	module:global_version
version_parse	parser.f90	/^  SUBROUTINE version_parse(/;"	s	module:parser
vertex_coord	bz_form.f90	/^    REAL(DP), ALLOCATABLE :: vertex_coord(/;"	k	type:bz
vfree	tsvdw.f90	/^REAL(DP), DIMENSION(:), ALLOCATABLE, PRIVATE :: vfree /;"	v	module:tsvdw_module
vg_q	wannier_gw.f90	/^  REAL(kind=DP), ALLOCATABLE :: vg_q(/;"	v	module:wannier_gw
vkb	uspp.f90	/^  COMPLEX(DP), ALLOCATABLE, TARGET :: &$/;"	v	module:uspp
vloc	pseudo_types.f90	/^     REAL(DP), POINTER :: vloc(/;"	k	type:pseudo_upf
vloc_gth	gth.f90	/^subroutine vloc_gth(/;"	s	module:m_gth
vnbsp	input_parameters.f90	/^          INTEGER  :: vnbsp$/;"	v	module:input_parameters
vnl	pseudo_types.f90	/^     REAL(DP), POINTER :: vnl(/;"	k	type:pseudo_upf
volume	volume.f90	/^SUBROUTINE volume /;"	s
vres	mdiis.f90	/^    REAL(DP), POINTER :: vres(/;"	k	type:mdiis_type
vs_rad	paw_variables.f90	/^    REAL(DP), ALLOCATABLE ::  vs_rad(/;"	v	module:paw_variables
vtcon	noncol.f90	/^      bfield(3)=0.d0,      &!  magnetic field used in some cases$/;"	v	module:noncollin_module
vtxc	qes_types_module.f90	/^    REAL(DP) :: vtxc$/;"	k	type:total_energy_type
vtxc_ispresent	qes_types_module.f90	/^    LOGICAL  :: vtxc_ispresent /;"	k	type:total_energy_type
vwn	functionals.f90	/^subroutine vwn /;"	s
vwn1_rpa	functionals.f90	/^subroutine vwn1_rpa /;"	s
vwn1_rpa_spin	lsda_functionals.f90	/^SUBROUTINE vwn1_rpa_spin(/;"	s
vwn_spin	lsda_functionals.f90	/^SUBROUTINE vwn_spin(/;"	s
w	qes_types_module.f90	/^    REAL(DP) :: w$/;"	k	type:esm_type
w0gauss	w0gauss.f90	/^function w0gauss /;"	f
w1	qes_types_module.f90	/^    REAL(DP) :: w1$/;"	k	type:bfgs_type
w1gauss	w1gauss.f90	/^function w1gauss /;"	f
w2	qes_types_module.f90	/^    REAL(DP) :: w2$/;"	k	type:bfgs_type
w_1	bfgs_module.f90	/^   REAL(DP)  ::          &! parameters for Wolfe conditions$/;"	v	module:bfgs_module
w_1	input_parameters.f90	/^        REAL(DP)  :: w_1 /;"	v	module:input_parameters
w_2	bfgs_module.f90	/^      w_1,               &! 1st Wolfe condition: sufficient energy decrease$/;"	v	module:bfgs_module
w_2	input_parameters.f90	/^        REAL(DP)  :: w_2 /;"	v	module:input_parameters
w_centers	wannier_gw.f90	/^  INTEGER, ALLOCATABLE  :: w_centers(/;"	v	module:wannier_gw
w_radii	wannier_gw.f90	/^  INTEGER, ALLOCATABLE  :: w_radii(/;"	v	module:wannier_gw
wall	qes_types_module.f90	/^    REAL(DP) :: wall$/;"	k	type:clock_type
wan_data	input_parameters.f90	/^      TYPE (wannier_data) :: wan_data(/;"	v	module:input_parameters
wan_in	wannier_new.f90	/^  TYPE (wannier_data), allocatable :: wan_in(/;"	v	module:wannier_new
wan_pot	wannier_new.f90	/^  REAL(kind=DP), allocatable ::  &$/;"	v	module:wannier_new
wannier	input_parameters.f90	/^          NAMELIST \/ wannier /;"	n	module:input_parameters
wannier_ac	input_parameters.f90	/^          NAMELIST \/ wannier_ac /;"	n	module:input_parameters
wannier_ac_bcast	read_namelists.f90	/^     SUBROUTINE wannier_ac_bcast(/;"	s	module:read_namelists_module
wannier_ac_checkin	read_namelists.f90	/^     SUBROUTINE wannier_ac_checkin(/;"	s	module:read_namelists_module
wannier_ac_defaults	read_namelists.f90	/^     SUBROUTINE wannier_ac_defaults(/;"	s	module:read_namelists_module
wannier_bcast	read_namelists.f90	/^     SUBROUTINE wannier_bcast(/;"	s	module:read_namelists_module
wannier_centers	wannier_gw.f90	/^  REAL(kind=DP),  ALLOCATABLE :: wannier_centers(/;"	v	module:wannier_gw
wannier_checkin	read_namelists.f90	/^     SUBROUTINE wannier_checkin(/;"	s	module:read_namelists_module
wannier_data	wannier_new.f90	/^  TYPE wannier_data$/;"	t	module:wannier_new
wannier_defaults	read_namelists.f90	/^     SUBROUTINE wannier_defaults(/;"	s	module:read_namelists_module
wannier_energy	wannier_new.f90	/^     wan_pot(:,:),             &! constrained potential$/;"	v	module:wannier_new
wannier_gw	wannier_gw.f90	/^MODULE wannier_gw$/;"	m
wannier_index	input_parameters.f90	/^      INTEGER :: wannier_index(/;"	v	module:input_parameters
wannier_new	wannier_new.f90	/^MODULE wannier_new$/;"	m
wannier_occ	wannier_new.f90	/^     wannier_energy(:,:),      &! energy of each wannier (of each spin)$/;"	v	module:wannier_new
wannier_radii	wannier_gw.f90	/^  REAL(kind=DP),  ALLOCATABLE :: wannier_radii(/;"	v	module:wannier_gw
wannier_thres	wannier_gw.f90	/^  REAL(kind=DP) :: wannier_thres!/;"	v	module:wannier_gw
wave_base	wave_base.f90	/^        MODULE wave_base$/;"	m
wave_speed2	wave_base.f90	/^   FUNCTION wave_speed2(/;"	f	module:wave_base
wave_steepest	wave_base.f90	/^   SUBROUTINE wave_steepest(/;"	s	module:wave_base
wave_verlet	wave_base.f90	/^   SUBROUTINE wave_verlet(/;"	s	module:wave_base
wavefunctions	wavefunctions.f90	/^   MODULE wavefunctions$/;"	m
wcx	functionals.f90	/^subroutine wcx /;"	s
wdot_gamma	wave_base.f90	/^          REAL(DP) FUNCTION wdot_gamma(/;"	f	module:wave_base
wdot_kp	wave_base.f90	/^          COMPLEX(DP) FUNCTION wdot_kp(/;"	f	module:wave_base
weight	qes_types_module.f90	/^    REAL(DP) :: weight$/;"	k	type:k_point_type
weight_ispresent	qes_types_module.f90	/^    LOGICAL :: weight_ispresent /;"	k	type:k_point_type
wf_collect	input_parameters.f90	/^        LOGICAL :: wf_collect /;"	v	module:input_parameters
wf_collect	qes_types_module.f90	/^    LOGICAL :: wf_collect$/;"	k	type:control_variables_type
wf_collected	qes_types_module.f90	/^    LOGICAL :: wf_collected$/;"	k	type:band_structure_type
wf_efield	input_parameters.f90	/^          LOGICAL :: wf_efield$/;"	v	module:input_parameters
wf_friction	input_parameters.f90	/^          REAL(DP) :: wf_friction$/;"	v	module:input_parameters
wf_q	input_parameters.f90	/^          REAL(DP) :: wf_q$/;"	v	module:input_parameters
wf_switch	input_parameters.f90	/^          LOGICAL :: wf_switch$/;"	v	module:input_parameters
wfc_dir	io_files.f90	/^  CHARACTER(len=256) :: wfc_dir /;"	v	module:io_files
wfc_extrapolation	input_parameters.f90	/^        CHARACTER(len=80) :: pot_extrapolation = 'default', &$/;"	v	module:input_parameters
wfc_extrapolation	qes_types_module.f90	/^    CHARACTER(len=256) :: wfc_extrapolation$/;"	k	type:md_type
wfcdir	input_parameters.f90	/^        CHARACTER(len=256) :: wfcdir /;"	v	module:input_parameters
wfdt	input_parameters.f90	/^          REAL(DP) :: wfdt$/;"	v	module:input_parameters
wffort	input_parameters.f90	/^          INTEGER :: wffort$/;"	v	module:input_parameters
wfsd	input_parameters.f90	/^          INTEGER  :: wfsd$/;"	v	module:input_parameters
wgauss	wgauss.f90	/^function wgauss /;"	f
wignerc	functionals.f90	/^subroutine wignerc(/;"	s
wk	input_parameters.f90	/^        REAL(DP), ALLOCATABLE :: xk(:,:), wk(/;"	v	module:input_parameters
wmass	cell_base.f90	/^        REAL(DP) :: wmass /;"	v	module:cell_base
wmass	input_parameters.f90	/^        REAL(DP) :: wmass /;"	v	module:input_parameters
wmass	qes_types_module.f90	/^    REAL(DP) :: wmass$/;"	k	type:cell_control_type
wmass_ispresent	qes_types_module.f90	/^    LOGICAL  :: wmass_ispresent /;"	k	type:cell_control_type
world_comm	mp_world.f90	/^  INTEGER :: world_comm /;"	v	module:mp_world
wpbe_analy_erfc_approx_grad	functionals.f90	/^      SUBROUTINE wpbe_analy_erfc_approx_grad(/;"	s
wrap_b88	more_functionals.f90	/^      SUBROUTINE wrap_b88(/;"	s
wrap_glyp	more_functionals.f90	/^      SUBROUTINE wrap_glyp(/;"	s
wrappers	wrappers.f90	/^MODULE wrappers$/;"	m
write_attributes	hdf5_qe.f90	/^  SUBROUTINE write_attributes(/;"	s	module:hdf5_qe
write_bfgs_file	bfgs_module.f90	/^   SUBROUTINE write_bfgs_file(/;"	s	module:bfgs_module
write_columns	write_upf_v2.f90	/^SUBROUTINE write_columns(/;"	s	module:write_upf_v2_module
write_columns_2	write_upf_v2.f90	/^SUBROUTINE write_columns_2(/;"	s	module:write_upf_v2_module
write_columns_3	write_upf_v2.f90	/^SUBROUTINE write_columns_3(/;"	s	module:write_upf_v2_module
write_columns_4	write_upf_v2.f90	/^SUBROUTINE write_columns_4(/;"	s	module:write_upf_v2_module
write_data_hdf5	hdf5_qe.f90	/^  subroutine  write_data_hdf5(/;"	s	module:hdf5_qe
write_dft_name	funct.f90	/^subroutine write_dft_name$/;"	s	module:funct
write_eig	hdf5_qe.f90	/^  subroutine write_eig(/;"	s	module:hdf5_qe
write_evc	hdf5_qe.f90	/^  subroutine write_evc(/;"	s	module:hdf5_qe
write_full_wfc	write_upf_schema.f90	/^ SUBROUTINE write_full_wfc(/;"	s	subroutine:write_upf_schema
write_full_wfc	write_upf_v2.f90	/^   SUBROUTINE write_full_wfc(/;"	s	subroutine:write_upf_v2
write_g	hdf5_qe.f90	/^  subroutine write_g(/;"	s	module:hdf5_qe
write_gipaw	write_upf_schema.f90	/^ SUBROUTINE write_gipaw(/;"	s	subroutine:write_upf_schema
write_gipaw	write_upf_v2.f90	/^   SUBROUTINE write_gipaw(/;"	s	subroutine:write_upf_v2
write_gkhdf5	hdf5_qe.f90	/^  subroutine write_gkhdf5(/;"	s	module:hdf5_qe
write_grid_on_file	radial_grids.f90	/^subroutine write_grid_on_file(/;"	s	module:radial_grids
write_header	write_upf_schema.f90	/^    SUBROUTINE write_header(/;"	s	subroutine:write_upf_schema
write_header	write_upf_v2.f90	/^    SUBROUTINE write_header(/;"	s	subroutine:write_upf_v2
write_info	write_upf_schema.f90	/^    SUBROUTINE write_info(/;"	s	subroutine:write_upf_schema
write_info	write_upf_v2.f90	/^    SUBROUTINE write_info(/;"	s	subroutine:write_upf_v2
write_mesh	write_upf_schema.f90	/^    SUBROUTINE write_mesh(/;"	s	subroutine:write_upf_schema
write_mesh	write_upf_v2.f90	/^    SUBROUTINE write_mesh(/;"	s	subroutine:write_upf_v2
write_nonlocal	write_upf_schema.f90	/^    SUBROUTINE write_nonlocal(/;"	s	subroutine:write_upf_schema
write_nonlocal	write_upf_v2.f90	/^    SUBROUTINE write_nonlocal(/;"	s	subroutine:write_upf_v2
write_paw	write_upf_schema.f90	/^ SUBROUTINE write_paw(/;"	s	subroutine:write_upf_schema
write_paw	write_upf_v2.f90	/^   SUBROUTINE write_paw(/;"	s	subroutine:write_upf_v2
write_pswfc	write_upf_schema.f90	/^ SUBROUTINE write_pswfc(/;"	s	subroutine:write_upf_schema
write_pswfc	write_upf_v2.f90	/^   SUBROUTINE write_pswfc(/;"	s	subroutine:write_upf_v2
write_rho_hdf5	hdf5_qe.f90	/^  subroutine write_rho_hdf5(/;"	s	module:hdf5_qe
write_rhog	io_base.f90	/^    SUBROUTINE write_rhog /;"	s	module:io_base
write_semilocal	write_upf_schema.f90	/^    SUBROUTINE write_semilocal(/;"	s	subroutine:write_upf_schema
write_semilocal	write_upf_v2.f90	/^    SUBROUTINE write_semilocal(/;"	s	subroutine:write_upf_v2
write_spin_orb	write_upf_v2.f90	/^   SUBROUTINE write_spin_orb(/;"	s	subroutine:write_upf_v2
write_upf	write_upf.f90	/^   SUBROUTINE write_upf(/;"	s	module:write_upf_module
write_upf_module	write_upf.f90	/^MODULE  write_upf_module$/;"	m
write_upf_schema	write_upf_schema.f90	/^  SUBROUTINE write_upf_schema(/;"	s	module:write_upf_schema_module
write_upf_schema_module	write_upf_schema.f90	/^MODULE write_upf_schema_module$/;"	m
write_upf_v2	write_upf_v2.f90	/^  SUBROUTINE write_upf_v2(/;"	s	module:write_upf_v2_module
write_upf_v2_module	write_upf_v2.f90	/^MODULE write_upf_v2_module$/;"	m
write_wfc	io_base.f90	/^    SUBROUTINE write_wfc(/;"	s	module:io_base
writebuffer_d	fsockets.f90	/^  SUBROUTINE writebuffer_d /;"	s	module:F90SOCKETS
writebuffer_dv	fsockets.f90	/^  SUBROUTINE writebuffer_dv(/;"	s	module:F90SOCKETS
writebuffer_i	fsockets.f90	/^  SUBROUTINE writebuffer_i /;"	s	module:F90SOCKETS
writebuffer_s	fsockets.f90	/^  SUBROUTINE writebuffer_s /;"	s	module:F90SOCKETS
writev	input_parameters.f90	/^          LOGICAL :: writev$/;"	v	module:input_parameters
ws_base	ws_base.f90	/^MODULE ws_base$/;"	m
ws_clean	ws_base.f90	/^    SUBROUTINE ws_clean(/;"	s	module:ws_base
ws_dist	ws_base.f90	/^    FUNCTION ws_dist(/;"	f	module:ws_base
ws_dist_stupid	ws_base.f90	/^    FUNCTION ws_dist_stupid(/;"	f	module:ws_base
ws_init	ws_base.f90	/^    SUBROUTINE ws_init(/;"	s	module:ws_base
ws_test	ws_base.f90	/^    SUBROUTINE ws_test(/;"	s	module:ws_base
ws_type	ws_base.f90	/^  TYPE ws_type$/;"	t	module:ws_base
ws_vect	ws_base.f90	/^    SUBROUTINE ws_vect(/;"	s	module:ws_base
ws_weight	ws_base.f90	/^    FUNCTION ws_weight(/;"	f	module:ws_base
ww	paw_variables.f90	/^        REAL(DP),POINTER :: ww(/;"	k	type:paw_radial_integrator
wwylm	paw_variables.f90	/^        REAL(DP),POINTER :: wwylm(/;"	k	type:paw_radial_integrator
wy_pos	wypos.f90	/^MODULE wy_pos$/;"	m
wyckoff	wyckoff.f90	/^MODULE wyckoff$/;"	m
wyckoff_positions	qes_types_module.f90	/^    TYPE(wyckoff_positions_/;"	k	type:atomic_structure_type
wyckoff_positions_ispresent	qes_types_module.f90	/^    LOGICAL  :: wyckoff_positions_ispresent /;"	k	type:atomic_structure_type
wyckoff_positions_type	qes_types_module.f90	/^  TYPE :: wyckoff_positions_type$/;"	t	module:qes_types_module
wypos	wypos.f90	/^   SUBROUTINE wypos(/;"	s	module:wy_pos
wypos_10	wypos.f90	/^SUBROUTINE wypos_10 /;"	s	module:wy_pos
wypos_100	wypos.f90	/^SUBROUTINE wypos_100(/;"	s	module:wy_pos
wypos_101	wypos.f90	/^SUBROUTINE wypos_101(/;"	s	module:wy_pos
wypos_102	wypos.f90	/^SUBROUTINE wypos_102(/;"	s	module:wy_pos
wypos_103	wypos.f90	/^SUBROUTINE wypos_103(/;"	s	module:wy_pos
wypos_104	wypos.f90	/^SUBROUTINE wypos_104(/;"	s	module:wy_pos
wypos_105	wypos.f90	/^SUBROUTINE wypos_105(/;"	s	module:wy_pos
wypos_106	wypos.f90	/^SUBROUTINE wypos_106(/;"	s	module:wy_pos
wypos_107	wypos.f90	/^SUBROUTINE wypos_107(/;"	s	module:wy_pos
wypos_108	wypos.f90	/^SUBROUTINE wypos_108(/;"	s	module:wy_pos
wypos_109	wypos.f90	/^SUBROUTINE wypos_109(/;"	s	module:wy_pos
wypos_11	wypos.f90	/^SUBROUTINE wypos_11 /;"	s	module:wy_pos
wypos_110	wypos.f90	/^SUBROUTINE wypos_110(/;"	s	module:wy_pos
wypos_111	wypos.f90	/^SUBROUTINE wypos_111(/;"	s	module:wy_pos
wypos_112	wypos.f90	/^SUBROUTINE wypos_112(/;"	s	module:wy_pos
wypos_113	wypos.f90	/^SUBROUTINE wypos_113(/;"	s	module:wy_pos
wypos_114	wypos.f90	/^SUBROUTINE wypos_114(/;"	s	module:wy_pos
wypos_115	wypos.f90	/^SUBROUTINE wypos_115(/;"	s	module:wy_pos
wypos_116	wypos.f90	/^SUBROUTINE wypos_116(/;"	s	module:wy_pos
wypos_117	wypos.f90	/^SUBROUTINE wypos_117(/;"	s	module:wy_pos
wypos_118	wypos.f90	/^SUBROUTINE wypos_118(/;"	s	module:wy_pos
wypos_119	wypos.f90	/^SUBROUTINE wypos_119(/;"	s	module:wy_pos
wypos_12	wypos.f90	/^SUBROUTINE wypos_12 /;"	s	module:wy_pos
wypos_120	wypos.f90	/^SUBROUTINE wypos_120(/;"	s	module:wy_pos
wypos_121	wypos.f90	/^SUBROUTINE wypos_121(/;"	s	module:wy_pos
wypos_122	wypos.f90	/^SUBROUTINE wypos_122(/;"	s	module:wy_pos
wypos_123	wypos.f90	/^SUBROUTINE wypos_123(/;"	s	module:wy_pos
wypos_124	wypos.f90	/^SUBROUTINE wypos_124(/;"	s	module:wy_pos
wypos_125	wypos.f90	/^SUBROUTINE wypos_125(/;"	s	module:wy_pos
wypos_126	wypos.f90	/^SUBROUTINE wypos_126(/;"	s	module:wy_pos
wypos_127	wypos.f90	/^SUBROUTINE wypos_127(/;"	s	module:wy_pos
wypos_128	wypos.f90	/^SUBROUTINE wypos_128(/;"	s	module:wy_pos
wypos_129	wypos.f90	/^SUBROUTINE wypos_129(/;"	s	module:wy_pos
wypos_13	wypos.f90	/^SUBROUTINE wypos_13 /;"	s	module:wy_pos
wypos_130	wypos.f90	/^SUBROUTINE wypos_130(/;"	s	module:wy_pos
wypos_131	wypos.f90	/^SUBROUTINE wypos_131(/;"	s	module:wy_pos
wypos_132	wypos.f90	/^SUBROUTINE wypos_132(/;"	s	module:wy_pos
wypos_133	wypos.f90	/^SUBROUTINE wypos_133(/;"	s	module:wy_pos
wypos_134	wypos.f90	/^SUBROUTINE wypos_134(/;"	s	module:wy_pos
wypos_135	wypos.f90	/^SUBROUTINE wypos_135(/;"	s	module:wy_pos
wypos_136	wypos.f90	/^SUBROUTINE wypos_136(/;"	s	module:wy_pos
wypos_137	wypos.f90	/^SUBROUTINE wypos_137(/;"	s	module:wy_pos
wypos_138	wypos.f90	/^SUBROUTINE wypos_138(/;"	s	module:wy_pos
wypos_139	wypos.f90	/^SUBROUTINE wypos_139(/;"	s	module:wy_pos
wypos_14	wypos.f90	/^SUBROUTINE wypos_14 /;"	s	module:wy_pos
wypos_140	wypos.f90	/^SUBROUTINE wypos_140(/;"	s	module:wy_pos
wypos_141	wypos.f90	/^SUBROUTINE wypos_141(/;"	s	module:wy_pos
wypos_142	wypos.f90	/^SUBROUTINE wypos_142(/;"	s	module:wy_pos
wypos_143	wypos.f90	/^SUBROUTINE wypos_143(/;"	s	module:wy_pos
wypos_146	wypos.f90	/^SUBROUTINE wypos_146(/;"	s	module:wy_pos
wypos_147	wypos.f90	/^SUBROUTINE wypos_147(/;"	s	module:wy_pos
wypos_148	wypos.f90	/^SUBROUTINE wypos_148(/;"	s	module:wy_pos
wypos_149	wypos.f90	/^SUBROUTINE wypos_149(/;"	s	module:wy_pos
wypos_15	wypos.f90	/^SUBROUTINE wypos_15 /;"	s	module:wy_pos
wypos_150	wypos.f90	/^SUBROUTINE wypos_150(/;"	s	module:wy_pos
wypos_151	wypos.f90	/^SUBROUTINE wypos_151(/;"	s	module:wy_pos
wypos_152	wypos.f90	/^SUBROUTINE wypos_152(/;"	s	module:wy_pos
wypos_153	wypos.f90	/^SUBROUTINE wypos_153(/;"	s	module:wy_pos
wypos_154	wypos.f90	/^SUBROUTINE wypos_154(/;"	s	module:wy_pos
wypos_155	wypos.f90	/^SUBROUTINE wypos_155(/;"	s	module:wy_pos
wypos_156	wypos.f90	/^SUBROUTINE wypos_156(/;"	s	module:wy_pos
wypos_157	wypos.f90	/^SUBROUTINE wypos_157(/;"	s	module:wy_pos
wypos_158	wypos.f90	/^SUBROUTINE wypos_158(/;"	s	module:wy_pos
wypos_159	wypos.f90	/^SUBROUTINE wypos_159(/;"	s	module:wy_pos
wypos_16	wypos.f90	/^SUBROUTINE wypos_16 /;"	s	module:wy_pos
wypos_160	wypos.f90	/^SUBROUTINE wypos_160(/;"	s	module:wy_pos
wypos_161	wypos.f90	/^SUBROUTINE wypos_161(/;"	s	module:wy_pos
wypos_162	wypos.f90	/^SUBROUTINE wypos_162(/;"	s	module:wy_pos
wypos_163	wypos.f90	/^SUBROUTINE wypos_163(/;"	s	module:wy_pos
wypos_164	wypos.f90	/^SUBROUTINE wypos_164(/;"	s	module:wy_pos
wypos_165	wypos.f90	/^SUBROUTINE wypos_165(/;"	s	module:wy_pos
wypos_166	wypos.f90	/^SUBROUTINE wypos_166(/;"	s	module:wy_pos
wypos_167	wypos.f90	/^SUBROUTINE wypos_167(/;"	s	module:wy_pos
wypos_168	wypos.f90	/^SUBROUTINE wypos_168(/;"	s	module:wy_pos
wypos_17	wypos.f90	/^SUBROUTINE wypos_17 /;"	s	module:wy_pos
wypos_171	wypos.f90	/^SUBROUTINE wypos_171(/;"	s	module:wy_pos
wypos_172	wypos.f90	/^SUBROUTINE wypos_172(/;"	s	module:wy_pos
wypos_173	wypos.f90	/^SUBROUTINE wypos_173(/;"	s	module:wy_pos
wypos_174	wypos.f90	/^SUBROUTINE wypos_174(/;"	s	module:wy_pos
wypos_175	wypos.f90	/^SUBROUTINE wypos_175(/;"	s	module:wy_pos
wypos_176	wypos.f90	/^SUBROUTINE wypos_176(/;"	s	module:wy_pos
wypos_177	wypos.f90	/^SUBROUTINE wypos_177(/;"	s	module:wy_pos
wypos_178	wypos.f90	/^SUBROUTINE wypos_178(/;"	s	module:wy_pos
wypos_179	wypos.f90	/^SUBROUTINE wypos_179(/;"	s	module:wy_pos
wypos_18	wypos.f90	/^SUBROUTINE wypos_18 /;"	s	module:wy_pos
wypos_180	wypos.f90	/^SUBROUTINE wypos_180(/;"	s	module:wy_pos
wypos_181	wypos.f90	/^SUBROUTINE wypos_181(/;"	s	module:wy_pos
wypos_182	wypos.f90	/^SUBROUTINE wypos_182(/;"	s	module:wy_pos
wypos_183	wypos.f90	/^SUBROUTINE wypos_183(/;"	s	module:wy_pos
wypos_184	wypos.f90	/^SUBROUTINE wypos_184(/;"	s	module:wy_pos
wypos_185	wypos.f90	/^SUBROUTINE wypos_185(/;"	s	module:wy_pos
wypos_186	wypos.f90	/^SUBROUTINE wypos_186(/;"	s	module:wy_pos
wypos_187	wypos.f90	/^SUBROUTINE wypos_187(/;"	s	module:wy_pos
wypos_188	wypos.f90	/^SUBROUTINE wypos_188(/;"	s	module:wy_pos
wypos_189	wypos.f90	/^SUBROUTINE wypos_189(/;"	s	module:wy_pos
wypos_190	wypos.f90	/^SUBROUTINE wypos_190(/;"	s	module:wy_pos
wypos_191	wypos.f90	/^SUBROUTINE wypos_191(/;"	s	module:wy_pos
wypos_192	wypos.f90	/^SUBROUTINE wypos_192(/;"	s	module:wy_pos
wypos_193	wypos.f90	/^SUBROUTINE wypos_193(/;"	s	module:wy_pos
wypos_194	wypos.f90	/^SUBROUTINE wypos_194(/;"	s	module:wy_pos
wypos_195	wypos.f90	/^SUBROUTINE wypos_195(/;"	s	module:wy_pos
wypos_196	wypos.f90	/^SUBROUTINE wypos_196(/;"	s	module:wy_pos
wypos_197	wypos.f90	/^SUBROUTINE wypos_197(/;"	s	module:wy_pos
wypos_198	wypos.f90	/^SUBROUTINE wypos_198(/;"	s	module:wy_pos
wypos_199	wypos.f90	/^SUBROUTINE wypos_199(/;"	s	module:wy_pos
wypos_2	wypos.f90	/^SUBROUTINE wypos_2 /;"	s	module:wy_pos
wypos_20	wypos.f90	/^SUBROUTINE wypos_20 /;"	s	module:wy_pos
wypos_200	wypos.f90	/^SUBROUTINE wypos_200(/;"	s	module:wy_pos
wypos_201	wypos.f90	/^SUBROUTINE wypos_201(/;"	s	module:wy_pos
wypos_202	wypos.f90	/^SUBROUTINE wypos_202(/;"	s	module:wy_pos
wypos_203	wypos.f90	/^SUBROUTINE wypos_203(/;"	s	module:wy_pos
wypos_204	wypos.f90	/^SUBROUTINE wypos_204(/;"	s	module:wy_pos
wypos_205	wypos.f90	/^SUBROUTINE wypos_205(/;"	s	module:wy_pos
wypos_206	wypos.f90	/^SUBROUTINE wypos_206(/;"	s	module:wy_pos
wypos_207	wypos.f90	/^SUBROUTINE wypos_207(/;"	s	module:wy_pos
wypos_208	wypos.f90	/^SUBROUTINE wypos_208(/;"	s	module:wy_pos
wypos_209	wypos.f90	/^SUBROUTINE wypos_209(/;"	s	module:wy_pos
wypos_21	wypos.f90	/^SUBROUTINE wypos_21 /;"	s	module:wy_pos
wypos_210	wypos.f90	/^SUBROUTINE wypos_210(/;"	s	module:wy_pos
wypos_211	wypos.f90	/^SUBROUTINE wypos_211(/;"	s	module:wy_pos
wypos_212	wypos.f90	/^SUBROUTINE wypos_212(/;"	s	module:wy_pos
wypos_213	wypos.f90	/^SUBROUTINE wypos_213(/;"	s	module:wy_pos
wypos_214	wypos.f90	/^SUBROUTINE wypos_214(/;"	s	module:wy_pos
wypos_215	wypos.f90	/^SUBROUTINE wypos_215(/;"	s	module:wy_pos
wypos_216	wypos.f90	/^SUBROUTINE wypos_216(/;"	s	module:wy_pos
wypos_217	wypos.f90	/^SUBROUTINE wypos_217(/;"	s	module:wy_pos
wypos_218	wypos.f90	/^SUBROUTINE wypos_218(/;"	s	module:wy_pos
wypos_219	wypos.f90	/^SUBROUTINE wypos_219(/;"	s	module:wy_pos
wypos_22	wypos.f90	/^SUBROUTINE wypos_22 /;"	s	module:wy_pos
wypos_220	wypos.f90	/^SUBROUTINE wypos_220(/;"	s	module:wy_pos
wypos_221	wypos.f90	/^SUBROUTINE wypos_221(/;"	s	module:wy_pos
wypos_222	wypos.f90	/^SUBROUTINE wypos_222(/;"	s	module:wy_pos
wypos_223	wypos.f90	/^SUBROUTINE wypos_223(/;"	s	module:wy_pos
wypos_224	wypos.f90	/^SUBROUTINE wypos_224(/;"	s	module:wy_pos
wypos_225	wypos.f90	/^SUBROUTINE wypos_225(/;"	s	module:wy_pos
wypos_226	wypos.f90	/^SUBROUTINE wypos_226(/;"	s	module:wy_pos
wypos_227	wypos.f90	/^SUBROUTINE wypos_227(/;"	s	module:wy_pos
wypos_228	wypos.f90	/^SUBROUTINE wypos_228(/;"	s	module:wy_pos
wypos_229	wypos.f90	/^SUBROUTINE wypos_229(/;"	s	module:wy_pos
wypos_23	wypos.f90	/^SUBROUTINE wypos_23 /;"	s	module:wy_pos
wypos_230	wypos.f90	/^SUBROUTINE wypos_230(/;"	s	module:wy_pos
wypos_24	wypos.f90	/^SUBROUTINE wypos_24 /;"	s	module:wy_pos
wypos_25	wypos.f90	/^SUBROUTINE wypos_25 /;"	s	module:wy_pos
wypos_26	wypos.f90	/^SUBROUTINE wypos_26 /;"	s	module:wy_pos
wypos_27	wypos.f90	/^SUBROUTINE wypos_27 /;"	s	module:wy_pos
wypos_28	wypos.f90	/^SUBROUTINE wypos_28 /;"	s	module:wy_pos
wypos_3	wypos.f90	/^SUBROUTINE wypos_3 /;"	s	module:wy_pos
wypos_30	wypos.f90	/^SUBROUTINE wypos_30 /;"	s	module:wy_pos
wypos_31	wypos.f90	/^SUBROUTINE wypos_31 /;"	s	module:wy_pos
wypos_32	wypos.f90	/^SUBROUTINE wypos_32 /;"	s	module:wy_pos
wypos_34	wypos.f90	/^SUBROUTINE wypos_34 /;"	s	module:wy_pos
wypos_35	wypos.f90	/^SUBROUTINE wypos_35 /;"	s	module:wy_pos
wypos_36	wypos.f90	/^SUBROUTINE wypos_36 /;"	s	module:wy_pos
wypos_37	wypos.f90	/^SUBROUTINE wypos_37 /;"	s	module:wy_pos
wypos_38	wypos.f90	/^SUBROUTINE wypos_38 /;"	s	module:wy_pos
wypos_39	wypos.f90	/^SUBROUTINE wypos_39 /;"	s	module:wy_pos
wypos_40	wypos.f90	/^SUBROUTINE wypos_40 /;"	s	module:wy_pos
wypos_41	wypos.f90	/^SUBROUTINE wypos_41 /;"	s	module:wy_pos
wypos_42	wypos.f90	/^SUBROUTINE wypos_42 /;"	s	module:wy_pos
wypos_43	wypos.f90	/^SUBROUTINE wypos_43 /;"	s	module:wy_pos
wypos_44	wypos.f90	/^SUBROUTINE wypos_44 /;"	s	module:wy_pos
wypos_45	wypos.f90	/^SUBROUTINE wypos_45 /;"	s	module:wy_pos
wypos_46	wypos.f90	/^SUBROUTINE wypos_46 /;"	s	module:wy_pos
wypos_47	wypos.f90	/^SUBROUTINE wypos_47 /;"	s	module:wy_pos
wypos_48	wypos.f90	/^SUBROUTINE wypos_48 /;"	s	module:wy_pos
wypos_49	wypos.f90	/^SUBROUTINE wypos_49 /;"	s	module:wy_pos
wypos_5	wypos.f90	/^SUBROUTINE wypos_5 /;"	s	module:wy_pos
wypos_50	wypos.f90	/^SUBROUTINE wypos_50 /;"	s	module:wy_pos
wypos_51	wypos.f90	/^SUBROUTINE wypos_51 /;"	s	module:wy_pos
wypos_52	wypos.f90	/^SUBROUTINE wypos_52 /;"	s	module:wy_pos
wypos_53	wypos.f90	/^SUBROUTINE wypos_53 /;"	s	module:wy_pos
wypos_54	wypos.f90	/^SUBROUTINE wypos_54 /;"	s	module:wy_pos
wypos_55	wypos.f90	/^SUBROUTINE wypos_55 /;"	s	module:wy_pos
wypos_56	wypos.f90	/^SUBROUTINE wypos_56 /;"	s	module:wy_pos
wypos_57	wypos.f90	/^SUBROUTINE wypos_57 /;"	s	module:wy_pos
wypos_58	wypos.f90	/^SUBROUTINE wypos_58 /;"	s	module:wy_pos
wypos_59	wypos.f90	/^SUBROUTINE wypos_59 /;"	s	module:wy_pos
wypos_6	wypos.f90	/^SUBROUTINE wypos_6 /;"	s	module:wy_pos
wypos_60	wypos.f90	/^SUBROUTINE wypos_60 /;"	s	module:wy_pos
wypos_61	wypos.f90	/^SUBROUTINE wypos_61 /;"	s	module:wy_pos
wypos_62	wypos.f90	/^SUBROUTINE wypos_62 /;"	s	module:wy_pos
wypos_63	wypos.f90	/^SUBROUTINE wypos_63 /;"	s	module:wy_pos
wypos_64	wypos.f90	/^SUBROUTINE wypos_64 /;"	s	module:wy_pos
wypos_65	wypos.f90	/^SUBROUTINE wypos_65 /;"	s	module:wy_pos
wypos_66	wypos.f90	/^SUBROUTINE wypos_66 /;"	s	module:wy_pos
wypos_67	wypos.f90	/^SUBROUTINE wypos_67 /;"	s	module:wy_pos
wypos_68	wypos.f90	/^SUBROUTINE wypos_68 /;"	s	module:wy_pos
wypos_69	wypos.f90	/^SUBROUTINE wypos_69 /;"	s	module:wy_pos
wypos_70	wypos.f90	/^SUBROUTINE wypos_70 /;"	s	module:wy_pos
wypos_71	wypos.f90	/^SUBROUTINE wypos_71 /;"	s	module:wy_pos
wypos_72	wypos.f90	/^SUBROUTINE wypos_72 /;"	s	module:wy_pos
wypos_73	wypos.f90	/^SUBROUTINE wypos_73 /;"	s	module:wy_pos
wypos_74	wypos.f90	/^SUBROUTINE wypos_74 /;"	s	module:wy_pos
wypos_75	wypos.f90	/^SUBROUTINE wypos_75 /;"	s	module:wy_pos
wypos_77	wypos.f90	/^SUBROUTINE wypos_77 /;"	s	module:wy_pos
wypos_79	wypos.f90	/^SUBROUTINE wypos_79 /;"	s	module:wy_pos
wypos_8	wypos.f90	/^SUBROUTINE wypos_8 /;"	s	module:wy_pos
wypos_80	wypos.f90	/^SUBROUTINE wypos_80 /;"	s	module:wy_pos
wypos_81	wypos.f90	/^SUBROUTINE wypos_81 /;"	s	module:wy_pos
wypos_82	wypos.f90	/^SUBROUTINE wypos_82 /;"	s	module:wy_pos
wypos_83	wypos.f90	/^SUBROUTINE wypos_83 /;"	s	module:wy_pos
wypos_84	wypos.f90	/^SUBROUTINE wypos_84 /;"	s	module:wy_pos
wypos_85	wypos.f90	/^SUBROUTINE wypos_85 /;"	s	module:wy_pos
wypos_86	wypos.f90	/^SUBROUTINE wypos_86 /;"	s	module:wy_pos
wypos_87	wypos.f90	/^SUBROUTINE wypos_87 /;"	s	module:wy_pos
wypos_88	wypos.f90	/^SUBROUTINE wypos_88 /;"	s	module:wy_pos
wypos_89	wypos.f90	/^SUBROUTINE wypos_89 /;"	s	module:wy_pos
wypos_90	wypos.f90	/^SUBROUTINE wypos_90 /;"	s	module:wy_pos
wypos_91	wypos.f90	/^SUBROUTINE wypos_91 /;"	s	module:wy_pos
wypos_92	wypos.f90	/^SUBROUTINE wypos_92 /;"	s	module:wy_pos
wypos_93	wypos.f90	/^SUBROUTINE wypos_93 /;"	s	module:wy_pos
wypos_94	wypos.f90	/^SUBROUTINE wypos_94 /;"	s	module:wy_pos
wypos_95	wypos.f90	/^SUBROUTINE wypos_95 /;"	s	module:wy_pos
wypos_96	wypos.f90	/^SUBROUTINE wypos_96 /;"	s	module:wy_pos
wypos_97	wypos.f90	/^SUBROUTINE wypos_97 /;"	s	module:wy_pos
wypos_98	wypos.f90	/^SUBROUTINE wypos_98 /;"	s	module:wy_pos
wypos_99	wypos.f90	/^SUBROUTINE wypos_99 /;"	s	module:wy_pos
x_gamma_extrapolation	input_parameters.f90	/^        LOGICAL  :: x_gamma_extrapolation /;"	v	module:input_parameters
x_gamma_extrapolation	qes_types_module.f90	/^    LOGICAL :: x_gamma_extrapolation$/;"	k	type:hybrid_type
x_gamma_extrapolation_ispresent	qes_types_module.f90	/^    LOGICAL  :: x_gamma_extrapolation_ispresent /;"	k	type:hybrid_type
xaxis	bz_form.f90	/^    INTEGER :: xaxis,/;"	k	type:bz
xc	funct.f90	/^subroutine xc /;"	s	module:funct
xc_f90_kind	libxc.f90	/^  integer, public, parameter :: xc_f90_kind /;"	v	module:xc_f90_types_m
xc_f90_lib_m	libxc.f90	/^module xc_f90_lib_m$/;"	m
xc_f90_pointer_t	libxc.f90	/^  type xc_f90_pointer_t$/;"	t	module:xc_f90_types_m
xc_f90_types_m	libxc.f90	/^module xc_f90_types_m$/;"	m
xc_rVV10	xc_rVV10.f90	/^  SUBROUTINE xc_rVV10(/;"	s	module:rVV10
xc_spin	funct.f90	/^subroutine xc_spin /;"	s	module:funct
xc_spin_vec	funct.f90	/^subroutine xc_spin_vec /;"	s	module:funct
xc_vdW_DF	xc_vdW_DF.f90	/^  SUBROUTINE xc_vdW_DF /;"	s	module:vdW_DF
xc_vdW_DF_spin	xc_vdW_DF.f90	/^  SUBROUTINE xc_vdW_DF_spin /;"	s	module:vdW_DF
xdm	input_parameters.f90	/^        LOGICAL :: xdm /;"	v	module:input_parameters
xdm_a1	input_parameters.f90	/^        REAL(DP) :: xdm_a1 /;"	v	module:input_parameters
xdm_a1	qes_types_module.f90	/^    REAL(DP) :: xdm_a1$/;"	k	type:vdW_type
xdm_a1_ispresent	qes_types_module.f90	/^    LOGICAL  :: xdm_a1_ispresent /;"	k	type:vdW_type
xdm_a2	input_parameters.f90	/^        REAL(DP) :: xdm_a2 /;"	v	module:input_parameters
xdm_a2	qes_types_module.f90	/^    REAL(DP) :: xdm_a2$/;"	k	type:vdW_type
xdm_a2_ispresent	qes_types_module.f90	/^    LOGICAL  :: xdm_a2_ispresent /;"	k	type:vdW_type
xi	bz_form.f90	/^    REAL(DP) :: xi(/;"	k	type:bz
xk	input_parameters.f90	/^        REAL(DP), ALLOCATABLE :: xk(/;"	v	module:input_parameters
xlm	paw_variables.f90	/^    INTEGER,PARAMETER    :: xlm /;"	v	module:paw_variables
xmin	pseudo_types.f90	/^     REAL(DP) :: xmin /;"	k	type:pseudo_upf
xmin	radial_grids.f90	/^  REAL(DP) :: &$/;"	k	type:radial_grid_type
xml_format	qes_types_module.f90	/^    CHARACTER(len=256) :: xml_format$/;"	k	type:xml_format_type
xml_format	qes_types_module.f90	/^    TYPE(xml_format_/;"	k	type:general_info_type
xml_format_type	qes_types_module.f90	/^  TYPE :: xml_format_type$/;"	t	module:qes_types_module
xmloutput	input_parameters.f90	/^      LOGICAL :: xmloutput /;"	v	module:input_parameters
xmloutputunit	io_global.f90	/^  INTEGER :: xmloutputunit /;"	v	module:io_global
xmlpun_schema	io_files.f90	/^  CHARACTER (LEN=20), PARAMETER :: xmlpun_schema /;"	v	module:io_files
xsf_datagrid_2d	xsf.f90	/^SUBROUTINE xsf_datagrid_2d /;"	s
xsf_datagrid_3d	xsf.f90	/^SUBROUTINE xsf_datagrid_3d /;"	s
xsf_fast_datagrid_3d	xsf.f90	/^SUBROUTINE xsf_fast_datagrid_3d /;"	s
xsf_struct	xsf.f90	/^SUBROUTINE xsf_struct /;"	s
yaxis	bz_form.f90	/^    INTEGER :: xaxis, yaxis,/;"	k	type:bz
yi	bz_form.f90	/^    REAL(DP) :: xi(3), yi(/;"	k	type:bz
ylm	paw_variables.f90	/^        REAL(DP),POINTER :: ylm(/;"	k	type:paw_radial_integrator
ylmr2	ylmr2.f90	/^subroutine ylmr2 /;"	s
yukawa	input_parameters.f90	/^        REAL(DP) :: yukawa /;"	v	module:input_parameters
zaxis	bz_form.f90	/^    INTEGER :: xaxis, yaxis, zaxis /;"	k	type:bz
zdotc_wrapper	zdotc_wrapper.f90	/^FUNCTION zdotc_wrapper(/;"	f
zerone	wyckoff.f90	/^   SUBROUTINE zerone(/;"	s	module:wyckoff
zgate	input_parameters.f90	/^        REAL(DP) :: zgate /;"	v	module:input_parameters
zgate	qes_types_module.f90	/^    REAL(DP) :: zgate$/;"	k	type:gate_settings_type
zgate_ispresent	qes_types_module.f90	/^    LOGICAL  :: zgate_ispresent /;"	k	type:gate_settings_type
zi	bz_form.f90	/^    REAL(DP) :: xi(3), yi(3), zi(/;"	k	type:bz
zmesh	pseudo_types.f90	/^     REAL(DP) :: zmesh /;"	k	type:pseudo_upf
zmesh	radial_grids.f90	/^       rmax,       & ! the maximum radial point$/;"	k	type:radial_grid_type
zp	pseudo_types.f90	/^     REAL(DP) :: zp /;"	k	type:pseudo_upf
zv	ions_base.f90	/^      REAL(DP) :: zv(/;"	v	module:ions_base
zvscal	zvscal.f90	/^SUBROUTINE zvscal(/;"	s
